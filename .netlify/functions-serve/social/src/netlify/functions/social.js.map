{
  "version": 3,
  "sources": ["../../../../../../Users/joao.lopes/Documents/gitlab/meme/node_modules/webidl-conversions/lib/index.js", "../../../../../../Users/joao.lopes/Documents/gitlab/meme/node_modules/whatwg-url/lib/utils.js", "../../../../../../Users/joao.lopes/Documents/gitlab/meme/node_modules/tr46/index.js", "../../../../../../Users/joao.lopes/Documents/gitlab/meme/node_modules/whatwg-url/lib/url-state-machine.js", "../../../../../../Users/joao.lopes/Documents/gitlab/meme/node_modules/whatwg-url/lib/URL-impl.js", "../../../../../../Users/joao.lopes/Documents/gitlab/meme/node_modules/whatwg-url/lib/URL.js", "../../../../../../Users/joao.lopes/Documents/gitlab/meme/node_modules/whatwg-url/lib/public-api.js", "../../../../../../Users/joao.lopes/Documents/gitlab/meme/node_modules/node-fetch/lib/index.js", "../../../../../../Users/joao.lopes/Documents/gitlab/meme/node_modules/isomorphic-fetch/fetch-npm-node.js", "../../../../../../Users/joao.lopes/Documents/gitlab/meme/node_modules/pureimage/dist/pureimage-umd.cjs", "../../../../../../Users/joao.lopes/Documents/gitlab/meme/node_modules/fuse.js/dist/fuse.common.js", "../../../../../../Users/joao.lopes/Documents/gitlab/meme/netlify/functions/social.ts"],
  "sourceRoot": "/var/folders/k0/n_xjj3251nbdg1__09brync00000gn/T/tmp-39075-p1UfrZi2Euzb",
  "sourcesContent": ["\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n", "\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n", "\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n", "\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n", "\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n", "\"use strict\";\n\nvar realFetch = require('node-fetch');\nmodule.exports = function(url, options) {\n\tif (/^\\/\\//.test(url)) {\n\t\turl = 'https:' + url;\n\t}\n\treturn realFetch.call(this, url, options);\n};\n\nif (!global.fetch) {\n\tglobal.fetch = module.exports;\n\tglobal.Response = realFetch.Response;\n\tglobal.Headers = realFetch.Headers;\n\tglobal.Request = realFetch.Request;\n}\n", "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('fs'), require('util'), require('stream'), require('zlib'), require('assert'), require('buffer')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'fs', 'util', 'stream', 'zlib', 'assert', 'buffer'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.PureImage = {}, global.require$$0, global.util, global.Stream, global.zlib, global.require$$0$1, global.require$$1));\n}(this, (function (exports, require$$0, util, Stream, zlib, require$$0$1, require$$1) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var require$$0__default = /*#__PURE__*/_interopDefaultLegacy(require$$0);\n    var util__default = /*#__PURE__*/_interopDefaultLegacy(util);\n    var Stream__default = /*#__PURE__*/_interopDefaultLegacy(Stream);\n    var zlib__default = /*#__PURE__*/_interopDefaultLegacy(zlib);\n    var require$$0__default$1 = /*#__PURE__*/_interopDefaultLegacy(require$$0$1);\n    var require$$1__default = /*#__PURE__*/_interopDefaultLegacy(require$$1);\n\n    /**\n     * Enumeration containing popular colors\n     * @enum {string}\n     */\n    const NAMED_COLORS = {\n        transparent: 0x00000000,\n        aliceblue: 0xf0f8ffff,\n        antiquewhite: 0xfaebd7ff,\n        aqua: 0x00ffffff,\n        aquamarine: 0x7fffd4ff,\n        azure: 0xf0ffffff,\n        beige: 0xf5f5dcff,\n        bisque: 0xffe4c4ff,\n        black: 0x000000ff,\n        blanchedalmond: 0xffebcdff,\n        blue: 0x0000ffff,\n        blueviolet: 0x8a2be2ff,\n        brown: 0xa52a2aff,\n        burlywood: 0xdeb887ff,\n        cadetblue: 0x5f9ea0ff,\n        chartreuse: 0x7fff00ff,\n        chocolate: 0xd2691eff,\n        coral: 0xff7f50ff,\n        cornflowerblue: 0x6495edff,\n        cornsilk: 0xfff8dcff,\n        crimson: 0xdc143cff,\n        cyan: 0x00ffffff,\n        darkblue: 0x00008bff,\n        darkcyan: 0x008b8bff,\n        darkgoldenrod: 0xb8860bff,\n        darkgray: 0xa9a9a9ff,\n        darkgreen: 0x006400ff,\n        darkgrey: 0xa9a9a9ff,\n        darkkhaki: 0xbdb76bff,\n        darkmagenta: 0x8b008bff,\n        darkolivegreen: 0x556b2fff,\n        darkorange: 0xff8c00ff,\n        darkorchid: 0x9932ccff,\n        darkred: 0x8b0000ff,\n        darksalmon: 0xe9967aff,\n        darkseagreen: 0x8fbc8fff,\n        darkslateblue: 0x483d8bff,\n        darkslategray: 0x2f4f4fff,\n        darkslategrey: 0x2f4f4fff,\n        darkturquoise: 0x00ced1ff,\n        darkviolet: 0x9400d3ff,\n        deeppink: 0xff1493ff,\n        deepskyblue: 0x00bfffff,\n        dimgray: 0x696969ff,\n        dimgrey: 0x696969ff,\n        dodgerblue: 0x1e90ffff,\n        firebrick: 0xb22222ff,\n        floralwhite: 0xfffaf0ff,\n        forestgreen: 0x228b22ff,\n        fuchsia: 0xff00ffff,\n        gainsboro: 0xdcdcdcff,\n        ghostwhite: 0xf8f8ffff,\n        gold: 0xffd700ff,\n        goldenrod: 0xdaa520ff,\n        gray: 0x808080ff,\n        green: 0x008000ff,\n        greenyellow: 0xadff2fff,\n        grey: 0x808080ff,\n        honeydew: 0xf0fff0ff,\n        hotpink: 0xff69b4ff,\n        indianred: 0xcd5c5cff,\n        indigo: 0x4b0082ff,\n        ivory: 0xfffff0ff,\n        khaki: 0xf0e68cff,\n        lavender: 0xe6e6faff,\n        lavenderblush: 0xfff0f5ff,\n        lawngreen: 0x7cfc00ff,\n        lemonchiffon: 0xfffacdff,\n        lightblue: 0xadd8e6ff,\n        lightcoral: 0xf08080ff,\n        lightcyan: 0xe0ffffff,\n        lightgoldenrodyellow: 0xfafad2ff,\n        lightgray: 0xd3d3d3ff,\n        lightgreen: 0x90ee90ff,\n        lightgrey: 0xd3d3d3ff,\n        lightpink: 0xffb6c1ff,\n        lightsalmon: 0xffa07aff,\n        lightseagreen: 0x20b2aaff,\n        lightskyblue: 0x87cefaff,\n        lightslategray: 0x778899ff,\n        lightslategrey: 0x778899ff,\n        lightsteelblue: 0xb0c4deff,\n        lightyellow: 0xffffe0ff,\n        lime: 0x00ff00ff,\n        limegreen: 0x32cd32ff,\n        linen: 0xfaf0e6ff,\n        magenta: 0xff00ffff,\n        maroon: 0x800000ff,\n        mediumaquamarine: 0x66cdaaff,\n        mediumblue: 0x0000cdff,\n        mediumorchid: 0xba55d3ff,\n        mediumpurple: 0x9370dbff,\n        mediumseagreen: 0x3cb371ff,\n        mediumslateblue: 0x7b68eeff,\n        mediumspringgreen: 0x00fa9aff,\n        mediumturquoise: 0x48d1ccff,\n        mediumvioletred: 0xc71585ff,\n        midnightblue: 0x191970ff,\n        mintcream: 0xf5fffaff,\n        mistyrose: 0xffe4e1ff,\n        moccasin: 0xffe4b5ff,\n        navajowhite: 0xffdeadff,\n        navy: 0x000080ff,\n        oldlace: 0xfdf5e6ff,\n        olive: 0x808000ff,\n        olivedrab: 0x6b8e23ff,\n        orange: 0xffa500ff,\n        orangered: 0xff4500ff,\n        orchid: 0xda70d6ff,\n        palegoldenrod: 0xeee8aaff,\n        palegreen: 0x98fb98ff,\n        paleturquoise: 0xafeeeeff,\n        palevioletred: 0xdb7093ff,\n        papayawhip: 0xffefd5ff,\n        peachpuff: 0xffdab9ff,\n        peru: 0xcd853fff,\n        pink: 0xffc0cbff,\n        plum: 0xdda0ddff,\n        powderblue: 0xb0e0e6ff,\n        purple: 0x800080ff,\n        rebeccapurple: 0x663399ff,\n        red: 0xff0000ff,\n        rosybrown: 0xbc8f8fff,\n        royalblue: 0x4169e1ff,\n        saddlebrown: 0x8b4513ff,\n        salmon: 0xfa8072ff,\n        sandybrown: 0xf4a460ff,\n        seagreen: 0x2e8b57ff,\n        seashell: 0xfff5eeff,\n        sienna: 0xa0522dff,\n        silver: 0xc0c0c0ff,\n        skyblue: 0x87ceebff,\n        slateblue: 0x6a5acdff,\n        slategray: 0x708090ff,\n        slategrey: 0x708090ff,\n        snow: 0xfffafaff,\n        springgreen: 0x00ff7fff,\n        steelblue: 0x4682b4ff,\n        tan: 0xd2b48cff,\n        teal: 0x008080ff,\n        thistle: 0xd8bfd8ff,\n        tomato: 0xff6347ff,\n        turquoise: 0x40e0d0ff,\n        violet: 0xee82eeff,\n        wheat: 0xf5deb3ff,\n        white: 0xffffffff,\n        whitesmoke: 0xf5f5f5ff,\n        yellow: 0xffff00ff,\n        yellowgreen: 0x9acd32ff\n    };\n\n    /**\n     * Represents a set of co-ordinates on a 2D plane\n     *\n     * @class Point\n     */\n    class Point {\n        /**\n         * Creates an instance of Point.\n         * @param {number} x X position\n         * @param {number} y Y position\n         *\n         * @memberof Point\n         */\n        constructor (x, y) {\n            /**\n             * @type {number}\n             */\n            this.x = x;\n\n            /**\n             * @type {number}\n             */\n            this.y = y;\n        }\n        clone() {\n            return new Point(this.x,this.y)\n        }\n        distance(pt) {\n            return Math.sqrt(\n                Math.pow(pt.x-this.x,2)+\n                Math.pow(pt.y-this.y,2)\n            )\n        }\n        add(pt) {\n            return new Point(this.x+pt.x, this.y+pt.y)\n        }\n        subtract(pt) {\n            return new Point(this.x-pt.x, this.y-pt.y)\n        }\n        magnitude() {\n            return Math.sqrt(this.dotProduct(this))\n        }\n        dotProduct(v) {\n            return this.x*v.x + this.y*v.y\n        }\n        divide(scalar) {\n            return new Point(this.x/scalar, this.y/scalar)\n        }\n        floor() {\n            return new Point(Math.floor(this.x), Math.floor(this.y))\n        }\n        round() {\n            return new Point(Math.round(this.x), Math.round(this.y))\n        }\n        unit() {\n            return this.divide(this.magnitude())\n        }\n        rotate(theta) {\n            return new Point(\n                Math.cos(theta)*this.x - Math.sin(theta)*this.y,\n                Math.sin(theta)*this.x + Math.cos(theta)*this.y\n            )\n        }\n        scale(scalar) {\n            return new Point(\n                this.x*scalar,\n                this.y*scalar\n            )\n        }\n        equals(pt) {\n            return this.x === pt.x && this.y === pt.y;\n        }\n    }\n\n    const toRad = (deg) => Math.PI/180*deg;\n\n\n    function calc_min_bounds(pts) {\n        let x1 = Number.POSITIVE_INFINITY;\n        let y1 = Number.POSITIVE_INFINITY;\n        let x2 = Number.NEGATIVE_INFINITY;\n        let y2 = Number.NEGATIVE_INFINITY;\n        pts.forEach(pt => {\n            x1 = Math.min(x1,pt.x);\n            y1 = Math.min(y1,pt.y);\n            x2 = Math.max(x2,pt.x);\n            y2 = Math.max(y2,pt.y);\n        });\n        return new Bounds(x1,y1,x2,y2)\n    }\n\n    class Bounds {\n        constructor(x1,y1,x2,y2) {\n            this.x1 = x1;\n            this.y1 = y1;\n            this.x2 = x2;\n            this.y2 = y2;\n        }\n        contains(pt) {\n            if(pt.x < this.x1) return false\n            if(pt.x >= this.x2) return false\n            if(pt.y < this.y1) return false\n            if(pt.y >= this.y2) return false\n            return true\n        }\n\n        intersect(bds) {\n            let x1 = Math.max(this.x1,bds.x1);\n            let y1 = Math.max(this.y1,bds.y1);\n            let x2 = Math.min(this.x2,bds.x2);\n            let y2 = Math.min(this.y2,bds.y2);\n            return new Bounds(x1,y1,x2,y2)\n        }\n    }\n\n    /**\n     * Create a line object represnting a set of two points in 2D space.\n     *\n     * Line objects can be constructed by passing in either 4 numbers (startX, startY, endX, endY) - or\n     * two {@link Point} objects representing `start` and `end` respectively\n     *\n     * @class Line\n     */\n    class Line {\n        /**\n         * Construct a Line using two {@link Point} objects\n         * .\n         * @param {Point} start An instance of {@link Point} containing X and Y co-ordinates\n         * @param {Point} end   An instance of {@link Point} containing X and Y co-ordinates\n         * @memberof Line\n         */\n        /**\n         * Construct a Line using 4 {@link number}s\n         *\n         * @param {number} startX Starting position on the X axis\n         * @param {number} startY Starting position on the Y axis\n         * @param {number} endX   Ending position on the X axis\n         * @param {number} endY   Ending position on the Y acis\n         * @memberof Line\n         */\n        constructor (){\n            if (arguments.length === 4) {\n\n                /**\n                 * @type {Point}\n                */\n                this.start = {};\n\n                /**\n                 * @type {Point}\n                */\n                this.end   = {};\n\n                [this.start.x, this.start.y, this.end.x, this.end.y] = arguments;\n                for(let argument_index in arguments) {\n                    if(arguments.hasOwnProperty(argument_index)) {\n                        let argument = arguments[argument_index];\n                        if(typeof argument !== 'number'){\n                            throw TypeError('When passing 4 arguments, only numbers may be passed');\n                        }\n                    }\n                }\n            } else if(arguments.length === 2) {\n                [this.start, this.end] = arguments;\n            } else {\n                throw Error('Please pass either two Point objects, or 4 integers to the constructor');\n            }\n        }\n\n        /**\n         * Get the line length\n         *\n         * @returns {number}\n         *\n         * @memberof Line\n         */\n        getLength() {\n            return Math.sqrt(\n                Math.pow(this.start.x - this.end.x, 2) + Math.pow(this.start.y - this.end.y, 2)\n            );\n        }\n\n        is_invalid() {\n            if(Number.isNaN(this.start.x)) return true\n            if(Number.isNaN(this.end.x)) return true\n            if(Number.isNaN(this.start.y)) return true\n            if(Number.isNaN(this.end.y)) return true\n            if(this.start.x > Number.MAX_SAFE_INTEGER) return true\n            if(this.start.y > Number.MAX_SAFE_INTEGER) return true\n            if(this.end.x > Number.MAX_SAFE_INTEGER) return true\n            if(this.end.y > Number.MAX_SAFE_INTEGER) return true\n            return false\n        }\n    }\n\n    /** @ignore */\n\n    function createCommonjsModule(fn) {\n      var module = { exports: {} };\n    \treturn fn(module, module.exports), module.exports;\n    }\n\n    var encoding = createCommonjsModule(function (module, exports) {\n\n    var cffStandardStrings = [\n        '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n        'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n        'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n        'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n        'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n        'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n        'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n        'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n        'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n        'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n        'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n        'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n        'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n        'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n        'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n        'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n        'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n        'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n        'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n        'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n        'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n        'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n        'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n        'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n        'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n        'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n        'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n        'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n        'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n        'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n        'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n        'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n        'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n        'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n        'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n        'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n        'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n        'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n        'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n        'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n        'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n        'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n        '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\n    var cffStandardEncoding = [\n        '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n        '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n        'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n        'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n        'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n        'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n        'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n        'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n        '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n        'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n        'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n        'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n        'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n        'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n        'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n        '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n        'lslash', 'oslash', 'oe', 'germandbls'];\n\n    var cffExpertEncoding = [\n        '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n        '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n        'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n        'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n        'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n        'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n        'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n        'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n        'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n        'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n        'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n        'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n        '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n        'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n        'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n        '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n        'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n        '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n        'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n        'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n        'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n        'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n        'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n        'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n        'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n        'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\n    var standardNames = [\n        '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n        'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n        'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n        'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n        'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n        'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n        'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n        'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n        'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n        'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n        'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n        'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n        'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n        'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n        'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n        'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n        'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n        'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n        'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n        'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n        'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n        'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n        'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n        'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n        'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n    // This is the encoding used for fonts created from scratch.\n    // It loops through all glyphs and finds the appropriate unicode value.\n    // Since it's linear time, other encodings will be faster.\n    function DefaultEncoding(font) {\n        this.font = font;\n    }\n\n    DefaultEncoding.prototype.charToGlyphIndex = function(c) {\n        var code = c.charCodeAt(0);\n        var glyphs = this.font.glyphs;\n        if (glyphs) {\n            for (var i = 0; i < glyphs.length; i += 1) {\n                var glyph = glyphs.get(i);\n                for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                    if (glyph.unicodes[j] === code) {\n                        return i;\n                    }\n                }\n            }\n        } else {\n            return null;\n        }\n    };\n\n    function CmapEncoding(cmap) {\n        this.cmap = cmap;\n    }\n\n    CmapEncoding.prototype.charToGlyphIndex = function(c) {\n        return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n    };\n\n    function CffEncoding(encoding, charset) {\n        this.encoding = encoding;\n        this.charset = charset;\n    }\n\n    CffEncoding.prototype.charToGlyphIndex = function(s) {\n        var code = s.charCodeAt(0);\n        var charName = this.encoding[code];\n        return this.charset.indexOf(charName);\n    };\n\n    function GlyphNames(post) {\n        var i;\n        switch (post.version) {\n        case 1:\n            this.names = exports.standardNames.slice();\n            break;\n        case 2:\n            this.names = new Array(post.numberOfGlyphs);\n            for (i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                    this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n                } else {\n                    this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n                }\n            }\n\n            break;\n        case 2.5:\n            this.names = new Array(post.numberOfGlyphs);\n            for (i = 0; i < post.numberOfGlyphs; i++) {\n                this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n            }\n\n            break;\n        case 3:\n            this.names = [];\n            break;\n        }\n    }\n\n    GlyphNames.prototype.nameToGlyphIndex = function(name) {\n        return this.names.indexOf(name);\n    };\n\n    GlyphNames.prototype.glyphIndexToName = function(gid) {\n        return this.names[gid];\n    };\n\n    function addGlyphNames(font) {\n        var glyph;\n        var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n        var charCodes = Object.keys(glyphIndexMap);\n\n        for (var i = 0; i < charCodes.length; i += 1) {\n            var c = charCodes[i];\n            var glyphIndex = glyphIndexMap[c];\n            glyph = font.glyphs.get(glyphIndex);\n            glyph.addUnicode(parseInt(c));\n        }\n\n        for (i = 0; i < font.glyphs.length; i += 1) {\n            glyph = font.glyphs.get(i);\n            if (font.cffEncoding) {\n                glyph.name = font.cffEncoding.charset[i];\n            } else {\n                glyph.name = font.glyphNames.glyphIndexToName(i);\n            }\n        }\n    }\n\n    exports.cffStandardStrings = cffStandardStrings;\n    exports.cffStandardEncoding = cffStandardEncoding;\n    exports.cffExpertEncoding = cffExpertEncoding;\n    exports.standardNames = standardNames;\n    exports.DefaultEncoding = DefaultEncoding;\n    exports.CmapEncoding = CmapEncoding;\n    exports.CffEncoding = CffEncoding;\n    exports.GlyphNames = GlyphNames;\n    exports.addGlyphNames = addGlyphNames;\n    });\n\n    // Geometric objects\n\n    // A b\u00E9zier path containing a set of path commands similar to a SVG path.\n    // Paths can be drawn on a context using `draw`.\n    function Path() {\n        this.commands = [];\n        this.fill = 'black';\n        this.stroke = null;\n        this.strokeWidth = 1;\n    }\n\n    Path.prototype.moveTo = function(x, y) {\n        this.commands.push({\n            type: 'M',\n            x: x,\n            y: y\n        });\n    };\n\n    Path.prototype.lineTo = function(x, y) {\n        this.commands.push({\n            type: 'L',\n            x: x,\n            y: y\n        });\n    };\n\n    Path.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n        this.commands.push({\n            type: 'C',\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            x: x,\n            y: y\n        });\n    };\n\n    Path.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n        this.commands.push({\n            type: 'Q',\n            x1: x1,\n            y1: y1,\n            x: x,\n            y: y\n        });\n    };\n\n    Path.prototype.close = Path.prototype.closePath = function() {\n        this.commands.push({\n            type: 'Z'\n        });\n    };\n\n    // Add the given path or list of commands to the commands of this path.\n    Path.prototype.extend = function(pathOrCommands) {\n        if (pathOrCommands.commands) {\n            pathOrCommands = pathOrCommands.commands;\n        }\n\n        Array.prototype.push.apply(this.commands, pathOrCommands);\n    };\n\n    // Draw the path to a 2D context.\n    Path.prototype.draw = function(ctx) {\n        ctx.beginPath();\n        for (var i = 0; i < this.commands.length; i += 1) {\n            var cmd = this.commands[i];\n            if (cmd.type === 'M') {\n                ctx.moveTo(cmd.x, cmd.y);\n            } else if (cmd.type === 'L') {\n                ctx.lineTo(cmd.x, cmd.y);\n            } else if (cmd.type === 'C') {\n                ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n            } else if (cmd.type === 'Q') {\n                ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n            } else if (cmd.type === 'Z') {\n                ctx.closePath();\n            }\n        }\n\n        if (this.fill) {\n            ctx.fillStyle = this.fill;\n            ctx.fill();\n        }\n\n        if (this.stroke) {\n            ctx.strokeStyle = this.stroke;\n            ctx.lineWidth = this.strokeWidth;\n            ctx.stroke();\n        }\n    };\n\n    // Convert the Path to a string of path data instructions\n    // See http://www.w3.org/TR/SVG/paths.html#PathData\n    // Parameters:\n    // - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\n    Path.prototype.toPathData = function(decimalPlaces) {\n        decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n        function floatToString(v) {\n            if (Math.round(v) === v) {\n                return '' + Math.round(v);\n            } else {\n                return v.toFixed(decimalPlaces);\n            }\n        }\n\n        function packValues() {\n            var s = '';\n            for (var i = 0; i < arguments.length; i += 1) {\n                var v = arguments[i];\n                if (v >= 0 && i > 0) {\n                    s += ' ';\n                }\n\n                s += floatToString(v);\n            }\n\n            return s;\n        }\n\n        var d = '';\n        for (var i = 0; i < this.commands.length; i += 1) {\n            var cmd = this.commands[i];\n            if (cmd.type === 'M') {\n                d += 'M' + packValues(cmd.x, cmd.y);\n            } else if (cmd.type === 'L') {\n                d += 'L' + packValues(cmd.x, cmd.y);\n            } else if (cmd.type === 'C') {\n                d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n            } else if (cmd.type === 'Q') {\n                d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n            } else if (cmd.type === 'Z') {\n                d += 'Z';\n            }\n        }\n\n        return d;\n    };\n\n    // Convert the path to a SVG <path> element, as a string.\n    // Parameters:\n    // - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\n    Path.prototype.toSVG = function(decimalPlaces) {\n        var svg = '<path d=\"';\n        svg += this.toPathData(decimalPlaces);\n        svg += '\"';\n        if (this.fill & this.fill !== 'black') {\n            if (this.fill === null) {\n                svg += ' fill=\"none\"';\n            } else {\n                svg += ' fill=\"' + this.fill + '\"';\n            }\n        }\n\n        if (this.stroke) {\n            svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n        }\n\n        svg += '/>';\n        return svg;\n    };\n\n    var Path_1 = Path;\n\n    var path = {\n    \tPath: Path_1\n    };\n\n    var check = createCommonjsModule(function (module, exports) {\n\n    // Precondition function that checks if the given predicate is true.\n    // If not, it will throw an error.\n    exports.argument = function(predicate, message) {\n        if (!predicate) {\n            throw new Error(message);\n        }\n    };\n\n    // Precondition function that checks if the given assertion is true.\n    // If not, it will throw an error.\n    exports.assert = exports.argument;\n    });\n\n    var LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\n    var LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\n    var decode$1 = {};\n    var encode$2 = {};\n    var sizeOf$1 = {};\n\n    // Return a function that always returns the same value.\n    function constant(v) {\n        return function() {\n            return v;\n        };\n    }\n\n    // OpenType data types //////////////////////////////////////////////////////\n\n    // Convert an 8-bit unsigned integer to a list of 1 byte.\n    encode$2.BYTE = function(v) {\n        check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n        return [v];\n    };\n\n    sizeOf$1.BYTE = constant(1);\n\n    // Convert a 8-bit signed integer to a list of 1 byte.\n    encode$2.CHAR = function(v) {\n        return [v.charCodeAt(0)];\n    };\n\n    sizeOf$1.CHAR = constant(1);\n\n    // Convert an ASCII string to a list of bytes.\n    encode$2.CHARARRAY = function(v) {\n        var b = [];\n        for (var i = 0; i < v.length; i += 1) {\n            b.push(v.charCodeAt(i));\n        }\n\n        return b;\n    };\n\n    sizeOf$1.CHARARRAY = function(v) {\n        return v.length;\n    };\n\n    // Convert a 16-bit unsigned integer to a list of 2 bytes.\n    encode$2.USHORT = function(v) {\n        return [(v >> 8) & 0xFF, v & 0xFF];\n    };\n\n    sizeOf$1.USHORT = constant(2);\n\n    // Convert a 16-bit signed integer to a list of 2 bytes.\n    encode$2.SHORT = function(v) {\n        // Two's complement\n        if (v >= LIMIT16) {\n            v = -(2 * LIMIT16 - v);\n        }\n\n        return [(v >> 8) & 0xFF, v & 0xFF];\n    };\n\n    sizeOf$1.SHORT = constant(2);\n\n    // Convert a 24-bit unsigned integer to a list of 3 bytes.\n    encode$2.UINT24 = function(v) {\n        return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n    };\n\n    sizeOf$1.UINT24 = constant(3);\n\n    // Convert a 32-bit unsigned integer to a list of 4 bytes.\n    encode$2.ULONG = function(v) {\n        return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n    };\n\n    sizeOf$1.ULONG = constant(4);\n\n    // Convert a 32-bit unsigned integer to a list of 4 bytes.\n    encode$2.LONG = function(v) {\n        // Two's complement\n        if (v >= LIMIT32) {\n            v = -(2 * LIMIT32 - v);\n        }\n\n        return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n    };\n\n    sizeOf$1.LONG = constant(4);\n\n    encode$2.FIXED = encode$2.ULONG;\n    sizeOf$1.FIXED = sizeOf$1.ULONG;\n\n    encode$2.FWORD = encode$2.SHORT;\n    sizeOf$1.FWORD = sizeOf$1.SHORT;\n\n    encode$2.UFWORD = encode$2.USHORT;\n    sizeOf$1.UFWORD = sizeOf$1.USHORT;\n\n    // FIXME Implement LONGDATETIME\n    encode$2.LONGDATETIME = function() {\n        return [0, 0, 0, 0, 0, 0, 0, 0];\n    };\n\n    sizeOf$1.LONGDATETIME = constant(8);\n\n    // Convert a 4-char tag to a list of 4 bytes.\n    encode$2.TAG = function(v) {\n        check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n        return [v.charCodeAt(0),\n                v.charCodeAt(1),\n                v.charCodeAt(2),\n                v.charCodeAt(3)];\n    };\n\n    sizeOf$1.TAG = constant(4);\n\n    // CFF data types ///////////////////////////////////////////////////////////\n\n    encode$2.Card8 = encode$2.BYTE;\n    sizeOf$1.Card8 = sizeOf$1.BYTE;\n\n    encode$2.Card16 = encode$2.USHORT;\n    sizeOf$1.Card16 = sizeOf$1.USHORT;\n\n    encode$2.OffSize = encode$2.BYTE;\n    sizeOf$1.OffSize = sizeOf$1.BYTE;\n\n    encode$2.SID = encode$2.USHORT;\n    sizeOf$1.SID = sizeOf$1.USHORT;\n\n    // Convert a numeric operand or charstring number to a variable-size list of bytes.\n    encode$2.NUMBER = function(v) {\n        if (v >= -107 && v <= 107) {\n            return [v + 139];\n        } else if (v >= 108 && v <= 1131) {\n            v = v - 108;\n            return [(v >> 8) + 247, v & 0xFF];\n        } else if (v >= -1131 && v <= -108) {\n            v = -v - 108;\n            return [(v >> 8) + 251, v & 0xFF];\n        } else if (v >= -32768 && v <= 32767) {\n            return encode$2.NUMBER16(v);\n        } else {\n            return encode$2.NUMBER32(v);\n        }\n    };\n\n    sizeOf$1.NUMBER = function(v) {\n        return encode$2.NUMBER(v).length;\n    };\n\n    // Convert a signed number between -32768 and +32767 to a three-byte value.\n    // This ensures we always use three bytes, but is not the most compact format.\n    encode$2.NUMBER16 = function(v) {\n        return [28, (v >> 8) & 0xFF, v & 0xFF];\n    };\n\n    sizeOf$1.NUMBER16 = constant(3);\n\n    // Convert a signed number between -(2^31) and +(2^31-1) to a five-byte value.\n    // This is useful if you want to be sure you always use four bytes,\n    // at the expense of wasting a few bytes for smaller numbers.\n    encode$2.NUMBER32 = function(v) {\n        return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n    };\n\n    sizeOf$1.NUMBER32 = constant(5);\n\n    encode$2.REAL = function(v) {\n        var value = v.toString();\n\n        // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n        // This code converts it back to a number without the epsilon.\n        var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n        if (m) {\n            var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n            value = (Math.round(v * epsilon) / epsilon).toString();\n        }\n\n        var nibbles = '';\n        var i;\n        var ii;\n        for (i = 0, ii = value.length; i < ii; i += 1) {\n            var c = value[i];\n            if (c === 'e') {\n                nibbles += value[++i] === '-' ? 'c' : 'b';\n            } else if (c === '.') {\n                nibbles += 'a';\n            } else if (c === '-') {\n                nibbles += 'e';\n            } else {\n                nibbles += c;\n            }\n        }\n\n        nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n        var out = [30];\n        for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n            out.push(parseInt(nibbles.substr(i, 2), 16));\n        }\n\n        return out;\n    };\n\n    sizeOf$1.REAL = function(v) {\n        return encode$2.REAL(v).length;\n    };\n\n    encode$2.NAME = encode$2.CHARARRAY;\n    sizeOf$1.NAME = sizeOf$1.CHARARRAY;\n\n    encode$2.STRING = encode$2.CHARARRAY;\n    sizeOf$1.STRING = sizeOf$1.CHARARRAY;\n\n    decode$1.UTF16 = function(data, offset, numBytes) {\n        var codePoints = [];\n        var numChars = numBytes / 2;\n        for (var j = 0; j < numChars; j++, offset += 2) {\n            codePoints[j] = data.getUint16(offset);\n        }\n\n        return String.fromCharCode.apply(null, codePoints);\n    };\n\n    // Convert a JavaScript string to UTF16-BE.\n    encode$2.UTF16 = function(v) {\n        var b = [];\n        for (var i = 0; i < v.length; i += 1) {\n            var codepoint = v.charCodeAt(i);\n            b.push((codepoint >> 8) & 0xFF);\n            b.push(codepoint & 0xFF);\n        }\n\n        return b;\n    };\n\n    sizeOf$1.UTF16 = function(v) {\n        return v.length * 2;\n    };\n\n    // Data for converting old eight-bit Macintosh encodings to Unicode.\n    // This representation is optimized for decoding; encoding is slower\n    // and needs more memory. The assumption is that all opentype.js users\n    // want to open fonts, but saving a font will be comperatively rare\n    // so it can be more expensive. Keyed by IANA character set name.\n    //\n    // Python script for generating these strings:\n    //\n    //     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n    //     print(s.encode('utf-8'))\n    var eightBitMacEncodings = {\n        'x-mac-croatian':  // Python: 'mac_croatian'\n            '\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u0160\u2122\u00B4\u00A8\u2260\u017D\u00D8\u221E\u00B1\u2264\u2265\u2206\u00B5\u2202\u2211\u220F\u0161\u222B\u00AA\u00BA\u03A9\u017E\u00F8' +\n            '\u00BF\u00A1\u00AC\u221A\u0192\u2248\u0106\u00AB\u010C\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\uF8FF\u00A9\u2044\u20AC\u2039\u203A\u00C6\u00BB\u2013\u00B7\u201A\u201E\u2030\u00C2\u0107\u00C1\u010D\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\u0111\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u03C0\u00CB\u02DA\u00B8\u00CA\u00E6\u02C7',\n        'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n            '\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u0490\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A' +\n            '\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E',\n        'x-mac-gaelic':\n            // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n            '\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u1E02\u00B1\u2264\u2265\u1E03\u010A\u010B\u1E0A\u1E0B\u1E1E\u1E1F\u0120\u0121\u1E40\u00E6\u00F8' +\n            '\u1E41\u1E56\u1E57\u027C\u0192\u017F\u1E60\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u1E61\u1E9B\u00FF\u0178\u1E6A\u20AC\u2039\u203A\u0176\u0177\u1E6B\u00B7\u1EF2\u1EF3\u204A\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\u2663\u00D2\u00DA\u00DB\u00D9\u0131\u00DD\u00FD\u0174\u0175\u1E84\u1E85\u1E80\u1E81\u1E82\u1E83',\n        'x-mac-greek':  // Python: 'mac_greek'\n            '\u00C4\u00B9\u00B2\u00C9\u00B3\u00D6\u00DC\u0385\u00E0\u00E2\u00E4\u0384\u00A8\u00E7\u00E9\u00E8\u00EA\u00EB\u00A3\u2122\u00EE\u00EF\u2022\u00BD\u2030\u00F4\u00F6\u00A6\u20AC\u00F9\u00FB\u00FC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\u00DF\u00AE\u00A9\u03A3\u03AA\u00A7\u2260\u00B0\u00B7\u0391\u00B1\u2264\u2265\u00A5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9' +\n            '\u03AC\u039D\u00AC\u039F\u03A1\u2248\u03A4\u00AB\u00BB\u2026\u00A0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\u00F7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\\u00AD',\n        'x-mac-icelandic':  // Python: 'mac_iceland'\n            '\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u00DD\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u03A9\u00E6\u00F8' +\n            '\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u20AC\u00D0\u00F0\u00DE\u00FE\u00FD\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uF8FF\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7',\n        'x-mac-inuit':\n            // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n            '\u1403\u1404\u1405\u1406\u140A\u140B\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144E\u144F\u1450\u1451\u1455\u1456\u1466\u146D\u146E\u146F\u1470\u1472\u1473\u1483\u148B\u148C\u148D\u148E\u1490\u1491\u00B0\u14A1\u14A5\u14A6\u2022\u00B6\u14A7\u00AE\u00A9\u2122\u14A8\u14AA\u14AB\u14BB\u14C2\u14C3\u14C4\u14C5\u14C7\u14C8\u14D0\u14EF\u14F0\u14F1\u14F2\u14F4\u14F5\u1505\u14D5\u14D6\u14D7' +\n            '\u14D8\u14DA\u14DB\u14EA\u1528\u1529\u152A\u152B\u152D\u2026\u00A0\u152E\u153E\u1555\u1556\u1557\u2013\u2014\u201C\u201D\u2018\u2019\u1558\u1559\u155A\u155D\u1546\u1547\u1548\u1549\u154B\u154C\u1550\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u157C\u0141\u0142',\n        'x-mac-ce':  // Python: 'mac_latin2'\n            '\u00C4\u0100\u0101\u00C9\u0104\u00D6\u00DC\u00E1\u0105\u010C\u00E4\u010D\u0106\u0107\u00E9\u0179\u017A\u010E\u00ED\u010F\u0112\u0113\u0116\u00F3\u0117\u00F4\u00F6\u00F5\u00FA\u011A\u011B\u00FC\u2020\u00B0\u0118\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u0119\u00A8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145' +\n            '\u0146\u0143\u00AC\u221A\u0144\u0147\u2206\u00AB\u00BB\u2026\u00A0\u0148\u0150\u00D5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\u00C1\u0164\u0165\u00CD\u017D\u017E\u016A\u00D3\u00D4\u016B\u016E\u00DA\u016F\u0170\u0171\u0172\u0173\u00DD\u00FD\u0137\u017B\u0141\u017C\u0122\u02C7',\n        macintosh:  // Python: 'mac_roman'\n            '\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u03A9\u00E6\u00F8' +\n            '\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u20AC\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uF8FF\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7',\n        'x-mac-romanian':  // Python: 'mac_romanian'\n            '\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u0102\u0218\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u03A9\u0103\u0219' +\n            '\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u20AC\u2039\u203A\u021A\u021B\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uF8FF\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7',\n        'x-mac-turkish':  // Python: 'mac_turkish'\n            '\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u03A9\u00E6\u00F8' +\n            '\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uF8FF\u00D2\u00DA\u00DB\u00D9\uF8A0\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7'\n    };\n\n    // Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n    // string, or 'undefined' if the encoding is unsupported. For example, we do\n    // not support Chinese, Japanese or Korean because these would need large\n    // mapping tables.\n    decode$1.MACSTRING = function(dataView, offset, dataLength, encoding) {\n        var table = eightBitMacEncodings[encoding];\n        if (table === undefined) {\n            return undefined;\n        }\n\n        var result = '';\n        for (var i = 0; i < dataLength; i++) {\n            var c = dataView.getUint8(offset + i);\n            // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n            // mapped to U+0000..U+007F; we only need to look up the others.\n            if (c <= 0x7F) {\n                result += String.fromCharCode(c);\n            } else {\n                result += table[c & 0x7F];\n            }\n        }\n\n        return result;\n    };\n\n    // Helper function for encode.MACSTRING. Returns a dictionary for mapping\n    // Unicode character codes to their 8-bit MacOS equivalent. This table\n    // is not exactly a super cheap data structure, but we do not care because\n    // encoding Macintosh strings is only rarely needed in typical applications.\n    var macEncodingTableCache = typeof WeakMap === 'function' && new WeakMap();\n    var macEncodingCacheKeys;\n    var getMacEncodingTable = function(encoding) {\n        // Since we use encoding as a cache key for WeakMap, it has to be\n        // a String object and not a literal. And at least on NodeJS 2.10.1,\n        // WeakMap requires that the same String instance is passed for cache hits.\n        if (!macEncodingCacheKeys) {\n            macEncodingCacheKeys = {};\n            for (var e in eightBitMacEncodings) {\n                /*jshint -W053 */  // Suppress \"Do not use String as a constructor.\"\n                macEncodingCacheKeys[e] = new String(e);\n            }\n        }\n\n        var cacheKey = macEncodingCacheKeys[encoding];\n        if (cacheKey === undefined) {\n            return undefined;\n        }\n\n        // We can't do \"if (cache.has(key)) {return cache.get(key)}\" here:\n        // since garbage collection may run at any time, it could also kick in\n        // between the calls to cache.has() and cache.get(). In that case,\n        // we would return 'undefined' even though we do support the encoding.\n        if (macEncodingTableCache) {\n            var cachedTable = macEncodingTableCache.get(cacheKey);\n            if (cachedTable !== undefined) {\n                return cachedTable;\n            }\n        }\n\n        var decodingTable = eightBitMacEncodings[encoding];\n        if (decodingTable === undefined) {\n            return undefined;\n        }\n\n        var encodingTable = {};\n        for (var i = 0; i < decodingTable.length; i++) {\n            encodingTable[decodingTable.charCodeAt(i)] = i + 0x80;\n        }\n\n        if (macEncodingTableCache) {\n            macEncodingTableCache.set(cacheKey, encodingTable);\n        }\n\n        return encodingTable;\n    };\n\n    // Encodes an old-style Macintosh string. Returns a byte array upon success.\n    // If the requested encoding is unsupported, or if the input string contains\n    // a character that cannot be expressed in the encoding, the function returns\n    // 'undefined'.\n    encode$2.MACSTRING = function(str, encoding) {\n        var table = getMacEncodingTable(encoding);\n        if (table === undefined) {\n            return undefined;\n        }\n\n        var result = [];\n        for (var i = 0; i < str.length; i++) {\n            var c = str.charCodeAt(i);\n\n            // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n            // mapped to U+0000..U+007F; we only need to look up the others.\n            if (c >= 0x80) {\n                c = table[c];\n                if (c === undefined) {\n                    // str contains a Unicode character that cannot be encoded\n                    // in the requested encoding.\n                    return undefined;\n                }\n            }\n\n            result.push(c);\n        }\n\n        return result;\n    };\n\n    sizeOf$1.MACSTRING = function(str, encoding) {\n        var b = encode$2.MACSTRING(str, encoding);\n        if (b !== undefined) {\n            return b.length;\n        } else {\n            return 0;\n        }\n    };\n\n    // Convert a list of values to a CFF INDEX structure.\n    // The values should be objects containing name / type / value.\n    encode$2.INDEX = function(l) {\n        var i;\n        //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n        //    dataSize, i, v;\n        // Because we have to know which data type to use to encode the offsets,\n        // we have to go through the values twice: once to encode the data and\n        // calculate the offets, then again to encode the offsets using the fitting data type.\n        var offset = 1; // First offset is always 1.\n        var offsets = [offset];\n        var data = [];\n        var dataSize = 0;\n        for (i = 0; i < l.length; i += 1) {\n            var v = encode$2.OBJECT(l[i]);\n            Array.prototype.push.apply(data, v);\n            dataSize += v.length;\n            offset += v.length;\n            offsets.push(offset);\n        }\n\n        if (data.length === 0) {\n            return [0, 0];\n        }\n\n        var encodedOffsets = [];\n        var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n        var offsetEncoder = [undefined, encode$2.BYTE, encode$2.USHORT, encode$2.UINT24, encode$2.ULONG][offSize];\n        for (i = 0; i < offsets.length; i += 1) {\n            var encodedOffset = offsetEncoder(offsets[i]);\n            Array.prototype.push.apply(encodedOffsets, encodedOffset);\n        }\n\n        return Array.prototype.concat(encode$2.Card16(l.length),\n                               encode$2.OffSize(offSize),\n                               encodedOffsets,\n                               data);\n    };\n\n    sizeOf$1.INDEX = function(v) {\n        return encode$2.INDEX(v).length;\n    };\n\n    // Convert an object to a CFF DICT structure.\n    // The keys should be numeric.\n    // The values should be objects containing name / type / value.\n    encode$2.DICT = function(m) {\n        var d = [];\n        var keys = Object.keys(m);\n        var length = keys.length;\n\n        for (var i = 0; i < length; i += 1) {\n            // Object.keys() return string keys, but our keys are always numeric.\n            var k = parseInt(keys[i], 0);\n            var v = m[k];\n            // Value comes before the key.\n            d = d.concat(encode$2.OPERAND(v.value, v.type));\n            d = d.concat(encode$2.OPERATOR(k));\n        }\n\n        return d;\n    };\n\n    sizeOf$1.DICT = function(m) {\n        return encode$2.DICT(m).length;\n    };\n\n    encode$2.OPERATOR = function(v) {\n        if (v < 1200) {\n            return [v];\n        } else {\n            return [12, v - 1200];\n        }\n    };\n\n    encode$2.OPERAND = function(v, type) {\n        var d = [];\n        if (Array.isArray(type)) {\n            for (var i = 0; i < type.length; i += 1) {\n                check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n                d = d.concat(encode$2.OPERAND(v[i], type[i]));\n            }\n        } else {\n            if (type === 'SID') {\n                d = d.concat(encode$2.NUMBER(v));\n            } else if (type === 'offset') {\n                // We make it easy for ourselves and always encode offsets as\n                // 4 bytes. This makes offset calculation for the top dict easier.\n                d = d.concat(encode$2.NUMBER32(v));\n            } else if (type === 'number') {\n                d = d.concat(encode$2.NUMBER(v));\n            } else if (type === 'real') {\n                d = d.concat(encode$2.REAL(v));\n            } else {\n                throw new Error('Unknown operand type ' + type);\n                // FIXME Add support for booleans\n            }\n        }\n\n        return d;\n    };\n\n    encode$2.OP = encode$2.BYTE;\n    sizeOf$1.OP = sizeOf$1.BYTE;\n\n    // memoize charstring encoding using WeakMap if available\n    var wmm = typeof WeakMap === 'function' && new WeakMap();\n    // Convert a list of CharString operations to bytes.\n    encode$2.CHARSTRING = function(ops) {\n        // See encode.MACSTRING for why we don't do \"if (wmm && wmm.has(ops))\".\n        if (wmm) {\n            var cachedValue = wmm.get(ops);\n            if (cachedValue !== undefined) {\n                return cachedValue;\n            }\n        }\n\n        var d = [];\n        var length = ops.length;\n\n        for (var i = 0; i < length; i += 1) {\n            var op = ops[i];\n            d = d.concat(encode$2[op.type](op.value));\n        }\n\n        if (wmm) {\n            wmm.set(ops, d);\n        }\n\n        return d;\n    };\n\n    sizeOf$1.CHARSTRING = function(ops) {\n        return encode$2.CHARSTRING(ops).length;\n    };\n\n    // Utility functions ////////////////////////////////////////////////////////\n\n    // Convert an object containing name / type / value to bytes.\n    encode$2.OBJECT = function(v) {\n        var encodingFunction = encode$2[v.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n        return encodingFunction(v.value);\n    };\n\n    sizeOf$1.OBJECT = function(v) {\n        var sizeOfFunction = sizeOf$1[v.type];\n        check.argument(sizeOfFunction !== undefined, 'No sizeOf function for type ' + v.type);\n        return sizeOfFunction(v.value);\n    };\n\n    // Convert a table object to bytes.\n    // A table contains a list of fields containing the metadata (name, type and default value).\n    // The table itself has the field values set as attributes.\n    encode$2.TABLE = function(table) {\n        var d = [];\n        var length = table.fields.length;\n\n        for (var i = 0; i < length; i += 1) {\n            var field = table.fields[i];\n            var encodingFunction = encode$2[field.type];\n            check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n            var value = table[field.name];\n            if (value === undefined) {\n                value = field.value;\n            }\n\n            var bytes = encodingFunction(value);\n            d = d.concat(bytes);\n        }\n\n        return d;\n    };\n\n    sizeOf$1.TABLE = function(table) {\n        var numBytes = 0;\n        var length = table.fields.length;\n\n        for (var i = 0; i < length; i += 1) {\n            var field = table.fields[i];\n            var sizeOfFunction = sizeOf$1[field.type];\n            check.argument(sizeOfFunction !== undefined, 'No sizeOf function for field type ' + field.type);\n            var value = table[field.name];\n            if (value === undefined) {\n                value = field.value;\n            }\n\n            numBytes += sizeOfFunction(value);\n        }\n\n        return numBytes;\n    };\n\n    // Merge in a list of bytes.\n    encode$2.LITERAL = function(v) {\n        return v;\n    };\n\n    sizeOf$1.LITERAL = function(v) {\n        return v.length;\n    };\n\n    var decode_1 = decode$1;\n    var encode_1 = encode$2;\n    var sizeOf_1 = sizeOf$1;\n\n    var types = {\n    \tdecode: decode_1,\n    \tencode: encode_1,\n    \tsizeOf: sizeOf_1\n    };\n\n    var encode$1 = types.encode;\n    var sizeOf = types.sizeOf;\n\n    function Table(tableName, fields, options) {\n        var i;\n        for (i = 0; i < fields.length; i += 1) {\n            var field = fields[i];\n            this[field.name] = field.value;\n        }\n\n        this.tableName = tableName;\n        this.fields = fields;\n        if (options) {\n            var optionKeys = Object.keys(options);\n            for (i = 0; i < optionKeys.length; i += 1) {\n                var k = optionKeys[i];\n                var v = options[k];\n                if (this[k] !== undefined) {\n                    this[k] = v;\n                }\n            }\n        }\n    }\n\n    Table.prototype.sizeOf = function() {\n        var v = 0;\n        for (var i = 0; i < this.fields.length; i += 1) {\n            var field = this.fields[i];\n            var value = this[field.name];\n            if (value === undefined) {\n                value = field.value;\n            }\n\n            if (typeof value.sizeOf === 'function') {\n                v += value.sizeOf();\n            } else {\n                var sizeOfFunction = sizeOf[field.type];\n                check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n                v += sizeOfFunction(value);\n            }\n        }\n\n        return v;\n    };\n\n    Table.prototype.encode = function() {\n        return encode$1.TABLE(this);\n    };\n\n    var Table_1 = Table;\n\n    var table = {\n    \tTable: Table_1\n    };\n\n    var parse = createCommonjsModule(function (module, exports) {\n\n    // Retrieve an unsigned byte from the DataView.\n    exports.getByte = function getByte(dataView, offset) {\n        return dataView.getUint8(offset);\n    };\n\n    exports.getCard8 = exports.getByte;\n\n    // Retrieve an unsigned 16-bit short from the DataView.\n    // The value is stored in big endian.\n    exports.getUShort = function(dataView, offset) {\n        return dataView.getUint16(offset, false);\n    };\n\n    exports.getCard16 = exports.getUShort;\n\n    // Retrieve a signed 16-bit short from the DataView.\n    // The value is stored in big endian.\n    exports.getShort = function(dataView, offset) {\n        return dataView.getInt16(offset, false);\n    };\n\n    // Retrieve an unsigned 32-bit long from the DataView.\n    // The value is stored in big endian.\n    exports.getULong = function(dataView, offset) {\n        return dataView.getUint32(offset, false);\n    };\n\n    // Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n    // The value is stored in big endian.\n    exports.getFixed = function(dataView, offset) {\n        var decimal = dataView.getInt16(offset, false);\n        var fraction = dataView.getUint16(offset + 2, false);\n        return decimal + fraction / 65535;\n    };\n\n    // Retrieve a 4-character tag from the DataView.\n    // Tags are used to identify tables.\n    exports.getTag = function(dataView, offset) {\n        var tag = '';\n        for (var i = offset; i < offset + 4; i += 1) {\n            tag += String.fromCharCode(dataView.getInt8(i));\n        }\n\n        return tag;\n    };\n\n    // Retrieve an offset from the DataView.\n    // Offsets are 1 to 4 bytes in length, depending on the offSize argument.\n    exports.getOffset = function(dataView, offset, offSize) {\n        var v = 0;\n        for (var i = 0; i < offSize; i += 1) {\n            v <<= 8;\n            v += dataView.getUint8(offset + i);\n        }\n\n        return v;\n    };\n\n    // Retrieve a number of bytes from start offset to the end offset from the DataView.\n    exports.getBytes = function(dataView, startOffset, endOffset) {\n        var bytes = [];\n        for (var i = startOffset; i < endOffset; i += 1) {\n            bytes.push(dataView.getUint8(i));\n        }\n\n        return bytes;\n    };\n\n    // Convert the list of bytes to a string.\n    exports.bytesToString = function(bytes) {\n        var s = '';\n        for (var i = 0; i < bytes.length; i += 1) {\n            s += String.fromCharCode(bytes[i]);\n        }\n\n        return s;\n    };\n\n    var typeOffsets = {\n        byte: 1,\n        uShort: 2,\n        short: 2,\n        uLong: 4,\n        fixed: 4,\n        longDateTime: 8,\n        tag: 4\n    };\n\n    // A stateful parser that changes the offset whenever a value is retrieved.\n    // The data is a DataView.\n    function Parser(data, offset) {\n        this.data = data;\n        this.offset = offset;\n        this.relativeOffset = 0;\n    }\n\n    Parser.prototype.parseByte = function() {\n        var v = this.data.getUint8(this.offset + this.relativeOffset);\n        this.relativeOffset += 1;\n        return v;\n    };\n\n    Parser.prototype.parseChar = function() {\n        var v = this.data.getInt8(this.offset + this.relativeOffset);\n        this.relativeOffset += 1;\n        return v;\n    };\n\n    Parser.prototype.parseCard8 = Parser.prototype.parseByte;\n\n    Parser.prototype.parseUShort = function() {\n        var v = this.data.getUint16(this.offset + this.relativeOffset);\n        this.relativeOffset += 2;\n        return v;\n    };\n\n    Parser.prototype.parseCard16 = Parser.prototype.parseUShort;\n    Parser.prototype.parseSID = Parser.prototype.parseUShort;\n    Parser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\n    Parser.prototype.parseShort = function() {\n        var v = this.data.getInt16(this.offset + this.relativeOffset);\n        this.relativeOffset += 2;\n        return v;\n    };\n\n    Parser.prototype.parseF2Dot14 = function() {\n        var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n        this.relativeOffset += 2;\n        return v;\n    };\n\n    Parser.prototype.parseULong = function() {\n        var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n        this.relativeOffset += 4;\n        return v;\n    };\n\n    Parser.prototype.parseFixed = function() {\n        var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n        this.relativeOffset += 4;\n        return v;\n    };\n\n    Parser.prototype.parseOffset16List =\n    Parser.prototype.parseUShortList = function(count) {\n        var offsets = new Array(count);\n        var dataView = this.data;\n        var offset = this.offset + this.relativeOffset;\n        for (var i = 0; i < count; i++) {\n            offsets[i] = exports.getUShort(dataView, offset);\n            offset += 2;\n        }\n\n        this.relativeOffset += count * 2;\n        return offsets;\n    };\n\n    Parser.prototype.parseString = function(length) {\n        var dataView = this.data;\n        var offset = this.offset + this.relativeOffset;\n        var string = '';\n        this.relativeOffset += length;\n        for (var i = 0; i < length; i++) {\n            string += String.fromCharCode(dataView.getUint8(offset + i));\n        }\n\n        return string;\n    };\n\n    Parser.prototype.parseTag = function() {\n        return this.parseString(4);\n    };\n\n    // LONGDATETIME is a 64-bit integer.\n    // JavaScript and unix timestamps traditionally use 32 bits, so we\n    // only take the last 32 bits.\n    Parser.prototype.parseLongDateTime = function() {\n        var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n        this.relativeOffset += 8;\n        return v;\n    };\n\n    Parser.prototype.parseFixed = function() {\n        var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n        this.relativeOffset += 4;\n        return v / 65536;\n    };\n\n    Parser.prototype.parseVersion = function() {\n        var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n        // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n        // This returns the correct number if minor = 0xN000 where N is 0-9\n        var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n        this.relativeOffset += 4;\n        return major + minor / 0x1000 / 10;\n    };\n\n    Parser.prototype.skip = function(type, amount) {\n        if (amount === undefined) {\n            amount = 1;\n        }\n\n        this.relativeOffset += typeOffsets[type] * amount;\n    };\n\n    exports.Parser = Parser;\n    });\n\n    // Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n    // There are many available formats, but we only support the Windows format 4.\n    // This function returns a `CmapEncoding` object or null if no supported format could be found.\n    function parseCmapTable(data, start) {\n        var i;\n        var cmap = {};\n        cmap.version = parse.getUShort(data, start);\n        check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n        // The cmap table can contain many sub-tables, each with their own format.\n        // We're only interested in a \"platform 3\" table. This is a Windows format.\n        cmap.numTables = parse.getUShort(data, start + 2);\n        var offset = -1;\n        for (i = 0; i < cmap.numTables; i += 1) {\n            var platformId = parse.getUShort(data, start + 4 + (i * 8));\n            var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n            if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n                offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n                break;\n            }\n        }\n\n        if (offset === -1) {\n            // There is no cmap table in the font that we support, so return null.\n            // This font will be marked as unsupported.\n            return null;\n        }\n\n        var p = new parse.Parser(data, start + offset);\n        cmap.format = p.parseUShort();\n        check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n        // Length in bytes of the sub-tables.\n        cmap.length = p.parseUShort();\n        cmap.language = p.parseUShort();\n\n        // segCount is stored x 2.\n        var segCount;\n        cmap.segCount = segCount = p.parseUShort() >> 1;\n\n        // Skip searchRange, entrySelector, rangeShift.\n        p.skip('uShort', 3);\n\n        // The \"unrolled\" mapping from character codes to glyph indices.\n        cmap.glyphIndexMap = {};\n\n        var endCountParser = new parse.Parser(data, start + offset + 14);\n        var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n        var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n        var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n        var glyphIndexOffset = start + offset + 16 + segCount * 8;\n        for (i = 0; i < segCount - 1; i += 1) {\n            var glyphIndex;\n            var endCount = endCountParser.parseUShort();\n            var startCount = startCountParser.parseUShort();\n            var idDelta = idDeltaParser.parseShort();\n            var idRangeOffset = idRangeOffsetParser.parseUShort();\n            for (var c = startCount; c <= endCount; c += 1) {\n                if (idRangeOffset !== 0) {\n                    // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                    // Take the current offset in the idRangeOffset array.\n                    glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                    // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                    glyphIndexOffset += idRangeOffset;\n\n                    // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                    glyphIndexOffset += (c - startCount) * 2;\n                    glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                    if (glyphIndex !== 0) {\n                        glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                    }\n                } else {\n                    glyphIndex = (c + idDelta) & 0xFFFF;\n                }\n\n                cmap.glyphIndexMap[c] = glyphIndex;\n            }\n        }\n\n        return cmap;\n    }\n\n    function addSegment(t, code, glyphIndex) {\n        t.segments.push({\n            end: code,\n            start: code,\n            delta: -(code - glyphIndex),\n            offset: 0\n        });\n    }\n\n    function addTerminatorSegment(t) {\n        t.segments.push({\n            end: 0xFFFF,\n            start: 0xFFFF,\n            delta: 1,\n            offset: 0\n        });\n    }\n\n    function makeCmapTable(glyphs) {\n        var i;\n        var t = new table.Table('cmap', [\n            {name: 'version', type: 'USHORT', value: 0},\n            {name: 'numTables', type: 'USHORT', value: 1},\n            {name: 'platformID', type: 'USHORT', value: 3},\n            {name: 'encodingID', type: 'USHORT', value: 1},\n            {name: 'offset', type: 'ULONG', value: 12},\n            {name: 'format', type: 'USHORT', value: 4},\n            {name: 'length', type: 'USHORT', value: 0},\n            {name: 'language', type: 'USHORT', value: 0},\n            {name: 'segCountX2', type: 'USHORT', value: 0},\n            {name: 'searchRange', type: 'USHORT', value: 0},\n            {name: 'entrySelector', type: 'USHORT', value: 0},\n            {name: 'rangeShift', type: 'USHORT', value: 0}\n        ]);\n\n        t.segments = [];\n        for (i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs.get(i);\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                addSegment(t, glyph.unicodes[j], i);\n            }\n\n            t.segments = t.segments.sort(function(a, b) {\n                return a.start - b.start;\n            });\n        }\n\n        addTerminatorSegment(t);\n\n        var segCount;\n        segCount = t.segments.length;\n        t.segCountX2 = segCount * 2;\n        t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n        t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n        t.rangeShift = t.segCountX2 - t.searchRange;\n\n        // Set up parallel segment arrays.\n        var endCounts = [];\n        var startCounts = [];\n        var idDeltas = [];\n        var idRangeOffsets = [];\n        var glyphIds = [];\n\n        for (i = 0; i < segCount; i += 1) {\n            var segment = t.segments[i];\n            endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n            startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n            idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n            idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n            if (segment.glyphId !== undefined) {\n                glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n            }\n        }\n\n        t.fields = t.fields.concat(endCounts);\n        t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n        t.fields = t.fields.concat(startCounts);\n        t.fields = t.fields.concat(idDeltas);\n        t.fields = t.fields.concat(idRangeOffsets);\n        t.fields = t.fields.concat(glyphIds);\n\n        t.length = 14 + // Subtable header\n            endCounts.length * 2 +\n            2 + // reservedPad\n            startCounts.length * 2 +\n            idDeltas.length * 2 +\n            idRangeOffsets.length * 2 +\n            glyphIds.length * 2;\n\n        return t;\n    }\n\n    var parse_1$e = parseCmapTable;\n    var make$c = makeCmapTable;\n\n    var cmap = {\n    \tparse: parse_1$e,\n    \tmake: make$c\n    };\n\n    // Drawing utility functions.\n\n    // Draw a line on the given context from point `x1,y1` to point `x2,y2`.\n    function line(ctx, x1, y1, x2, y2) {\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n    }\n\n    var line_1 = line;\n\n    var draw = {\n    \tline: line_1\n    };\n\n    function getPathDefinition(glyph, path) {\n        var _path = path || { commands: [] };\n        return {\n            configurable: true,\n\n            get: function() {\n                if (typeof _path === 'function') {\n                    _path = _path();\n                }\n\n                return _path;\n            },\n\n            set: function(p) {\n                _path = p;\n            }\n        };\n    }\n\n    // A Glyph is an individual mark that often corresponds to a character.\n    // Some glyphs, such as ligatures, are a combination of many characters.\n    // Glyphs are the basic building blocks of a font.\n    //\n    // The `Glyph` class contains utility methods for drawing the path and its points.\n    function Glyph(options) {\n        // By putting all the code on a prototype function (which is only declared once)\n        // we reduce the memory requirements for larger fonts by some 2%\n        this.bindConstructorValues(options);\n    }\n\n    Glyph.prototype.bindConstructorValues = function(options) {\n        this.index = options.index || 0;\n\n        // These three values cannnot be deferred for memory optimization:\n        this.name = options.name || null;\n        this.unicode = options.unicode || undefined;\n        this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n\n        // But by binding these values only when necessary, we reduce can\n        // the memory requirements by almost 3% for larger fonts.\n        if (options.xMin) {\n            this.xMin = options.xMin;\n        }\n\n        if (options.yMin) {\n            this.yMin = options.yMin;\n        }\n\n        if (options.xMax) {\n            this.xMax = options.xMax;\n        }\n\n        if (options.yMax) {\n            this.yMax = options.yMax;\n        }\n\n        if (options.advanceWidth) {\n            this.advanceWidth = options.advanceWidth;\n        }\n\n        // The path for a glyph is the most memory intensive, and is bound as a value\n        // with a getter/setter to ensure we actually do path parsing only once the\n        // path is actually needed by anything.\n        Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n    };\n\n    Glyph.prototype.addUnicode = function(unicode) {\n        if (this.unicodes.length === 0) {\n            this.unicode = unicode;\n        }\n\n        this.unicodes.push(unicode);\n    };\n\n    // Convert the glyph to a Path we can draw on a drawing context.\n    //\n    // x - Horizontal position of the glyph. (default: 0)\n    // y - Vertical position of the *baseline* of the glyph. (default: 0)\n    // fontSize - Font size, in pixels (default: 72).\n    Glyph.prototype.getPath = function(x, y, fontSize) {\n        x = x !== undefined ? x : 0;\n        y = y !== undefined ? y : 0;\n        fontSize = fontSize !== undefined ? fontSize : 72;\n        var scale = 1 / this.path.unitsPerEm * fontSize;\n        var p = new path.Path();\n        var commands = this.path.commands;\n        for (var i = 0; i < commands.length; i += 1) {\n            var cmd = commands[i];\n            if (cmd.type === 'M') {\n                p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n            } else if (cmd.type === 'L') {\n                p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n            } else if (cmd.type === 'Q') {\n                p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                                   x + (cmd.x * scale), y + (-cmd.y * scale));\n            } else if (cmd.type === 'C') {\n                p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                          x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                          x + (cmd.x * scale), y + (-cmd.y * scale));\n            } else if (cmd.type === 'Z') {\n                p.closePath();\n            }\n        }\n\n        return p;\n    };\n\n    // Split the glyph into contours.\n    // This function is here for backwards compatibility, and to\n    // provide raw access to the TrueType glyph outlines.\n    Glyph.prototype.getContours = function() {\n        if (this.points === undefined) {\n            return [];\n        }\n\n        var contours = [];\n        var currentContour = [];\n        for (var i = 0; i < this.points.length; i += 1) {\n            var pt = this.points[i];\n            currentContour.push(pt);\n            if (pt.lastPointOfContour) {\n                contours.push(currentContour);\n                currentContour = [];\n            }\n        }\n\n        check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n        return contours;\n    };\n\n    // Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\n    Glyph.prototype.getMetrics = function() {\n        var commands = this.path.commands;\n        var xCoords = [];\n        var yCoords = [];\n        for (var i = 0; i < commands.length; i += 1) {\n            var cmd = commands[i];\n            if (cmd.type !== 'Z') {\n                xCoords.push(cmd.x);\n                yCoords.push(cmd.y);\n            }\n\n            if (cmd.type === 'Q' || cmd.type === 'C') {\n                xCoords.push(cmd.x1);\n                yCoords.push(cmd.y1);\n            }\n\n            if (cmd.type === 'C') {\n                xCoords.push(cmd.x2);\n                yCoords.push(cmd.y2);\n            }\n        }\n\n        var metrics = {\n            xMin: Math.min.apply(null, xCoords),\n            yMin: Math.min.apply(null, yCoords),\n            xMax: Math.max.apply(null, xCoords),\n            yMax: Math.max.apply(null, yCoords),\n            leftSideBearing: 0\n        };\n\n        if (!isFinite(metrics.xMin)) {\n            metrics.xMin = 0;\n        }\n\n        if (!isFinite(metrics.xMax)) {\n            metrics.xMax = this.advanceWidth;\n        }\n\n        if (!isFinite(metrics.yMin)) {\n            metrics.yMin = 0;\n        }\n\n        if (!isFinite(metrics.yMax)) {\n            metrics.yMax = 0;\n        }\n\n        metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n        return metrics;\n    };\n\n    // Draw the glyph on the given context.\n    //\n    // ctx - The drawing context.\n    // x - Horizontal position of the glyph. (default: 0)\n    // y - Vertical position of the *baseline* of the glyph. (default: 0)\n    // fontSize - Font size, in pixels (default: 72).\n    Glyph.prototype.draw = function(ctx, x, y, fontSize) {\n        this.getPath(x, y, fontSize).draw(ctx);\n    };\n\n    // Draw the points of the glyph.\n    // On-curve points will be drawn in blue, off-curve points will be drawn in red.\n    //\n    // ctx - The drawing context.\n    // x - Horizontal position of the glyph. (default: 0)\n    // y - Vertical position of the *baseline* of the glyph. (default: 0)\n    // fontSize - Font size, in pixels (default: 72).\n    Glyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n        function drawCircles(l, x, y, scale) {\n            var PI_SQ = Math.PI * 2;\n            ctx.beginPath();\n            for (var j = 0; j < l.length; j += 1) {\n                ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n                ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n            }\n\n            ctx.closePath();\n            ctx.fill();\n        }\n\n        x = x !== undefined ? x : 0;\n        y = y !== undefined ? y : 0;\n        fontSize = fontSize !== undefined ? fontSize : 24;\n        var scale = 1 / this.path.unitsPerEm * fontSize;\n\n        var blueCircles = [];\n        var redCircles = [];\n        var path = this.path;\n        for (var i = 0; i < path.commands.length; i += 1) {\n            var cmd = path.commands[i];\n            if (cmd.x !== undefined) {\n                blueCircles.push({x: cmd.x, y: -cmd.y});\n            }\n\n            if (cmd.x1 !== undefined) {\n                redCircles.push({x: cmd.x1, y: -cmd.y1});\n            }\n\n            if (cmd.x2 !== undefined) {\n                redCircles.push({x: cmd.x2, y: -cmd.y2});\n            }\n        }\n\n        ctx.fillStyle = 'blue';\n        drawCircles(blueCircles, x, y, scale);\n        ctx.fillStyle = 'red';\n        drawCircles(redCircles, x, y, scale);\n    };\n\n    // Draw lines indicating important font measurements.\n    // Black lines indicate the origin of the coordinate system (point 0,0).\n    // Blue lines indicate the glyph bounding box.\n    // Green line indicates the advance width of the glyph.\n    //\n    // ctx - The drawing context.\n    // x - Horizontal position of the glyph. (default: 0)\n    // y - Vertical position of the *baseline* of the glyph. (default: 0)\n    // fontSize - Font size, in pixels (default: 72).\n    Glyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n        var scale;\n        x = x !== undefined ? x : 0;\n        y = y !== undefined ? y : 0;\n        fontSize = fontSize !== undefined ? fontSize : 24;\n        scale = 1 / this.path.unitsPerEm * fontSize;\n        ctx.lineWidth = 1;\n\n        // Draw the origin\n        ctx.strokeStyle = 'black';\n        draw.line(ctx, x, -10000, x, 10000);\n        draw.line(ctx, -10000, y, 10000, y);\n\n        // This code is here due to memory optimization: by not using\n        // defaults in the constructor, we save a notable amount of memory.\n        var xMin = this.xMin || 0;\n        var yMin = this.yMin || 0;\n        var xMax = this.xMax || 0;\n        var yMax = this.yMax || 0;\n        var advanceWidth = this.advanceWidth || 0;\n\n        // Draw the glyph box\n        ctx.strokeStyle = 'blue';\n        draw.line(ctx, x + (xMin * scale), -10000, x + (xMin * scale), 10000);\n        draw.line(ctx, x + (xMax * scale), -10000, x + (xMax * scale), 10000);\n        draw.line(ctx, -10000, y + (-yMin * scale), 10000, y + (-yMin * scale));\n        draw.line(ctx, -10000, y + (-yMax * scale), 10000, y + (-yMax * scale));\n\n        // Draw the advance width\n        ctx.strokeStyle = 'green';\n        draw.line(ctx, x + (advanceWidth * scale), -10000, x + (advanceWidth * scale), 10000);\n    };\n\n    var Glyph_1 = Glyph;\n\n    var glyph = {\n    \tGlyph: Glyph_1\n    };\n\n    // A GlyphSet represents all glyphs available in the font, but modelled using\n    // a deferred glyph loader, for retrieving glyphs only once they are absolutely\n    // necessary, to keep the memory footprint down.\n    function GlyphSet(font, glyphs) {\n        this.font = font;\n        this.glyphs = {};\n        if (Array.isArray(glyphs)) {\n            for (var i = 0; i < glyphs.length; i++) {\n                this.glyphs[i] = glyphs[i];\n            }\n        }\n\n        this.length = (glyphs && glyphs.length) || 0;\n    }\n\n    GlyphSet.prototype.get = function(index) {\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n\n        return this.glyphs[index];\n    };\n\n    GlyphSet.prototype.push = function(index, loader) {\n        this.glyphs[index] = loader;\n        this.length++;\n    };\n\n    function glyphLoader(font, index) {\n        return new glyph.Glyph({index: index, font: font});\n    }\n\n    /**\n     * Generate a stub glyph that can be filled with all metadata *except*\n     * the \"points\" and \"path\" properties, which must be loaded only once\n     * the glyph's path is actually requested for text shaping.\n     */\n\n    function ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n        return function() {\n            var glyph$1 = new glyph.Glyph({index: index, font: font});\n\n            glyph$1.path = function() {\n                parseGlyph(glyph$1, data, position);\n                var path = buildPath(font.glyphs, glyph$1);\n                path.unitsPerEm = font.unitsPerEm;\n                return path;\n            };\n\n            return glyph$1;\n        };\n    }\n\n    function cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n        return function() {\n            var glyph$1 = new glyph.Glyph({index: index, font: font});\n\n            glyph$1.path = function() {\n                var path = parseCFFCharstring(font, glyph$1, charstring);\n                path.unitsPerEm = font.unitsPerEm;\n                return path;\n            };\n\n            return glyph$1;\n        };\n    }\n\n    var GlyphSet_1 = GlyphSet;\n    var glyphLoader_1 = glyphLoader;\n    var ttfGlyphLoader_1 = ttfGlyphLoader;\n    var cffGlyphLoader_1 = cffGlyphLoader;\n\n    var glyphset = {\n    \tGlyphSet: GlyphSet_1,\n    \tglyphLoader: glyphLoader_1,\n    \tttfGlyphLoader: ttfGlyphLoader_1,\n    \tcffGlyphLoader: cffGlyphLoader_1\n    };\n\n    // Custom equals function that can also check lists.\n    function equals(a, b) {\n        if (a === b) {\n            return true;\n        } else if (Array.isArray(a) && Array.isArray(b)) {\n            if (a.length !== b.length) {\n                return false;\n            }\n\n            for (var i = 0; i < a.length; i += 1) {\n                if (!equals(a[i], b[i])) {\n                    return false;\n                }\n            }\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // Parse a `CFF` INDEX array.\n    // An index array consists of a list of offsets, then a list of objects at those offsets.\n    function parseCFFIndex(data, start, conversionFn) {\n        //var i, objectOffset, endOffset;\n        var offsets = [];\n        var objects = [];\n        var count = parse.getCard16(data, start);\n        var i;\n        var objectOffset;\n        var endOffset;\n        if (count !== 0) {\n            var offsetSize = parse.getByte(data, start + 2);\n            objectOffset = start + ((count + 1) * offsetSize) + 2;\n            var pos = start + 3;\n            for (i = 0; i < count + 1; i += 1) {\n                offsets.push(parse.getOffset(data, pos, offsetSize));\n                pos += offsetSize;\n            }\n\n            // The total size of the index array is 4 header bytes + the value of the last offset.\n            endOffset = objectOffset + offsets[count];\n        } else {\n            endOffset = start + 2;\n        }\n\n        for (i = 0; i < offsets.length - 1; i += 1) {\n            var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n            if (conversionFn) {\n                value = conversionFn(value);\n            }\n\n            objects.push(value);\n        }\n\n        return {objects: objects, startOffset: start, endOffset: endOffset};\n    }\n\n    // Parse a `CFF` DICT real value.\n    function parseFloatOperand(parser) {\n        var s = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        while (true) {\n            var b = parser.parseByte();\n            var n1 = b >> 4;\n            var n2 = b & 15;\n\n            if (n1 === eof) {\n                break;\n            }\n\n            s += lookup[n1];\n\n            if (n2 === eof) {\n                break;\n            }\n\n            s += lookup[n2];\n        }\n\n        return parseFloat(s);\n    }\n\n    // Parse a `CFF` DICT operand.\n    function parseOperand(parser, b0) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        if (b0 === 28) {\n            b1 = parser.parseByte();\n            b2 = parser.parseByte();\n            return b1 << 8 | b2;\n        }\n\n        if (b0 === 29) {\n            b1 = parser.parseByte();\n            b2 = parser.parseByte();\n            b3 = parser.parseByte();\n            b4 = parser.parseByte();\n            return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n        }\n\n        if (b0 === 30) {\n            return parseFloatOperand(parser);\n        }\n\n        if (b0 >= 32 && b0 <= 246) {\n            return b0 - 139;\n        }\n\n        if (b0 >= 247 && b0 <= 250) {\n            b1 = parser.parseByte();\n            return (b0 - 247) * 256 + b1 + 108;\n        }\n\n        if (b0 >= 251 && b0 <= 254) {\n            b1 = parser.parseByte();\n            return -(b0 - 251) * 256 - b1 - 108;\n        }\n\n        throw new Error('Invalid b0 ' + b0);\n    }\n\n    // Convert the entries returned by `parseDict` to a proper dictionary.\n    // If a value is a list of one, it is unpacked.\n    function entriesToObject(entries) {\n        var o = {};\n        for (var i = 0; i < entries.length; i += 1) {\n            var key = entries[i][0];\n            var values = entries[i][1];\n            var value;\n            if (values.length === 1) {\n                value = values[0];\n            } else {\n                value = values;\n            }\n\n            if (o.hasOwnProperty(key)) {\n                throw new Error('Object ' + o + ' already has key ' + key);\n            }\n\n            o[key] = value;\n        }\n\n        return o;\n    }\n\n    // Parse a `CFF` DICT object.\n    // A dictionary contains key-value pairs in a compact tokenized format.\n    function parseCFFDict(data, start, size) {\n        start = start !== undefined ? start : 0;\n        var parser = new parse.Parser(data, start);\n        var entries = [];\n        var operands = [];\n        size = size !== undefined ? size : data.length;\n\n        while (parser.relativeOffset < size) {\n            var op = parser.parseByte();\n\n            // The first byte for each dict item distinguishes between operator (key) and operand (value).\n            // Values <= 21 are operators.\n            if (op <= 21) {\n                // Two-byte operators have an initial escape byte of 12.\n                if (op === 12) {\n                    op = 1200 + parser.parseByte();\n                }\n\n                entries.push([op, operands]);\n                operands = [];\n            } else {\n                // Since the operands (values) come before the operators (keys), we store all operands in a list\n                // until we encounter an operator.\n                operands.push(parseOperand(parser, op));\n            }\n        }\n\n        return entriesToObject(entries);\n    }\n\n    // Given a String Index (SID), return the value of the string.\n    // Strings below index 392 are standard CFF strings and are not encoded in the font.\n    function getCFFString(strings, index) {\n        if (index <= 390) {\n            index = encoding.cffStandardStrings[index];\n        } else {\n            index = strings[index - 391];\n        }\n\n        return index;\n    }\n\n    // Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n    // This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\n    function interpretDict(dict, meta, strings) {\n        var newDict = {};\n\n        // Because we also want to include missing values, we start out from the meta list\n        // and lookup values in the dict.\n        for (var i = 0; i < meta.length; i += 1) {\n            var m = meta[i];\n            var value = dict[m.op];\n            if (value === undefined) {\n                value = m.value !== undefined ? m.value : null;\n            }\n\n            if (m.type === 'SID') {\n                value = getCFFString(strings, value);\n            }\n\n            newDict[m.name] = value;\n        }\n\n        return newDict;\n    }\n\n    // Parse the CFF header.\n    function parseCFFHeader(data, start) {\n        var header = {};\n        header.formatMajor = parse.getCard8(data, start);\n        header.formatMinor = parse.getCard8(data, start + 1);\n        header.size = parse.getCard8(data, start + 2);\n        header.offsetSize = parse.getCard8(data, start + 3);\n        header.startOffset = start;\n        header.endOffset = start + 4;\n        return header;\n    }\n\n    var TOP_DICT_META = [\n        {name: 'version', op: 0, type: 'SID'},\n        {name: 'notice', op: 1, type: 'SID'},\n        {name: 'copyright', op: 1200, type: 'SID'},\n        {name: 'fullName', op: 2, type: 'SID'},\n        {name: 'familyName', op: 3, type: 'SID'},\n        {name: 'weight', op: 4, type: 'SID'},\n        {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n        {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n        {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n        {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n        {name: 'paintType', op: 1205, type: 'number', value: 0},\n        {name: 'charstringType', op: 1206, type: 'number', value: 2},\n        {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n        {name: 'uniqueId', op: 13, type: 'number'},\n        {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n        {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n        {name: 'xuid', op: 14, type: [], value: null},\n        {name: 'charset', op: 15, type: 'offset', value: 0},\n        {name: 'encoding', op: 16, type: 'offset', value: 0},\n        {name: 'charStrings', op: 17, type: 'offset', value: 0},\n        {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n    ];\n\n    var PRIVATE_DICT_META = [\n        {name: 'subrs', op: 19, type: 'offset', value: 0},\n        {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n        {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n    ];\n\n    // Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n    // The top dictionary contains the essential metadata for the font, together with the private dictionary.\n    function parseCFFTopDict(data, strings) {\n        var dict = parseCFFDict(data, 0, data.byteLength);\n        return interpretDict(dict, TOP_DICT_META, strings);\n    }\n\n    // Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\n    function parseCFFPrivateDict(data, start, size, strings) {\n        var dict = parseCFFDict(data, start, size);\n        return interpretDict(dict, PRIVATE_DICT_META, strings);\n    }\n\n    // Parse the CFF charset table, which contains internal names for all the glyphs.\n    // This function will return a list of glyph names.\n    // See Adobe TN #5176 chapter 13, \"Charsets\".\n    function parseCFFCharset(data, start, nGlyphs, strings) {\n        var i;\n        var sid;\n        var count;\n        var parser = new parse.Parser(data, start);\n\n        // The .notdef glyph is not included, so subtract 1.\n        nGlyphs -= 1;\n        var charset = ['.notdef'];\n\n        var format = parser.parseCard8();\n        if (format === 0) {\n            for (i = 0; i < nGlyphs; i += 1) {\n                sid = parser.parseSID();\n                charset.push(getCFFString(strings, sid));\n            }\n        } else if (format === 1) {\n            while (charset.length <= nGlyphs) {\n                sid = parser.parseSID();\n                count = parser.parseCard8();\n                for (i = 0; i <= count; i += 1) {\n                    charset.push(getCFFString(strings, sid));\n                    sid += 1;\n                }\n            }\n        } else if (format === 2) {\n            while (charset.length <= nGlyphs) {\n                sid = parser.parseSID();\n                count = parser.parseCard16();\n                for (i = 0; i <= count; i += 1) {\n                    charset.push(getCFFString(strings, sid));\n                    sid += 1;\n                }\n            }\n        } else {\n            throw new Error('Unknown charset format ' + format);\n        }\n\n        return charset;\n    }\n\n    // Parse the CFF encoding data. Only one encoding can be specified per font.\n    // See Adobe TN #5176 chapter 12, \"Encodings\".\n    function parseCFFEncoding(data, start, charset) {\n        var i;\n        var code;\n        var enc = {};\n        var parser = new parse.Parser(data, start);\n        var format = parser.parseCard8();\n        if (format === 0) {\n            var nCodes = parser.parseCard8();\n            for (i = 0; i < nCodes; i += 1) {\n                code = parser.parseCard8();\n                enc[code] = i;\n            }\n        } else if (format === 1) {\n            var nRanges = parser.parseCard8();\n            code = 1;\n            for (i = 0; i < nRanges; i += 1) {\n                var first = parser.parseCard8();\n                var nLeft = parser.parseCard8();\n                for (var j = first; j <= first + nLeft; j += 1) {\n                    enc[j] = code;\n                    code += 1;\n                }\n            }\n        } else {\n            throw new Error('Unknown encoding format ' + format);\n        }\n\n        return new encoding.CffEncoding(enc, charset);\n    }\n\n    // Take in charstring code and return a Glyph object.\n    // The encoding is described in the Type 2 Charstring Format\n    // https://www.microsoft.com/typography/OTSPEC/charstr2.htm\n    function parseCFFCharstring(font, glyph, code) {\n        var c1x;\n        var c1y;\n        var c2x;\n        var c2y;\n        var p = new path.Path();\n        var stack = [];\n        var nStems = 0;\n        var haveWidth = false;\n        var width = font.defaultWidthX;\n        var open = false;\n        var x = 0;\n        var y = 0;\n\n        function newContour(x, y) {\n            if (open) {\n                p.closePath();\n            }\n\n            p.moveTo(x, y);\n            open = true;\n        }\n\n        function parseStems() {\n            var hasWidthArg;\n\n            // The number of stem operators on the stack is always even.\n            // If the value is uneven, that means a width is specified.\n            hasWidthArg = stack.length % 2 !== 0;\n            if (hasWidthArg && !haveWidth) {\n                width = stack.shift() + font.nominalWidthX;\n            }\n\n            nStems += stack.length >> 1;\n            stack.length = 0;\n            haveWidth = true;\n        }\n\n        function parse(code) {\n            var b1;\n            var b2;\n            var b3;\n            var b4;\n            var codeIndex;\n            var subrCode;\n            var jpx;\n            var jpy;\n            var c3x;\n            var c3y;\n            var c4x;\n            var c4y;\n\n            var i = 0;\n            while (i < code.length) {\n                var v = code[i];\n                i += 1;\n                switch (v) {\n                case 1: // hstem\n                    parseStems();\n                    break;\n                case 3: // vstem\n                    parseStems();\n                    break;\n                case 4: // vmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + font.nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 5: // rlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 6: // hlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 7: // vlineto\n                    while (stack.length > 0) {\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 8: // rrcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 10: // callsubr\n                    codeIndex = stack.pop() + font.subrsBias;\n                    subrCode = font.subrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 11: // return\n                    return;\n                case 12: // flex operators\n                    v = code[i];\n                    i += 1;\n                    switch (v) {\n                    case 35: // flex\n                        // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                        c1x = x   + stack.shift();    // dx1\n                        c1y = y   + stack.shift();    // dy1\n                        c2x = c1x + stack.shift();    // dx2\n                        c2y = c1y + stack.shift();    // dy2\n                        jpx = c2x + stack.shift();    // dx3\n                        jpy = c2y + stack.shift();    // dy3\n                        c3x = jpx + stack.shift();    // dx4\n                        c3y = jpy + stack.shift();    // dy4\n                        c4x = c3x + stack.shift();    // dx5\n                        c4y = c3y + stack.shift();    // dy5\n                        x = c4x + stack.shift();      // dx6\n                        y = c4y + stack.shift();      // dy6\n                        stack.shift();                // flex depth\n                        p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                        p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                        break;\n                    case 34: // hflex\n                        // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                        c1x = x   + stack.shift();    // dx1\n                        c1y = y;                      // dy1\n                        c2x = c1x + stack.shift();    // dx2\n                        c2y = c1y + stack.shift();    // dy2\n                        jpx = c2x + stack.shift();    // dx3\n                        jpy = c2y;                    // dy3\n                        c3x = jpx + stack.shift();    // dx4\n                        c3y = c2y;                    // dy4\n                        c4x = c3x + stack.shift();    // dx5\n                        c4y = y;                      // dy5\n                        x = c4x + stack.shift();      // dx6\n                        p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                        p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                        break;\n                    case 36: // hflex1\n                        // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                        c1x = x   + stack.shift();    // dx1\n                        c1y = y   + stack.shift();    // dy1\n                        c2x = c1x + stack.shift();    // dx2\n                        c2y = c1y + stack.shift();    // dy2\n                        jpx = c2x + stack.shift();    // dx3\n                        jpy = c2y;                    // dy3\n                        c3x = jpx + stack.shift();    // dx4\n                        c3y = c2y;                    // dy4\n                        c4x = c3x + stack.shift();    // dx5\n                        c4y = c3y + stack.shift();    // dy5\n                        x = c4x + stack.shift();      // dx6\n                        p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                        p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                        break;\n                    case 37: // flex1\n                        // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                        c1x = x   + stack.shift();    // dx1\n                        c1y = y   + stack.shift();    // dy1\n                        c2x = c1x + stack.shift();    // dx2\n                        c2y = c1y + stack.shift();    // dy2\n                        jpx = c2x + stack.shift();    // dx3\n                        jpy = c2y + stack.shift();    // dy3\n                        c3x = jpx + stack.shift();    // dx4\n                        c3y = jpy + stack.shift();    // dy4\n                        c4x = c3x + stack.shift();    // dx5\n                        c4y = c3y + stack.shift();    // dy5\n                        if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                            x = c4x + stack.shift();\n                        } else {\n                            y = c4y + stack.shift();\n                        }\n\n                        p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                        p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                        break;\n                    default:\n                        console.log('Glyph ' + glyph.index + ': unknown operator ' + 1200 + v);\n                        stack.length = 0;\n                    }\n                    break;\n                case 14: // endchar\n                    if (stack.length > 0 && !haveWidth) {\n                        width = stack.shift() + font.nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    if (open) {\n                        p.closePath();\n                        open = false;\n                    }\n\n                    break;\n                case 18: // hstemhm\n                    parseStems();\n                    break;\n                case 19: // hintmask\n                case 20: // cntrmask\n                    parseStems();\n                    i += (nStems + 7) >> 3;\n                    break;\n                case 21: // rmoveto\n                    if (stack.length > 2 && !haveWidth) {\n                        width = stack.shift() + font.nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 22: // hmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + font.nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 23: // vstemhm\n                    parseStems();\n                    break;\n                case 24: // rcurveline\n                    while (stack.length > 2) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    break;\n                case 25: // rlinecurve\n                    while (stack.length > 6) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    break;\n                case 26: // vvcurveto\n                    if (stack.length % 2) {\n                        x += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x;\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 27: // hhcurveto\n                    if (stack.length % 2) {\n                        y += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y;\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 28: // shortint\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                    i += 2;\n                    break;\n                case 29: // callgsubr\n                    codeIndex = stack.pop() + font.gsubrsBias;\n                    subrCode = font.gsubrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 30: // vhcurveto\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 31: // hvcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                default:\n                    if (v < 32) {\n                        console.log('Glyph ' + glyph.index + ': unknown operator ' + v);\n                    } else if (v < 247) {\n                        stack.push(v - 139);\n                    } else if (v < 251) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push((v - 247) * 256 + b1 + 108);\n                    } else if (v < 255) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push(-(v - 251) * 256 - b1 - 108);\n                    } else {\n                        b1 = code[i];\n                        b2 = code[i + 1];\n                        b3 = code[i + 2];\n                        b4 = code[i + 3];\n                        i += 4;\n                        stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                    }\n                }\n            }\n        }\n\n        parse(code);\n\n        glyph.advanceWidth = width;\n        return p;\n    }\n\n    // Subroutines are encoded using the negative half of the number space.\n    // See type 2 chapter 4.7 \"Subroutine operators\".\n    function calcCFFSubroutineBias(subrs) {\n        var bias;\n        if (subrs.length < 1240) {\n            bias = 107;\n        } else if (subrs.length < 33900) {\n            bias = 1131;\n        } else {\n            bias = 32768;\n        }\n\n        return bias;\n    }\n\n    // Parse the `CFF` table, which contains the glyph outlines in PostScript format.\n    function parseCFFTable(data, start, font) {\n        font.tables.cff = {};\n        var header = parseCFFHeader(data, start);\n        var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n        var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n        var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n        var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n        font.gsubrs = globalSubrIndex.objects;\n        font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n        var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n        var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n        font.tables.cff.topDict = topDict;\n\n        var privateDictOffset = start + topDict['private'][1];\n        var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n        font.defaultWidthX = privateDict.defaultWidthX;\n        font.nominalWidthX = privateDict.nominalWidthX;\n\n        if (privateDict.subrs !== 0) {\n            var subrOffset = privateDictOffset + privateDict.subrs;\n            var subrIndex = parseCFFIndex(data, subrOffset);\n            font.subrs = subrIndex.objects;\n            font.subrsBias = calcCFFSubroutineBias(font.subrs);\n        } else {\n            font.subrs = [];\n            font.subrsBias = 0;\n        }\n\n        // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n        var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n        font.nGlyphs = charStringsIndex.objects.length;\n\n        var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n        if (topDict.encoding === 0) { // Standard encoding\n            font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n        } else if (topDict.encoding === 1) { // Expert encoding\n            font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n        } else {\n            font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n        }\n\n        // Prefer the CMAP encoding to the CFF encoding.\n        font.encoding = font.encoding || font.cffEncoding;\n\n        font.glyphs = new glyphset.GlyphSet(font);\n        for (var i = 0; i < font.nGlyphs; i += 1) {\n            var charString = charStringsIndex.objects[i];\n            font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n        }\n    }\n\n    // Convert a string to a String ID (SID).\n    // The list of strings is modified in place.\n    function encodeString(s, strings) {\n        var sid;\n\n        // Is the string in the CFF standard strings?\n        var i = encoding.cffStandardStrings.indexOf(s);\n        if (i >= 0) {\n            sid = i;\n        }\n\n        // Is the string already in the string index?\n        i = strings.indexOf(s);\n        if (i >= 0) {\n            sid = i + encoding.cffStandardStrings.length;\n        } else {\n            sid = encoding.cffStandardStrings.length + strings.length;\n            strings.push(s);\n        }\n\n        return sid;\n    }\n\n    function makeHeader() {\n        return new table.Table('Header', [\n            {name: 'major', type: 'Card8', value: 1},\n            {name: 'minor', type: 'Card8', value: 0},\n            {name: 'hdrSize', type: 'Card8', value: 4},\n            {name: 'major', type: 'Card8', value: 1}\n        ]);\n    }\n\n    function makeNameIndex(fontNames) {\n        var t = new table.Table('Name INDEX', [\n            {name: 'names', type: 'INDEX', value: []}\n        ]);\n        t.names = [];\n        for (var i = 0; i < fontNames.length; i += 1) {\n            t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n        }\n\n        return t;\n    }\n\n    // Given a dictionary's metadata, create a DICT structure.\n    function makeDict(meta, attrs, strings) {\n        var m = {};\n        for (var i = 0; i < meta.length; i += 1) {\n            var entry = meta[i];\n            var value = attrs[entry.name];\n            if (value !== undefined && !equals(value, entry.value)) {\n                if (entry.type === 'SID') {\n                    value = encodeString(value, strings);\n                }\n\n                m[entry.op] = {name: entry.name, type: entry.type, value: value};\n            }\n        }\n\n        return m;\n    }\n\n    // The Top DICT houses the global font attributes.\n    function makeTopDict(attrs, strings) {\n        var t = new table.Table('Top DICT', [\n            {name: 'dict', type: 'DICT', value: {}}\n        ]);\n        t.dict = makeDict(TOP_DICT_META, attrs, strings);\n        return t;\n    }\n\n    function makeTopDictIndex(topDict) {\n        var t = new table.Table('Top DICT INDEX', [\n            {name: 'topDicts', type: 'INDEX', value: []}\n        ]);\n        t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n        return t;\n    }\n\n    function makeStringIndex(strings) {\n        var t = new table.Table('String INDEX', [\n            {name: 'strings', type: 'INDEX', value: []}\n        ]);\n        t.strings = [];\n        for (var i = 0; i < strings.length; i += 1) {\n            t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n        }\n\n        return t;\n    }\n\n    function makeGlobalSubrIndex() {\n        // Currently we don't use subroutines.\n        return new table.Table('Global Subr INDEX', [\n            {name: 'subrs', type: 'INDEX', value: []}\n        ]);\n    }\n\n    function makeCharsets(glyphNames, strings) {\n        var t = new table.Table('Charsets', [\n            {name: 'format', type: 'Card8', value: 0}\n        ]);\n        for (var i = 0; i < glyphNames.length; i += 1) {\n            var glyphName = glyphNames[i];\n            var glyphSID = encodeString(glyphName, strings);\n            t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n        }\n\n        return t;\n    }\n\n    function glyphToOps(glyph) {\n        var ops = [];\n        var path = glyph.path;\n        ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n        var x = 0;\n        var y = 0;\n        for (var i = 0; i < path.commands.length; i += 1) {\n            var dx;\n            var dy;\n            var cmd = path.commands[i];\n            if (cmd.type === 'Q') {\n                // CFF only supports b\u00E9zier curves, so convert the quad to a b\u00E9zier.\n                var _13 = 1 / 3;\n                var _23 = 2 / 3;\n\n                // We're going to create a new command so we don't change the original path.\n                cmd = {\n                    type: 'C',\n                    x: cmd.x,\n                    y: cmd.y,\n                    x1: _13 * x + _23 * cmd.x1,\n                    y1: _13 * y + _23 * cmd.y1,\n                    x2: _13 * cmd.x + _23 * cmd.x1,\n                    y2: _13 * cmd.y + _23 * cmd.y1\n                };\n            }\n\n            if (cmd.type === 'M') {\n                dx = Math.round(cmd.x - x);\n                dy = Math.round(cmd.y - y);\n                ops.push({name: 'dx', type: 'NUMBER', value: dx});\n                ops.push({name: 'dy', type: 'NUMBER', value: dy});\n                ops.push({name: 'rmoveto', type: 'OP', value: 21});\n                x = Math.round(cmd.x);\n                y = Math.round(cmd.y);\n            } else if (cmd.type === 'L') {\n                dx = Math.round(cmd.x - x);\n                dy = Math.round(cmd.y - y);\n                ops.push({name: 'dx', type: 'NUMBER', value: dx});\n                ops.push({name: 'dy', type: 'NUMBER', value: dy});\n                ops.push({name: 'rlineto', type: 'OP', value: 5});\n                x = Math.round(cmd.x);\n                y = Math.round(cmd.y);\n            } else if (cmd.type === 'C') {\n                var dx1 = Math.round(cmd.x1 - x);\n                var dy1 = Math.round(cmd.y1 - y);\n                var dx2 = Math.round(cmd.x2 - cmd.x1);\n                var dy2 = Math.round(cmd.y2 - cmd.y1);\n                dx = Math.round(cmd.x - cmd.x2);\n                dy = Math.round(cmd.y - cmd.y2);\n                ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n                ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n                ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n                ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n                ops.push({name: 'dx', type: 'NUMBER', value: dx});\n                ops.push({name: 'dy', type: 'NUMBER', value: dy});\n                ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n                x = Math.round(cmd.x);\n                y = Math.round(cmd.y);\n            }\n\n            // Contours are closed automatically.\n\n        }\n\n        ops.push({name: 'endchar', type: 'OP', value: 14});\n        return ops;\n    }\n\n    function makeCharStringsIndex(glyphs) {\n        var t = new table.Table('CharStrings INDEX', [\n            {name: 'charStrings', type: 'INDEX', value: []}\n        ]);\n\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs.get(i);\n            var ops = glyphToOps(glyph);\n            t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n        }\n\n        return t;\n    }\n\n    function makePrivateDict(attrs, strings) {\n        var t = new table.Table('Private DICT', [\n            {name: 'dict', type: 'DICT', value: {}}\n        ]);\n        t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n        return t;\n    }\n\n    function makePrivateDictIndex(privateDict) {\n        var t = new table.Table('Private DICT INDEX', [\n            {name: 'privateDicts', type: 'INDEX', value: []}\n        ]);\n        t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n        return t;\n    }\n\n    function makeCFFTable(glyphs, options) {\n        var t = new table.Table('CFF ', [\n            {name: 'header', type: 'TABLE'},\n            {name: 'nameIndex', type: 'TABLE'},\n            {name: 'topDictIndex', type: 'TABLE'},\n            {name: 'stringIndex', type: 'TABLE'},\n            {name: 'globalSubrIndex', type: 'TABLE'},\n            {name: 'charsets', type: 'TABLE'},\n            {name: 'charStringsIndex', type: 'TABLE'},\n            {name: 'privateDictIndex', type: 'TABLE'}\n        ]);\n\n        var fontScale = 1 / options.unitsPerEm;\n        // We use non-zero values for the offsets so that the DICT encodes them.\n        // This is important because the size of the Top DICT plays a role in offset calculation,\n        // and the size shouldn't change after we've written correct offsets.\n        var attrs = {\n            version: options.version,\n            fullName: options.fullName,\n            familyName: options.familyName,\n            weight: options.weightName,\n            fontMatrix: [fontScale, 0, 0, fontScale, 0, 0],\n            charset: 999,\n            encoding: 0,\n            charStrings: 999,\n            private: [0, 999]\n        };\n\n        var privateAttrs = {};\n\n        var glyphNames = [];\n        var glyph;\n\n        // Skip first glyph (.notdef)\n        for (var i = 1; i < glyphs.length; i += 1) {\n            glyph = glyphs.get(i);\n            glyphNames.push(glyph.name);\n        }\n\n        var strings = [];\n\n        t.header = makeHeader();\n        t.nameIndex = makeNameIndex([options.postScriptName]);\n        var topDict = makeTopDict(attrs, strings);\n        t.topDictIndex = makeTopDictIndex(topDict);\n        t.globalSubrIndex = makeGlobalSubrIndex();\n        t.charsets = makeCharsets(glyphNames, strings);\n        t.charStringsIndex = makeCharStringsIndex(glyphs);\n        var privateDict = makePrivateDict(privateAttrs, strings);\n        t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n        // Needs to come at the end, to encode all custom strings used in the font.\n        t.stringIndex = makeStringIndex(strings);\n\n        var startOffset = t.header.sizeOf() +\n            t.nameIndex.sizeOf() +\n            t.topDictIndex.sizeOf() +\n            t.stringIndex.sizeOf() +\n            t.globalSubrIndex.sizeOf();\n        attrs.charset = startOffset;\n\n        // We use the CFF standard encoding; proper encoding will be handled in cmap.\n        attrs.encoding = 0;\n        attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n        attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n        // Recreate the Top DICT INDEX with the correct offsets.\n        topDict = makeTopDict(attrs, strings);\n        t.topDictIndex = makeTopDictIndex(topDict);\n\n        return t;\n    }\n\n    var parse_1$d = parseCFFTable;\n    var make$b = makeCFFTable;\n\n    var cff = {\n    \tparse: parse_1$d,\n    \tmake: make$b\n    };\n\n    // Parse the header `head` table\n    function parseHeadTable(data, start) {\n        var head = {};\n        var p = new parse.Parser(data, start);\n        head.version = p.parseVersion();\n        head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n        head.checkSumAdjustment = p.parseULong();\n        head.magicNumber = p.parseULong();\n        check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n        head.flags = p.parseUShort();\n        head.unitsPerEm = p.parseUShort();\n        head.created = p.parseLongDateTime();\n        head.modified = p.parseLongDateTime();\n        head.xMin = p.parseShort();\n        head.yMin = p.parseShort();\n        head.xMax = p.parseShort();\n        head.yMax = p.parseShort();\n        head.macStyle = p.parseUShort();\n        head.lowestRecPPEM = p.parseUShort();\n        head.fontDirectionHint = p.parseShort();\n        head.indexToLocFormat = p.parseShort();     // 50\n        head.glyphDataFormat = p.parseShort();\n        return head;\n    }\n\n    function makeHeadTable(options) {\n        return new table.Table('head', [\n            {name: 'version', type: 'FIXED', value: 0x00010000},\n            {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n            {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n            {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n            {name: 'flags', type: 'USHORT', value: 0},\n            {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n            {name: 'created', type: 'LONGDATETIME', value: 0},\n            {name: 'modified', type: 'LONGDATETIME', value: 0},\n            {name: 'xMin', type: 'SHORT', value: 0},\n            {name: 'yMin', type: 'SHORT', value: 0},\n            {name: 'xMax', type: 'SHORT', value: 0},\n            {name: 'yMax', type: 'SHORT', value: 0},\n            {name: 'macStyle', type: 'USHORT', value: 0},\n            {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n            {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n            {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n            {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n        ], options);\n    }\n\n    var parse_1$c = parseHeadTable;\n    var make$a = makeHeadTable;\n\n    var head = {\n    \tparse: parse_1$c,\n    \tmake: make$a\n    };\n\n    // Parse the horizontal header `hhea` table\n    function parseHheaTable(data, start) {\n        var hhea = {};\n        var p = new parse.Parser(data, start);\n        hhea.version = p.parseVersion();\n        hhea.ascender = p.parseShort();\n        hhea.descender = p.parseShort();\n        hhea.lineGap = p.parseShort();\n        hhea.advanceWidthMax = p.parseUShort();\n        hhea.minLeftSideBearing = p.parseShort();\n        hhea.minRightSideBearing = p.parseShort();\n        hhea.xMaxExtent = p.parseShort();\n        hhea.caretSlopeRise = p.parseShort();\n        hhea.caretSlopeRun = p.parseShort();\n        hhea.caretOffset = p.parseShort();\n        p.relativeOffset += 8;\n        hhea.metricDataFormat = p.parseShort();\n        hhea.numberOfHMetrics = p.parseUShort();\n        return hhea;\n    }\n\n    function makeHheaTable(options) {\n        return new table.Table('hhea', [\n            {name: 'version', type: 'FIXED', value: 0x00010000},\n            {name: 'ascender', type: 'FWORD', value: 0},\n            {name: 'descender', type: 'FWORD', value: 0},\n            {name: 'lineGap', type: 'FWORD', value: 0},\n            {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n            {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n            {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n            {name: 'xMaxExtent', type: 'FWORD', value: 0},\n            {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n            {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n            {name: 'caretOffset', type: 'SHORT', value: 0},\n            {name: 'reserved1', type: 'SHORT', value: 0},\n            {name: 'reserved2', type: 'SHORT', value: 0},\n            {name: 'reserved3', type: 'SHORT', value: 0},\n            {name: 'reserved4', type: 'SHORT', value: 0},\n            {name: 'metricDataFormat', type: 'SHORT', value: 0},\n            {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n        ], options);\n    }\n\n    var parse_1$b = parseHheaTable;\n    var make$9 = makeHheaTable;\n\n    var hhea = {\n    \tparse: parse_1$b,\n    \tmake: make$9\n    };\n\n    // Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n    // This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\n    function parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n        var advanceWidth;\n        var leftSideBearing;\n        var p = new parse.Parser(data, start);\n        for (var i = 0; i < numGlyphs; i += 1) {\n            // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n            if (i < numMetrics) {\n                advanceWidth = p.parseUShort();\n                leftSideBearing = p.parseShort();\n            }\n\n            var glyph = glyphs.get(i);\n            glyph.advanceWidth = advanceWidth;\n            glyph.leftSideBearing = leftSideBearing;\n        }\n    }\n\n    function makeHmtxTable(glyphs) {\n        var t = new table.Table('hmtx', []);\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs.get(i);\n            var advanceWidth = glyph.advanceWidth || 0;\n            var leftSideBearing = glyph.leftSideBearing || 0;\n            t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n            t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n        }\n\n        return t;\n    }\n\n    var parse_1$a = parseHmtxTable;\n    var make$8 = makeHmtxTable;\n\n    var hmtx = {\n    \tparse: parse_1$a,\n    \tmake: make$8\n    };\n\n    function makeLtagTable(tags) {\n        var result = new table.Table('ltag', [\n            {name: 'version', type: 'ULONG', value: 1},\n            {name: 'flags', type: 'ULONG', value: 0},\n            {name: 'numTags', type: 'ULONG', value: tags.length}\n        ]);\n\n        var stringPool = '';\n        var stringPoolOffset = 12 + tags.length * 4;\n        for (var i = 0; i < tags.length; ++i) {\n            var pos = stringPool.indexOf(tags[i]);\n            if (pos < 0) {\n                pos = stringPool.length;\n                stringPool += tags[i];\n            }\n\n            result.fields.push({name: 'offset ' + i, type: 'USHORT', value: stringPoolOffset + pos});\n            result.fields.push({name: 'length ' + i, type: 'USHORT', value: tags[i].length});\n        }\n\n        result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n        return result;\n    }\n\n    function parseLtagTable(data, start) {\n        var p = new parse.Parser(data, start);\n        var tableVersion = p.parseULong();\n        check.argument(tableVersion === 1, 'Unsupported ltag table version.');\n        // The 'ltag' specification does not define any flags; skip the field.\n        p.skip('uLong', 1);\n        var numTags = p.parseULong();\n\n        var tags = [];\n        for (var i = 0; i < numTags; i++) {\n            var tag = '';\n            var offset = start + p.parseUShort();\n            var length = p.parseUShort();\n            for (var j = offset; j < offset + length; ++j) {\n                tag += String.fromCharCode(data.getInt8(j));\n            }\n\n            tags.push(tag);\n        }\n\n        return tags;\n    }\n\n    var make$7 = makeLtagTable;\n    var parse_1$9 = parseLtagTable;\n\n    var ltag = {\n    \tmake: make$7,\n    \tparse: parse_1$9\n    };\n\n    // Parse the maximum profile `maxp` table.\n    function parseMaxpTable(data, start) {\n        var maxp = {};\n        var p = new parse.Parser(data, start);\n        maxp.version = p.parseVersion();\n        maxp.numGlyphs = p.parseUShort();\n        if (maxp.version === 1.0) {\n            maxp.maxPoints = p.parseUShort();\n            maxp.maxContours = p.parseUShort();\n            maxp.maxCompositePoints = p.parseUShort();\n            maxp.maxCompositeContours = p.parseUShort();\n            maxp.maxZones = p.parseUShort();\n            maxp.maxTwilightPoints = p.parseUShort();\n            maxp.maxStorage = p.parseUShort();\n            maxp.maxFunctionDefs = p.parseUShort();\n            maxp.maxInstructionDefs = p.parseUShort();\n            maxp.maxStackElements = p.parseUShort();\n            maxp.maxSizeOfInstructions = p.parseUShort();\n            maxp.maxComponentElements = p.parseUShort();\n            maxp.maxComponentDepth = p.parseUShort();\n        }\n\n        return maxp;\n    }\n\n    function makeMaxpTable(numGlyphs) {\n        return new table.Table('maxp', [\n            {name: 'version', type: 'FIXED', value: 0x00005000},\n            {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n        ]);\n    }\n\n    var parse_1$8 = parseMaxpTable;\n    var make$6 = makeMaxpTable;\n\n    var maxp = {\n    \tparse: parse_1$8,\n    \tmake: make$6\n    };\n\n    var decode = types.decode;\n    var encode = types.encode;\n\n\n\n    // NameIDs for the name table.\n    var nameTableNames = [\n        'copyright',              // 0\n        'fontFamily',             // 1\n        'fontSubfamily',          // 2\n        'uniqueID',               // 3\n        'fullName',               // 4\n        'version',                // 5\n        'postScriptName',         // 6\n        'trademark',              // 7\n        'manufacturer',           // 8\n        'designer',               // 9\n        'description',            // 10\n        'manufacturerURL',        // 11\n        'designerURL',            // 12\n        'licence',                // 13\n        'licenceURL',             // 14\n        'reserved',               // 15\n        'preferredFamily',        // 16\n        'preferredSubfamily',     // 17\n        'compatibleFullName',     // 18\n        'sampleText',             // 19\n        'postScriptFindFontName', // 20\n        'wwsFamily',              // 21\n        'wwsSubfamily'            // 22\n    ];\n\n    var macLanguages = {\n        0: 'en',\n        1: 'fr',\n        2: 'de',\n        3: 'it',\n        4: 'nl',\n        5: 'sv',\n        6: 'es',\n        7: 'da',\n        8: 'pt',\n        9: 'no',\n        10: 'he',\n        11: 'ja',\n        12: 'ar',\n        13: 'fi',\n        14: 'el',\n        15: 'is',\n        16: 'mt',\n        17: 'tr',\n        18: 'hr',\n        19: 'zh-Hant',\n        20: 'ur',\n        21: 'hi',\n        22: 'th',\n        23: 'ko',\n        24: 'lt',\n        25: 'pl',\n        26: 'hu',\n        27: 'es',\n        28: 'lv',\n        29: 'se',\n        30: 'fo',\n        31: 'fa',\n        32: 'ru',\n        33: 'zh',\n        34: 'nl-BE',\n        35: 'ga',\n        36: 'sq',\n        37: 'ro',\n        38: 'cz',\n        39: 'sk',\n        40: 'si',\n        41: 'yi',\n        42: 'sr',\n        43: 'mk',\n        44: 'bg',\n        45: 'uk',\n        46: 'be',\n        47: 'uz',\n        48: 'kk',\n        49: 'az-Cyrl',\n        50: 'az-Arab',\n        51: 'hy',\n        52: 'ka',\n        53: 'mo',\n        54: 'ky',\n        55: 'tg',\n        56: 'tk',\n        57: 'mn-CN',\n        58: 'mn',\n        59: 'ps',\n        60: 'ks',\n        61: 'ku',\n        62: 'sd',\n        63: 'bo',\n        64: 'ne',\n        65: 'sa',\n        66: 'mr',\n        67: 'bn',\n        68: 'as',\n        69: 'gu',\n        70: 'pa',\n        71: 'or',\n        72: 'ml',\n        73: 'kn',\n        74: 'ta',\n        75: 'te',\n        76: 'si',\n        77: 'my',\n        78: 'km',\n        79: 'lo',\n        80: 'vi',\n        81: 'id',\n        82: 'tl',\n        83: 'ms',\n        84: 'ms-Arab',\n        85: 'am',\n        86: 'ti',\n        87: 'om',\n        88: 'so',\n        89: 'sw',\n        90: 'rw',\n        91: 'rn',\n        92: 'ny',\n        93: 'mg',\n        94: 'eo',\n        128: 'cy',\n        129: 'eu',\n        130: 'ca',\n        131: 'la',\n        132: 'qu',\n        133: 'gn',\n        134: 'ay',\n        135: 'tt',\n        136: 'ug',\n        137: 'dz',\n        138: 'jv',\n        139: 'su',\n        140: 'gl',\n        141: 'af',\n        142: 'br',\n        143: 'iu',\n        144: 'gd',\n        145: 'gv',\n        146: 'ga',\n        147: 'to',\n        148: 'el-polyton',\n        149: 'kl',\n        150: 'az',\n        151: 'nn'\n    };\n\n    // MacOS language ID \u2192 MacOS script ID\n    //\n    // Note that the script ID is not sufficient to determine what encoding\n    // to use in TrueType files. For some languages, MacOS used a modification\n    // of a mainstream script. For example, an Icelandic name would be stored\n    // with smRoman in the TrueType naming table, but the actual encoding\n    // is a special Icelandic version of the normal Macintosh Roman encoding.\n    // As another example, Inuktitut uses an 8-bit encoding for Canadian Aboriginal\n    // Syllables but MacOS had run out of available script codes, so this was\n    // done as a (pretty radical) \"modification\" of Ethiopic.\n    //\n    // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\n    var macLanguageToScript = {\n        0: 0,  // langEnglish \u2192 smRoman\n        1: 0,  // langFrench \u2192 smRoman\n        2: 0,  // langGerman \u2192 smRoman\n        3: 0,  // langItalian \u2192 smRoman\n        4: 0,  // langDutch \u2192 smRoman\n        5: 0,  // langSwedish \u2192 smRoman\n        6: 0,  // langSpanish \u2192 smRoman\n        7: 0,  // langDanish \u2192 smRoman\n        8: 0,  // langPortuguese \u2192 smRoman\n        9: 0,  // langNorwegian \u2192 smRoman\n        10: 5,  // langHebrew \u2192 smHebrew\n        11: 1,  // langJapanese \u2192 smJapanese\n        12: 4,  // langArabic \u2192 smArabic\n        13: 0,  // langFinnish \u2192 smRoman\n        14: 6,  // langGreek \u2192 smGreek\n        15: 0,  // langIcelandic \u2192 smRoman (modified)\n        16: 0,  // langMaltese \u2192 smRoman\n        17: 0,  // langTurkish \u2192 smRoman (modified)\n        18: 0,  // langCroatian \u2192 smRoman (modified)\n        19: 2,  // langTradChinese \u2192 smTradChinese\n        20: 4,  // langUrdu \u2192 smArabic\n        21: 9,  // langHindi \u2192 smDevanagari\n        22: 21,  // langThai \u2192 smThai\n        23: 3,  // langKorean \u2192 smKorean\n        24: 29,  // langLithuanian \u2192 smCentralEuroRoman\n        25: 29,  // langPolish \u2192 smCentralEuroRoman\n        26: 29,  // langHungarian \u2192 smCentralEuroRoman\n        27: 29,  // langEstonian \u2192 smCentralEuroRoman\n        28: 29,  // langLatvian \u2192 smCentralEuroRoman\n        29: 0,  // langSami \u2192 smRoman\n        30: 0,  // langFaroese \u2192 smRoman (modified)\n        31: 4,  // langFarsi \u2192 smArabic (modified)\n        32: 7,  // langRussian \u2192 smCyrillic\n        33: 25,  // langSimpChinese \u2192 smSimpChinese\n        34: 0,  // langFlemish \u2192 smRoman\n        35: 0,  // langIrishGaelic \u2192 smRoman (modified)\n        36: 0,  // langAlbanian \u2192 smRoman\n        37: 0,  // langRomanian \u2192 smRoman (modified)\n        38: 29,  // langCzech \u2192 smCentralEuroRoman\n        39: 29,  // langSlovak \u2192 smCentralEuroRoman\n        40: 0,  // langSlovenian \u2192 smRoman (modified)\n        41: 5,  // langYiddish \u2192 smHebrew\n        42: 7,  // langSerbian \u2192 smCyrillic\n        43: 7,  // langMacedonian \u2192 smCyrillic\n        44: 7,  // langBulgarian \u2192 smCyrillic\n        45: 7,  // langUkrainian \u2192 smCyrillic (modified)\n        46: 7,  // langByelorussian \u2192 smCyrillic\n        47: 7,  // langUzbek \u2192 smCyrillic\n        48: 7,  // langKazakh \u2192 smCyrillic\n        49: 7,  // langAzerbaijani \u2192 smCyrillic\n        50: 4,  // langAzerbaijanAr \u2192 smArabic\n        51: 24,  // langArmenian \u2192 smArmenian\n        52: 23,  // langGeorgian \u2192 smGeorgian\n        53: 7,  // langMoldavian \u2192 smCyrillic\n        54: 7,  // langKirghiz \u2192 smCyrillic\n        55: 7,  // langTajiki \u2192 smCyrillic\n        56: 7,  // langTurkmen \u2192 smCyrillic\n        57: 27,  // langMongolian \u2192 smMongolian\n        58: 7,  // langMongolianCyr \u2192 smCyrillic\n        59: 4,  // langPashto \u2192 smArabic\n        60: 4,  // langKurdish \u2192 smArabic\n        61: 4,  // langKashmiri \u2192 smArabic\n        62: 4,  // langSindhi \u2192 smArabic\n        63: 26,  // langTibetan \u2192 smTibetan\n        64: 9,  // langNepali \u2192 smDevanagari\n        65: 9,  // langSanskrit \u2192 smDevanagari\n        66: 9,  // langMarathi \u2192 smDevanagari\n        67: 13,  // langBengali \u2192 smBengali\n        68: 13,  // langAssamese \u2192 smBengali\n        69: 11,  // langGujarati \u2192 smGujarati\n        70: 10,  // langPunjabi \u2192 smGurmukhi\n        71: 12,  // langOriya \u2192 smOriya\n        72: 17,  // langMalayalam \u2192 smMalayalam\n        73: 16,  // langKannada \u2192 smKannada\n        74: 14,  // langTamil \u2192 smTamil\n        75: 15,  // langTelugu \u2192 smTelugu\n        76: 18,  // langSinhalese \u2192 smSinhalese\n        77: 19,  // langBurmese \u2192 smBurmese\n        78: 20,  // langKhmer \u2192 smKhmer\n        79: 22,  // langLao \u2192 smLao\n        80: 30,  // langVietnamese \u2192 smVietnamese\n        81: 0,  // langIndonesian \u2192 smRoman\n        82: 0,  // langTagalog \u2192 smRoman\n        83: 0,  // langMalayRoman \u2192 smRoman\n        84: 4,  // langMalayArabic \u2192 smArabic\n        85: 28,  // langAmharic \u2192 smEthiopic\n        86: 28,  // langTigrinya \u2192 smEthiopic\n        87: 28,  // langOromo \u2192 smEthiopic\n        88: 0,  // langSomali \u2192 smRoman\n        89: 0,  // langSwahili \u2192 smRoman\n        90: 0,  // langKinyarwanda \u2192 smRoman\n        91: 0,  // langRundi \u2192 smRoman\n        92: 0,  // langNyanja \u2192 smRoman\n        93: 0,  // langMalagasy \u2192 smRoman\n        94: 0,  // langEsperanto \u2192 smRoman\n        128: 0,  // langWelsh \u2192 smRoman (modified)\n        129: 0,  // langBasque \u2192 smRoman\n        130: 0,  // langCatalan \u2192 smRoman\n        131: 0,  // langLatin \u2192 smRoman\n        132: 0,  // langQuechua \u2192 smRoman\n        133: 0,  // langGuarani \u2192 smRoman\n        134: 0,  // langAymara \u2192 smRoman\n        135: 7,  // langTatar \u2192 smCyrillic\n        136: 4,  // langUighur \u2192 smArabic\n        137: 26,  // langDzongkha \u2192 smTibetan\n        138: 0,  // langJavaneseRom \u2192 smRoman\n        139: 0,  // langSundaneseRom \u2192 smRoman\n        140: 0,  // langGalician \u2192 smRoman\n        141: 0,  // langAfrikaans \u2192 smRoman\n        142: 0,  // langBreton \u2192 smRoman (modified)\n        143: 28,  // langInuktitut \u2192 smEthiopic (modified)\n        144: 0,  // langScottishGaelic \u2192 smRoman (modified)\n        145: 0,  // langManxGaelic \u2192 smRoman (modified)\n        146: 0,  // langIrishGaelicScript \u2192 smRoman (modified)\n        147: 0,  // langTongan \u2192 smRoman\n        148: 6,  // langGreekAncient \u2192 smRoman\n        149: 0,  // langGreenlandic \u2192 smRoman\n        150: 0,  // langAzerbaijanRoman \u2192 smRoman\n        151: 0   // langNynorsk \u2192 smRoman\n    };\n\n    // While Microsoft indicates a region/country for all its language\n    // IDs, we omit the region code if it's equal to the \"most likely\n    // region subtag\" according to Unicode CLDR. For scripts, we omit\n    // the subtag if it is equal to the Suppress-Script entry in the\n    // IANA language subtag registry for IETF BCP 47.\n    //\n    // For example, Microsoft states that its language code 0x041A is\n    // Croatian in Croatia. We transform this to the BCP 47 language code 'hr'\n    // and not 'hr-HR' because Croatia is the default country for Croatian,\n    // according to Unicode CLDR. As another example, Microsoft states\n    // that 0x101A is Croatian (Latin) in Bosnia-Herzegovina. We transform\n    // this to 'hr-BA' and not 'hr-Latn-BA' because Latin is the default script\n    // for the Croatian language, according to IANA.\n    //\n    // http://www.unicode.org/cldr/charts/latest/supplemental/likely_subtags.html\n    // http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n    var windowsLanguages = {\n        0x0436: 'af',\n        0x041C: 'sq',\n        0x0484: 'gsw',\n        0x045E: 'am',\n        0x1401: 'ar-DZ',\n        0x3C01: 'ar-BH',\n        0x0C01: 'ar',\n        0x0801: 'ar-IQ',\n        0x2C01: 'ar-JO',\n        0x3401: 'ar-KW',\n        0x3001: 'ar-LB',\n        0x1001: 'ar-LY',\n        0x1801: 'ary',\n        0x2001: 'ar-OM',\n        0x4001: 'ar-QA',\n        0x0401: 'ar-SA',\n        0x2801: 'ar-SY',\n        0x1C01: 'aeb',\n        0x3801: 'ar-AE',\n        0x2401: 'ar-YE',\n        0x042B: 'hy',\n        0x044D: 'as',\n        0x082C: 'az-Cyrl',\n        0x042C: 'az',\n        0x046D: 'ba',\n        0x042D: 'eu',\n        0x0423: 'be',\n        0x0845: 'bn',\n        0x0445: 'bn-IN',\n        0x201A: 'bs-Cyrl',\n        0x141A: 'bs',\n        0x047E: 'br',\n        0x0402: 'bg',\n        0x0403: 'ca',\n        0x0C04: 'zh-HK',\n        0x1404: 'zh-MO',\n        0x0804: 'zh',\n        0x1004: 'zh-SG',\n        0x0404: 'zh-TW',\n        0x0483: 'co',\n        0x041A: 'hr',\n        0x101A: 'hr-BA',\n        0x0405: 'cs',\n        0x0406: 'da',\n        0x048C: 'prs',\n        0x0465: 'dv',\n        0x0813: 'nl-BE',\n        0x0413: 'nl',\n        0x0C09: 'en-AU',\n        0x2809: 'en-BZ',\n        0x1009: 'en-CA',\n        0x2409: 'en-029',\n        0x4009: 'en-IN',\n        0x1809: 'en-IE',\n        0x2009: 'en-JM',\n        0x4409: 'en-MY',\n        0x1409: 'en-NZ',\n        0x3409: 'en-PH',\n        0x4809: 'en-SG',\n        0x1C09: 'en-ZA',\n        0x2C09: 'en-TT',\n        0x0809: 'en-GB',\n        0x0409: 'en',\n        0x3009: 'en-ZW',\n        0x0425: 'et',\n        0x0438: 'fo',\n        0x0464: 'fil',\n        0x040B: 'fi',\n        0x080C: 'fr-BE',\n        0x0C0C: 'fr-CA',\n        0x040C: 'fr',\n        0x140C: 'fr-LU',\n        0x180C: 'fr-MC',\n        0x100C: 'fr-CH',\n        0x0462: 'fy',\n        0x0456: 'gl',\n        0x0437: 'ka',\n        0x0C07: 'de-AT',\n        0x0407: 'de',\n        0x1407: 'de-LI',\n        0x1007: 'de-LU',\n        0x0807: 'de-CH',\n        0x0408: 'el',\n        0x046F: 'kl',\n        0x0447: 'gu',\n        0x0468: 'ha',\n        0x040D: 'he',\n        0x0439: 'hi',\n        0x040E: 'hu',\n        0x040F: 'is',\n        0x0470: 'ig',\n        0x0421: 'id',\n        0x045D: 'iu',\n        0x085D: 'iu-Latn',\n        0x083C: 'ga',\n        0x0434: 'xh',\n        0x0435: 'zu',\n        0x0410: 'it',\n        0x0810: 'it-CH',\n        0x0411: 'ja',\n        0x044B: 'kn',\n        0x043F: 'kk',\n        0x0453: 'km',\n        0x0486: 'quc',\n        0x0487: 'rw',\n        0x0441: 'sw',\n        0x0457: 'kok',\n        0x0412: 'ko',\n        0x0440: 'ky',\n        0x0454: 'lo',\n        0x0426: 'lv',\n        0x0427: 'lt',\n        0x082E: 'dsb',\n        0x046E: 'lb',\n        0x042F: 'mk',\n        0x083E: 'ms-BN',\n        0x043E: 'ms',\n        0x044C: 'ml',\n        0x043A: 'mt',\n        0x0481: 'mi',\n        0x047A: 'arn',\n        0x044E: 'mr',\n        0x047C: 'moh',\n        0x0450: 'mn',\n        0x0850: 'mn-CN',\n        0x0461: 'ne',\n        0x0414: 'nb',\n        0x0814: 'nn',\n        0x0482: 'oc',\n        0x0448: 'or',\n        0x0463: 'ps',\n        0x0415: 'pl',\n        0x0416: 'pt',\n        0x0816: 'pt-PT',\n        0x0446: 'pa',\n        0x046B: 'qu-BO',\n        0x086B: 'qu-EC',\n        0x0C6B: 'qu',\n        0x0418: 'ro',\n        0x0417: 'rm',\n        0x0419: 'ru',\n        0x243B: 'smn',\n        0x103B: 'smj-NO',\n        0x143B: 'smj',\n        0x0C3B: 'se-FI',\n        0x043B: 'se',\n        0x083B: 'se-SE',\n        0x203B: 'sms',\n        0x183B: 'sma-NO',\n        0x1C3B: 'sms',\n        0x044F: 'sa',\n        0x1C1A: 'sr-Cyrl-BA',\n        0x0C1A: 'sr',\n        0x181A: 'sr-Latn-BA',\n        0x081A: 'sr-Latn',\n        0x046C: 'nso',\n        0x0432: 'tn',\n        0x045B: 'si',\n        0x041B: 'sk',\n        0x0424: 'sl',\n        0x2C0A: 'es-AR',\n        0x400A: 'es-BO',\n        0x340A: 'es-CL',\n        0x240A: 'es-CO',\n        0x140A: 'es-CR',\n        0x1C0A: 'es-DO',\n        0x300A: 'es-EC',\n        0x440A: 'es-SV',\n        0x100A: 'es-GT',\n        0x480A: 'es-HN',\n        0x080A: 'es-MX',\n        0x4C0A: 'es-NI',\n        0x180A: 'es-PA',\n        0x3C0A: 'es-PY',\n        0x280A: 'es-PE',\n        0x500A: 'es-PR',\n\n        // Microsoft has defined two different language codes for\n        // \u201CSpanish with modern sorting\u201D and \u201CSpanish with traditional\n        // sorting\u201D. This makes sense for collation APIs, and it would be\n        // possible to express this in BCP 47 language tags via Unicode\n        // extensions (eg., es-u-co-trad is Spanish with traditional\n        // sorting). However, for storing names in fonts, the distinction\n        // does not make sense, so we give \u201Ces\u201D in both cases.\n        0x0C0A: 'es',\n        0x040A: 'es',\n\n        0x540A: 'es-US',\n        0x380A: 'es-UY',\n        0x200A: 'es-VE',\n        0x081D: 'sv-FI',\n        0x041D: 'sv',\n        0x045A: 'syr',\n        0x0428: 'tg',\n        0x085F: 'tzm',\n        0x0449: 'ta',\n        0x0444: 'tt',\n        0x044A: 'te',\n        0x041E: 'th',\n        0x0451: 'bo',\n        0x041F: 'tr',\n        0x0442: 'tk',\n        0x0480: 'ug',\n        0x0422: 'uk',\n        0x042E: 'hsb',\n        0x0420: 'ur',\n        0x0843: 'uz-Cyrl',\n        0x0443: 'uz',\n        0x042A: 'vi',\n        0x0452: 'cy',\n        0x0488: 'wo',\n        0x0485: 'sah',\n        0x0478: 'ii',\n        0x046A: 'yo'\n    };\n\n    // Returns a IETF BCP 47 language code, for example 'zh-Hant'\n    // for 'Chinese in the traditional script'.\n    function getLanguageCode(platformID, languageID, ltag) {\n        switch (platformID) {\n        case 0:  // Unicode\n            if (languageID === 0xFFFF) {\n                return 'und';\n            } else if (ltag) {\n                return ltag[languageID];\n            }\n\n            break;\n\n        case 1:  // Macintosh\n            return macLanguages[languageID];\n\n        case 3:  // Windows\n            return windowsLanguages[languageID];\n        }\n\n        return undefined;\n    }\n\n    var utf16 = 'utf-16';\n\n    // MacOS script ID \u2192 encoding. This table stores the default case,\n    // which can be overridden by macLanguageEncodings.\n    var macScriptEncodings = {\n        0: 'macintosh',           // smRoman\n        1: 'x-mac-japanese',      // smJapanese\n        2: 'x-mac-chinesetrad',   // smTradChinese\n        3: 'x-mac-korean',        // smKorean\n        6: 'x-mac-greek',         // smGreek\n        7: 'x-mac-cyrillic',      // smCyrillic\n        9: 'x-mac-devanagai',     // smDevanagari\n        10: 'x-mac-gurmukhi',     // smGurmukhi\n        11: 'x-mac-gujarati',     // smGujarati\n        12: 'x-mac-oriya',        // smOriya\n        13: 'x-mac-bengali',      // smBengali\n        14: 'x-mac-tamil',        // smTamil\n        15: 'x-mac-telugu',       // smTelugu\n        16: 'x-mac-kannada',      // smKannada\n        17: 'x-mac-malayalam',    // smMalayalam\n        18: 'x-mac-sinhalese',    // smSinhalese\n        19: 'x-mac-burmese',      // smBurmese\n        20: 'x-mac-khmer',        // smKhmer\n        21: 'x-mac-thai',         // smThai\n        22: 'x-mac-lao',          // smLao\n        23: 'x-mac-georgian',     // smGeorgian\n        24: 'x-mac-armenian',     // smArmenian\n        25: 'x-mac-chinesesimp',  // smSimpChinese\n        26: 'x-mac-tibetan',      // smTibetan\n        27: 'x-mac-mongolian',    // smMongolian\n        28: 'x-mac-ethiopic',     // smEthiopic\n        29: 'x-mac-ce',           // smCentralEuroRoman\n        30: 'x-mac-vietnamese',   // smVietnamese\n        31: 'x-mac-extarabic'     // smExtArabic\n    };\n\n    // MacOS language ID \u2192 encoding. This table stores the exceptional\n    // cases, which override macScriptEncodings. For writing MacOS naming\n    // tables, we need to emit a MacOS script ID. Therefore, we cannot\n    // merge macScriptEncodings into macLanguageEncodings.\n    //\n    // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\n    var macLanguageEncodings = {\n        15: 'x-mac-icelandic',    // langIcelandic\n        17: 'x-mac-turkish',      // langTurkish\n        18: 'x-mac-croatian',     // langCroatian\n        24: 'x-mac-ce',           // langLithuanian\n        25: 'x-mac-ce',           // langPolish\n        26: 'x-mac-ce',           // langHungarian\n        27: 'x-mac-ce',           // langEstonian\n        28: 'x-mac-ce',           // langLatvian\n        30: 'x-mac-icelandic',    // langFaroese\n        37: 'x-mac-romanian',     // langRomanian\n        38: 'x-mac-ce',           // langCzech\n        39: 'x-mac-ce',           // langSlovak\n        40: 'x-mac-ce',           // langSlovenian\n        143: 'x-mac-inuit',       // langInuktitut\n        146: 'x-mac-gaelic'       // langIrishGaelicScript\n    };\n\n    function getEncoding(platformID, encodingID, languageID) {\n        switch (platformID) {\n        case 0:  // Unicode\n            return utf16;\n\n        case 1:  // Apple Macintosh\n            return macLanguageEncodings[languageID] || macScriptEncodings[encodingID];\n\n        case 3:  // Microsoft Windows\n            if (encodingID === 1 || encodingID === 10) {\n                return utf16;\n            }\n\n            break;\n        }\n\n        return undefined;\n    }\n\n    // Parse the naming `name` table.\n    // FIXME: Format 1 additional fields are not supported yet.\n    // ltag is the content of the `ltag' table, such as ['en', 'zh-Hans', 'de-CH-1904'].\n    function parseNameTable(data, start, ltag) {\n        var name = {};\n        var p = new parse.Parser(data, start);\n        var format = p.parseUShort();\n        var count = p.parseUShort();\n        var stringOffset = p.offset + p.parseUShort();\n        for (var i = 0; i < count; i++) {\n            var platformID = p.parseUShort();\n            var encodingID = p.parseUShort();\n            var languageID = p.parseUShort();\n            var nameID = p.parseUShort();\n            var property = nameTableNames[nameID] || nameID;\n            var byteLength = p.parseUShort();\n            var offset = p.parseUShort();\n            var language = getLanguageCode(platformID, languageID, ltag);\n            var encoding = getEncoding(platformID, encodingID, languageID);\n            if (encoding !== undefined && language !== undefined) {\n                var text;\n                if (encoding === utf16) {\n                    text = decode.UTF16(data, stringOffset + offset, byteLength);\n                } else {\n                    text = decode.MACSTRING(data, stringOffset + offset, byteLength, encoding);\n                }\n\n                if (text) {\n                    var translations = name[property];\n                    if (translations === undefined) {\n                        translations = name[property] = {};\n                    }\n\n                    translations[language] = text;\n                }\n            }\n        }\n        if (format === 1) {\n            // FIXME: Also handle Microsoft's 'name' table 1.\n            p.parseUShort();\n        }\n\n        return name;\n    }\n\n    // {23: 'foo'} \u2192 {'foo': 23}\n    // ['bar', 'baz'] \u2192 {'bar': 0, 'baz': 1}\n    function reverseDict(dict) {\n        var result = {};\n        for (var key in dict) {\n            result[dict[key]] = parseInt(key);\n        }\n\n        return result;\n    }\n\n    function makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n        return new table.Table('NameRecord', [\n            {name: 'platformID', type: 'USHORT', value: platformID},\n            {name: 'encodingID', type: 'USHORT', value: encodingID},\n            {name: 'languageID', type: 'USHORT', value: languageID},\n            {name: 'nameID', type: 'USHORT', value: nameID},\n            {name: 'length', type: 'USHORT', value: length},\n            {name: 'offset', type: 'USHORT', value: offset}\n        ]);\n    }\n\n    // Finds the position of needle in haystack, or -1 if not there.\n    // Like String.indexOf(), but for arrays.\n    function findSubArray(needle, haystack) {\n        var needleLength = needle.length;\n        var limit = haystack.length - needleLength + 1;\n\n        loop:\n        for (var pos = 0; pos < limit; pos++) {\n            for (; pos < limit; pos++) {\n                for (var k = 0; k < needleLength; k++) {\n                    if (haystack[pos + k] !== needle[k]) {\n                        continue loop;\n                    }\n                }\n\n                return pos;\n            }\n        }\n\n        return -1;\n    }\n\n    function addStringToPool(s, pool) {\n        var offset = findSubArray(s, pool);\n        if (offset < 0) {\n            offset = pool.length;\n            for (var i = 0, len = s.length; i < len; ++i) {\n                pool.push(s[i]);\n            }\n\n        }\n\n        return offset;\n    }\n\n    function makeNameTable(names, ltag) {\n        var nameID;\n        var nameIDs = [];\n\n        var namesWithNumericKeys = {};\n        var nameTableIds = reverseDict(nameTableNames);\n        for (var key in names) {\n            var id = nameTableIds[key];\n            if (id === undefined) {\n                id = key;\n            }\n\n            nameID = parseInt(id);\n            namesWithNumericKeys[nameID] = names[key];\n            nameIDs.push(nameID);\n        }\n\n        var macLanguageIds = reverseDict(macLanguages);\n        var windowsLanguageIds = reverseDict(windowsLanguages);\n\n        var nameRecords = [];\n        var stringPool = [];\n\n        for (var i = 0; i < nameIDs.length; i++) {\n            nameID = nameIDs[i];\n            var translations = namesWithNumericKeys[nameID];\n            for (var lang in translations) {\n                var text = translations[lang];\n\n                // For MacOS, we try to emit the name in the form that was introduced\n                // in the initial version of the TrueType spec (in the late 1980s).\n                // However, this can fail for various reasons: the requested BCP 47\n                // language code might not have an old-style Mac equivalent;\n                // we might not have a codec for the needed character encoding;\n                // or the name might contain characters that cannot be expressed\n                // in the old-style Macintosh encoding. In case of failure, we emit\n                // the name in a more modern fashion (Unicode encoding with BCP 47\n                // language tags) that is recognized by MacOS 10.5, released in 2009.\n                // If fonts were only read by operating systems, we could simply\n                // emit all names in the modern form; this would be much easier.\n                // However, there are many applications and libraries that read\n                // 'name' tables directly, and these will usually only recognize\n                // the ancient form (silently skipping the unrecognized names).\n                var macPlatform = 1;  // Macintosh\n                var macLanguage = macLanguageIds[lang];\n                var macScript = macLanguageToScript[macLanguage];\n                var macEncoding = getEncoding(macPlatform, macScript, macLanguage);\n                var macName = encode.MACSTRING(text, macEncoding);\n                if (macName === undefined) {\n                    macPlatform = 0;  // Unicode\n                    macLanguage = ltag.indexOf(lang);\n                    if (macLanguage < 0) {\n                        macLanguage = ltag.length;\n                        ltag.push(lang);\n                    }\n\n                    macScript = 4;  // Unicode 2.0 and later\n                    macName = encode.UTF16(text);\n                }\n\n                var macNameOffset = addStringToPool(macName, stringPool);\n                nameRecords.push(makeNameRecord(macPlatform, macScript, macLanguage,\n                                                nameID, macName.length, macNameOffset));\n\n                var winLanguage = windowsLanguageIds[lang];\n                if (winLanguage !== undefined) {\n                    var winName = encode.UTF16(text);\n                    var winNameOffset = addStringToPool(winName, stringPool);\n                    nameRecords.push(makeNameRecord(3, 1, winLanguage,\n                                                    nameID, winName.length, winNameOffset));\n                }\n            }\n        }\n\n        nameRecords.sort(function(a, b) {\n            return ((a.platformID - b.platformID) ||\n                    (a.encodingID - b.encodingID) ||\n                    (a.languageID - b.languageID) ||\n                    (a.nameID - b.nameID));\n        });\n\n        var t = new table.Table('name', [\n            {name: 'format', type: 'USHORT', value: 0},\n            {name: 'count', type: 'USHORT', value: nameRecords.length},\n            {name: 'stringOffset', type: 'USHORT', value: 6 + nameRecords.length * 12}\n        ]);\n\n        for (var r = 0; r < nameRecords.length; r++) {\n            t.fields.push({name: 'record_' + r, type: 'TABLE', value: nameRecords[r]});\n        }\n\n        t.fields.push({name: 'strings', type: 'LITERAL', value: stringPool});\n        return t;\n    }\n\n    var parse_1$7 = parseNameTable;\n    var make$5 = makeNameTable;\n\n    var name = {\n    \tparse: parse_1$7,\n    \tmake: make$5\n    };\n\n    var unicodeRanges = [\n        {begin: 0x0000, end: 0x007F}, // Basic Latin\n        {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n        {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n        {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n        {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n        {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n        {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n        {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n        {begin: 0x2C80, end: 0x2CFF}, // Coptic\n        {begin: 0x0400, end: 0x04FF}, // Cyrillic\n        {begin: 0x0530, end: 0x058F}, // Armenian\n        {begin: 0x0590, end: 0x05FF}, // Hebrew\n        {begin: 0xA500, end: 0xA63F}, // Vai\n        {begin: 0x0600, end: 0x06FF}, // Arabic\n        {begin: 0x07C0, end: 0x07FF}, // NKo\n        {begin: 0x0900, end: 0x097F}, // Devanagari\n        {begin: 0x0980, end: 0x09FF}, // Bengali\n        {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n        {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n        {begin: 0x0B00, end: 0x0B7F}, // Oriya\n        {begin: 0x0B80, end: 0x0BFF}, // Tamil\n        {begin: 0x0C00, end: 0x0C7F}, // Telugu\n        {begin: 0x0C80, end: 0x0CFF}, // Kannada\n        {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n        {begin: 0x0E00, end: 0x0E7F}, // Thai\n        {begin: 0x0E80, end: 0x0EFF}, // Lao\n        {begin: 0x10A0, end: 0x10FF}, // Georgian\n        {begin: 0x1B00, end: 0x1B7F}, // Balinese\n        {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n        {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n        {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n        {begin: 0x2000, end: 0x206F}, // General Punctuation\n        {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n        {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n        {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n        {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n        {begin: 0x2150, end: 0x218F}, // Number Forms\n        {begin: 0x2190, end: 0x21FF}, // Arrows\n        {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n        {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n        {begin: 0x2400, end: 0x243F}, // Control Pictures\n        {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n        {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n        {begin: 0x2500, end: 0x257F}, // Box Drawing\n        {begin: 0x2580, end: 0x259F}, // Block Elements\n        {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n        {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n        {begin: 0x2700, end: 0x27BF}, // Dingbats\n        {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n        {begin: 0x3040, end: 0x309F}, // Hiragana\n        {begin: 0x30A0, end: 0x30FF}, // Katakana\n        {begin: 0x3100, end: 0x312F}, // Bopomofo\n        {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n        {begin: 0xA840, end: 0xA87F}, // Phags-pa\n        {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n        {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n        {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n        {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n        {begin: 0x10900, end: 0x1091F}, // Phoenicia\n        {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n        {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n        {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n        {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n        {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n        {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n        {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n        {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n        {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n        {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n        {begin: 0xFFF0, end: 0xFFFF}, // Specials\n        {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n        {begin: 0x0700, end: 0x074F}, // Syriac\n        {begin: 0x0780, end: 0x07BF}, // Thaana\n        {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n        {begin: 0x1000, end: 0x109F}, // Myanmar\n        {begin: 0x1200, end: 0x137F}, // Ethiopic\n        {begin: 0x13A0, end: 0x13FF}, // Cherokee\n        {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n        {begin: 0x1680, end: 0x169F}, // Ogham\n        {begin: 0x16A0, end: 0x16FF}, // Runic\n        {begin: 0x1780, end: 0x17FF}, // Khmer\n        {begin: 0x1800, end: 0x18AF}, // Mongolian\n        {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n        {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n        {begin: 0x1700, end: 0x171F}, // Tagalog\n        {begin: 0x10300, end: 0x1032F}, // Old Italic\n        {begin: 0x10330, end: 0x1034F}, // Gothic\n        {begin: 0x10400, end: 0x1044F}, // Deseret\n        {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n        {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n        {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n        {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n        {begin: 0xE0000, end: 0xE007F}, // Tags\n        {begin: 0x1900, end: 0x194F}, // Limbu\n        {begin: 0x1950, end: 0x197F}, // Tai Le\n        {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n        {begin: 0x1A00, end: 0x1A1F}, // Buginese\n        {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n        {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n        {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n        {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n        {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n        {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n        {begin: 0x10380, end: 0x1039F}, // Ugaritic\n        {begin: 0x103A0, end: 0x103DF}, // Old Persian\n        {begin: 0x10450, end: 0x1047F}, // Shavian\n        {begin: 0x10480, end: 0x104AF}, // Osmanya\n        {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n        {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n        {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n        {begin: 0x12000, end: 0x123FF}, // Cuneiform\n        {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n        {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n        {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n        {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n        {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n        {begin: 0xA900, end: 0xA92F}, // Kayah Li\n        {begin: 0xA930, end: 0xA95F}, // Rejang\n        {begin: 0xAA00, end: 0xAA5F}, // Cham\n        {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n        {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n        {begin: 0x102A0, end: 0x102DF}, // Carian\n        {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n    ];\n\n    function getUnicodeRange(unicode) {\n        for (var i = 0; i < unicodeRanges.length; i += 1) {\n            var range = unicodeRanges[i];\n            if (unicode >= range.begin && unicode < range.end) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    // Parse the OS/2 and Windows metrics `OS/2` table\n    function parseOS2Table(data, start) {\n        var os2 = {};\n        var p = new parse.Parser(data, start);\n        os2.version = p.parseUShort();\n        os2.xAvgCharWidth = p.parseShort();\n        os2.usWeightClass = p.parseUShort();\n        os2.usWidthClass = p.parseUShort();\n        os2.fsType = p.parseUShort();\n        os2.ySubscriptXSize = p.parseShort();\n        os2.ySubscriptYSize = p.parseShort();\n        os2.ySubscriptXOffset = p.parseShort();\n        os2.ySubscriptYOffset = p.parseShort();\n        os2.ySuperscriptXSize = p.parseShort();\n        os2.ySuperscriptYSize = p.parseShort();\n        os2.ySuperscriptXOffset = p.parseShort();\n        os2.ySuperscriptYOffset = p.parseShort();\n        os2.yStrikeoutSize = p.parseShort();\n        os2.yStrikeoutPosition = p.parseShort();\n        os2.sFamilyClass = p.parseShort();\n        os2.panose = [];\n        for (var i = 0; i < 10; i++) {\n            os2.panose[i] = p.parseByte();\n        }\n\n        os2.ulUnicodeRange1 = p.parseULong();\n        os2.ulUnicodeRange2 = p.parseULong();\n        os2.ulUnicodeRange3 = p.parseULong();\n        os2.ulUnicodeRange4 = p.parseULong();\n        os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n        os2.fsSelection = p.parseUShort();\n        os2.usFirstCharIndex = p.parseUShort();\n        os2.usLastCharIndex = p.parseUShort();\n        os2.sTypoAscender = p.parseShort();\n        os2.sTypoDescender = p.parseShort();\n        os2.sTypoLineGap = p.parseShort();\n        os2.usWinAscent = p.parseUShort();\n        os2.usWinDescent = p.parseUShort();\n        if (os2.version >= 1) {\n            os2.ulCodePageRange1 = p.parseULong();\n            os2.ulCodePageRange2 = p.parseULong();\n        }\n\n        if (os2.version >= 2) {\n            os2.sxHeight = p.parseShort();\n            os2.sCapHeight = p.parseShort();\n            os2.usDefaultChar = p.parseUShort();\n            os2.usBreakChar = p.parseUShort();\n            os2.usMaxContent = p.parseUShort();\n        }\n\n        return os2;\n    }\n\n    function makeOS2Table(options) {\n        return new table.Table('OS/2', [\n            {name: 'version', type: 'USHORT', value: 0x0003},\n            {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n            {name: 'usWeightClass', type: 'USHORT', value: 0},\n            {name: 'usWidthClass', type: 'USHORT', value: 0},\n            {name: 'fsType', type: 'USHORT', value: 0},\n            {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n            {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n            {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n            {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n            {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n            {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n            {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n            {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n            {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n            {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n            {name: 'sFamilyClass', type: 'SHORT', value: 0},\n            {name: 'bFamilyType', type: 'BYTE', value: 0},\n            {name: 'bSerifStyle', type: 'BYTE', value: 0},\n            {name: 'bWeight', type: 'BYTE', value: 0},\n            {name: 'bProportion', type: 'BYTE', value: 0},\n            {name: 'bContrast', type: 'BYTE', value: 0},\n            {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n            {name: 'bArmStyle', type: 'BYTE', value: 0},\n            {name: 'bLetterform', type: 'BYTE', value: 0},\n            {name: 'bMidline', type: 'BYTE', value: 0},\n            {name: 'bXHeight', type: 'BYTE', value: 0},\n            {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n            {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n            {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n            {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n            {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n            {name: 'fsSelection', type: 'USHORT', value: 0},\n            {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n            {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n            {name: 'sTypoAscender', type: 'SHORT', value: 0},\n            {name: 'sTypoDescender', type: 'SHORT', value: 0},\n            {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n            {name: 'usWinAscent', type: 'USHORT', value: 0},\n            {name: 'usWinDescent', type: 'USHORT', value: 0},\n            {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n            {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n            {name: 'sxHeight', type: 'SHORT', value: 0},\n            {name: 'sCapHeight', type: 'SHORT', value: 0},\n            {name: 'usDefaultChar', type: 'USHORT', value: 0},\n            {name: 'usBreakChar', type: 'USHORT', value: 0},\n            {name: 'usMaxContext', type: 'USHORT', value: 0}\n        ], options);\n    }\n\n    var unicodeRanges_1 = unicodeRanges;\n    var getUnicodeRange_1 = getUnicodeRange;\n    var parse_1$6 = parseOS2Table;\n    var make$4 = makeOS2Table;\n\n    var os2 = {\n    \tunicodeRanges: unicodeRanges_1,\n    \tgetUnicodeRange: getUnicodeRange_1,\n    \tparse: parse_1$6,\n    \tmake: make$4\n    };\n\n    // Parse the PostScript `post` table\n    function parsePostTable(data, start) {\n        var post = {};\n        var p = new parse.Parser(data, start);\n        var i;\n        post.version = p.parseVersion();\n        post.italicAngle = p.parseFixed();\n        post.underlinePosition = p.parseShort();\n        post.underlineThickness = p.parseShort();\n        post.isFixedPitch = p.parseULong();\n        post.minMemType42 = p.parseULong();\n        post.maxMemType42 = p.parseULong();\n        post.minMemType1 = p.parseULong();\n        post.maxMemType1 = p.parseULong();\n        switch (post.version) {\n        case 1:\n            post.names = encoding.standardNames.slice();\n            break;\n        case 2:\n            post.numberOfGlyphs = p.parseUShort();\n            post.glyphNameIndex = new Array(post.numberOfGlyphs);\n            for (i = 0; i < post.numberOfGlyphs; i++) {\n                post.glyphNameIndex[i] = p.parseUShort();\n            }\n\n            post.names = [];\n            for (i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                    var nameLength = p.parseChar();\n                    post.names.push(p.parseString(nameLength));\n                }\n            }\n\n            break;\n        case 2.5:\n            post.numberOfGlyphs = p.parseUShort();\n            post.offset = new Array(post.numberOfGlyphs);\n            for (i = 0; i < post.numberOfGlyphs; i++) {\n                post.offset[i] = p.parseChar();\n            }\n\n            break;\n        }\n        return post;\n    }\n\n    function makePostTable() {\n        return new table.Table('post', [\n            {name: 'version', type: 'FIXED', value: 0x00030000},\n            {name: 'italicAngle', type: 'FIXED', value: 0},\n            {name: 'underlinePosition', type: 'FWORD', value: 0},\n            {name: 'underlineThickness', type: 'FWORD', value: 0},\n            {name: 'isFixedPitch', type: 'ULONG', value: 0},\n            {name: 'minMemType42', type: 'ULONG', value: 0},\n            {name: 'maxMemType42', type: 'ULONG', value: 0},\n            {name: 'minMemType1', type: 'ULONG', value: 0},\n            {name: 'maxMemType1', type: 'ULONG', value: 0}\n        ]);\n    }\n\n    var parse_1$5 = parsePostTable;\n    var make$3 = makePostTable;\n\n    var post = {\n    \tparse: parse_1$5,\n    \tmake: make$3\n    };\n\n    function log2(v) {\n        return Math.log(v) / Math.log(2) | 0;\n    }\n\n    function computeCheckSum(bytes) {\n        while (bytes.length % 4 !== 0) {\n            bytes.push(0);\n        }\n\n        var sum = 0;\n        for (var i = 0; i < bytes.length; i += 4) {\n            sum += (bytes[i] << 24) +\n                (bytes[i + 1] << 16) +\n                (bytes[i + 2] << 8) +\n                (bytes[i + 3]);\n        }\n\n        sum %= Math.pow(2, 32);\n        return sum;\n    }\n\n    function makeTableRecord(tag, checkSum, offset, length) {\n        return new table.Table('Table Record', [\n            {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n            {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n            {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n            {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n        ]);\n    }\n\n    function makeSfntTable(tables) {\n        var sfnt = new table.Table('sfnt', [\n            {name: 'version', type: 'TAG', value: 'OTTO'},\n            {name: 'numTables', type: 'USHORT', value: 0},\n            {name: 'searchRange', type: 'USHORT', value: 0},\n            {name: 'entrySelector', type: 'USHORT', value: 0},\n            {name: 'rangeShift', type: 'USHORT', value: 0}\n        ]);\n        sfnt.tables = tables;\n        sfnt.numTables = tables.length;\n        var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n        sfnt.searchRange = 16 * highestPowerOf2;\n        sfnt.entrySelector = log2(highestPowerOf2);\n        sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n        var recordFields = [];\n        var tableFields = [];\n\n        var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n\n        for (var i = 0; i < tables.length; i += 1) {\n            var t = tables[i];\n            check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n            var tableLength = t.sizeOf();\n            var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n            recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n            tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n            offset += tableLength;\n            check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n            while (offset % 4 !== 0) {\n                offset += 1;\n                tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n            }\n        }\n\n        // Table records need to be sorted alphabetically.\n        recordFields.sort(function(r1, r2) {\n            if (r1.value.tag > r2.value.tag) {\n                return 1;\n            } else {\n                return -1;\n            }\n        });\n\n        sfnt.fields = sfnt.fields.concat(recordFields);\n        sfnt.fields = sfnt.fields.concat(tableFields);\n        return sfnt;\n    }\n\n    // Get the metrics for a character. If the string has more than one character\n    // this function returns metrics for the first available character.\n    // You can provide optional fallback metrics if no characters are available.\n    function metricsForChar(font, chars, notFoundMetrics) {\n        for (var i = 0; i < chars.length; i += 1) {\n            var glyphIndex = font.charToGlyphIndex(chars[i]);\n            if (glyphIndex > 0) {\n                var glyph = font.glyphs.get(glyphIndex);\n                return glyph.getMetrics();\n            }\n        }\n\n        return notFoundMetrics;\n    }\n\n    function average(vs) {\n        var sum = 0;\n        for (var i = 0; i < vs.length; i += 1) {\n            sum += vs[i];\n        }\n\n        return sum / vs.length;\n    }\n\n    // Convert the font object to a SFNT data structure.\n    // This structure contains all the necessary tables and metadata to create a binary OTF file.\n    function fontToSfntTable(font) {\n        var xMins = [];\n        var yMins = [];\n        var xMaxs = [];\n        var yMaxs = [];\n        var advanceWidths = [];\n        var leftSideBearings = [];\n        var rightSideBearings = [];\n        var firstCharIndex;\n        var lastCharIndex = 0;\n        var ulUnicodeRange1 = 0;\n        var ulUnicodeRange2 = 0;\n        var ulUnicodeRange3 = 0;\n        var ulUnicodeRange4 = 0;\n\n        for (var i = 0; i < font.glyphs.length; i += 1) {\n            var glyph = font.glyphs.get(i);\n            var unicode = glyph.unicode | 0;\n            if (firstCharIndex > unicode || firstCharIndex === null) {\n                firstCharIndex = unicode;\n            }\n\n            if (lastCharIndex < unicode) {\n                lastCharIndex = unicode;\n            }\n\n            var position = os2.getUnicodeRange(unicode);\n            if (position < 32) {\n                ulUnicodeRange1 |= 1 << position;\n            } else if (position < 64) {\n                ulUnicodeRange2 |= 1 << position - 32;\n            } else if (position < 96) {\n                ulUnicodeRange3 |= 1 << position - 64;\n            } else if (position < 123) {\n                ulUnicodeRange4 |= 1 << position - 96;\n            } else {\n                throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n            }\n            // Skip non-important characters.\n            if (glyph.name === '.notdef') continue;\n            var metrics = glyph.getMetrics();\n            xMins.push(metrics.xMin);\n            yMins.push(metrics.yMin);\n            xMaxs.push(metrics.xMax);\n            yMaxs.push(metrics.yMax);\n            leftSideBearings.push(metrics.leftSideBearing);\n            rightSideBearings.push(metrics.rightSideBearing);\n            advanceWidths.push(glyph.advanceWidth);\n        }\n\n        var globals = {\n            xMin: Math.min.apply(null, xMins),\n            yMin: Math.min.apply(null, yMins),\n            xMax: Math.max.apply(null, xMaxs),\n            yMax: Math.max.apply(null, yMaxs),\n            advanceWidthMax: Math.max.apply(null, advanceWidths),\n            advanceWidthAvg: average(advanceWidths),\n            minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n            maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n            minRightSideBearing: Math.min.apply(null, rightSideBearings)\n        };\n        globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n        globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n        var headTable = head.make({\n            unitsPerEm: font.unitsPerEm,\n            xMin: globals.xMin,\n            yMin: globals.yMin,\n            xMax: globals.xMax,\n            yMax: globals.yMax\n        });\n\n        var hheaTable = hhea.make({\n            ascender: globals.ascender,\n            descender: globals.descender,\n            advanceWidthMax: globals.advanceWidthMax,\n            minLeftSideBearing: globals.minLeftSideBearing,\n            minRightSideBearing: globals.minRightSideBearing,\n            xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n            numberOfHMetrics: font.glyphs.length\n        });\n\n        var maxpTable = maxp.make(font.glyphs.length);\n\n        var os2Table = os2.make({\n            xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n            usWeightClass: 500, // Medium FIXME Make this configurable\n            usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n            usFirstCharIndex: firstCharIndex,\n            usLastCharIndex: lastCharIndex,\n            ulUnicodeRange1: ulUnicodeRange1,\n            ulUnicodeRange2: ulUnicodeRange2,\n            ulUnicodeRange3: ulUnicodeRange3,\n            ulUnicodeRange4: ulUnicodeRange4,\n            // See http://typophile.com/node/13081 for more info on vertical metrics.\n            // We get metrics for typical characters (such as \"x\" for xHeight).\n            // We provide some fallback characters if characters are unavailable: their\n            // ordering was chosen experimentally.\n            sTypoAscender: globals.ascender,\n            sTypoDescender: globals.descender,\n            sTypoLineGap: 0,\n            usWinAscent: globals.ascender,\n            usWinDescent: -globals.descender,\n            sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n            sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n            usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n        });\n\n        var hmtxTable = hmtx.make(font.glyphs);\n        var cmapTable = cmap.make(font.glyphs);\n\n        var englishFamilyName = font.getEnglishName('fontFamily');\n        var englishStyleName = font.getEnglishName('fontSubfamily');\n        var englishFullName = englishFamilyName + ' ' + englishStyleName;\n        var postScriptName = font.getEnglishName('postScriptName');\n        if (!postScriptName) {\n            postScriptName = englishFamilyName.replace(/\\s/g, '') + '-' + englishStyleName;\n        }\n\n        var names = {};\n        for (var n in font.names) {\n            names[n] = font.names[n];\n        }\n\n        if (!names.uniqueID) {\n            names.uniqueID = {en: font.getEnglishName('manufacturer') + ':' + englishFullName};\n        }\n\n        if (!names.postScriptName) {\n            names.postScriptName = {en: postScriptName};\n        }\n\n        if (!names.preferredFamily) {\n            names.preferredFamily = font.names.fontFamily;\n        }\n\n        if (!names.preferredSubfamily) {\n            names.preferredSubfamily = font.names.fontSubfamily;\n        }\n\n        var languageTags = [];\n        var nameTable = name.make(names, languageTags);\n        var ltagTable = (languageTags.length > 0 ? ltag.make(languageTags) : undefined);\n\n        var postTable = post.make();\n        var cffTable = cff.make(font.glyphs, {\n            version: font.getEnglishName('version'),\n            fullName: englishFullName,\n            familyName: englishFamilyName,\n            weightName: englishStyleName,\n            postScriptName: postScriptName,\n            unitsPerEm: font.unitsPerEm\n        });\n\n        // The order does not matter because makeSfntTable() will sort them.\n        var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n        if (ltagTable) {\n            tables.push(ltagTable);\n        }\n\n        var sfntTable = makeSfntTable(tables);\n\n        // Compute the font's checkSum and store it in head.checkSumAdjustment.\n        var bytes = sfntTable.encode();\n        var checkSum = computeCheckSum(bytes);\n        var tableFields = sfntTable.fields;\n        var checkSumAdjusted = false;\n        for (i = 0; i < tableFields.length; i += 1) {\n            if (tableFields[i].name === 'head table') {\n                tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n                checkSumAdjusted = true;\n                break;\n            }\n        }\n\n        if (!checkSumAdjusted) {\n            throw new Error('Could not find head table with checkSum to adjust.');\n        }\n\n        return sfntTable;\n    }\n\n    var computeCheckSum_1 = computeCheckSum;\n    var make$2 = makeSfntTable;\n    var fontToTable = fontToSfntTable;\n\n    var sfnt = {\n    \tcomputeCheckSum: computeCheckSum_1,\n    \tmake: make$2,\n    \tfontToTable: fontToTable\n    };\n\n    // A Font represents a loaded OpenType font file.\n    // It contains a set of glyphs and methods to draw text on a drawing context,\n    // or to get a path representing the text.\n    function Font(options) {\n        options = options || {};\n\n        // OS X will complain if the names are empty, so we put a single space everywhere by default.\n        this.names = {\n            fontFamily: {en: options.familyName || ' '},\n            fontSubfamily: {en: options.styleName || ' '},\n            designer: {en: options.designer || ' '},\n            designerURL: {en: options.designerURL || ' '},\n            manufacturer: {en: options.manufacturer || ' '},\n            manufacturerURL: {en: options.manufacturerURL || ' '},\n            license: {en: options.license || ' '},\n            licenseURL: {en: options.licenseURL || ' '},\n            version: {en: options.version || 'Version 0.1'},\n            description: {en: options.description || ' '},\n            copyright: {en: options.copyright || ' '},\n            trademark: {en: options.trademark || ' '}\n        };\n        this.unitsPerEm = options.unitsPerEm || 1000;\n        this.ascender = options.ascender;\n        this.descender = options.descender;\n        this.supported = true; // Deprecated: parseBuffer will throw an error if font is not supported.\n        this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n        this.encoding = new encoding.DefaultEncoding(this);\n        this.tables = {};\n    }\n\n    // Check if the font has a glyph for the given character.\n    Font.prototype.hasChar = function(c) {\n        return this.encoding.charToGlyphIndex(c) !== null;\n    };\n\n    // Convert the given character to a single glyph index.\n    // Note that this function assumes that there is a one-to-one mapping between\n    // the given character and a glyph; for complex scripts this might not be the case.\n    Font.prototype.charToGlyphIndex = function(s) {\n        return this.encoding.charToGlyphIndex(s);\n    };\n\n    // Convert the given character to a single Glyph object.\n    // Note that this function assumes that there is a one-to-one mapping between\n    // the given character and a glyph; for complex scripts this might not be the case.\n    Font.prototype.charToGlyph = function(c) {\n        var glyphIndex = this.charToGlyphIndex(c);\n        var glyph = this.glyphs.get(glyphIndex);\n        if (!glyph) {\n            // .notdef\n            glyph = this.glyphs.get(0);\n        }\n\n        return glyph;\n    };\n\n    // Convert the given text to a list of Glyph objects.\n    // Note that there is no strict one-to-one mapping between characters and\n    // glyphs, so the list of returned glyphs can be larger or smaller than the\n    // length of the given string.\n    Font.prototype.stringToGlyphs = function(s) {\n        var glyphs = [];\n        for (var i = 0; i < s.length; i += 1) {\n            var c = s[i];\n            glyphs.push(this.charToGlyph(c));\n        }\n\n        return glyphs;\n    };\n\n    Font.prototype.nameToGlyphIndex = function(name) {\n        return this.glyphNames.nameToGlyphIndex(name);\n    };\n\n    Font.prototype.nameToGlyph = function(name) {\n        var glyphIndex = this.nametoGlyphIndex(name);\n        var glyph = this.glyphs.get(glyphIndex);\n        if (!glyph) {\n            // .notdef\n            glyph = this.glyphs.get(0);\n        }\n\n        return glyph;\n    };\n\n    Font.prototype.glyphIndexToName = function(gid) {\n        if (!this.glyphNames.glyphIndexToName) {\n            return '';\n        }\n\n        return this.glyphNames.glyphIndexToName(gid);\n    };\n\n    // Retrieve the value of the kerning pair between the left glyph (or its index)\n    // and the right glyph (or its index). If no kerning pair is found, return 0.\n    // The kerning value gets added to the advance width when calculating the spacing\n    // between glyphs.\n    Font.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n        leftGlyph = leftGlyph.index || leftGlyph;\n        rightGlyph = rightGlyph.index || rightGlyph;\n        var gposKerning = this.getGposKerningValue;\n        return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n            (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n    };\n\n    // Helper function that invokes the given callback for each glyph in the given text.\n    // The callback gets `(glyph, x, y, fontSize, options)`.\n    Font.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n        x = x !== undefined ? x : 0;\n        y = y !== undefined ? y : 0;\n        fontSize = fontSize !== undefined ? fontSize : 72;\n        options = options || {};\n        var kerning = options.kerning === undefined ? true : options.kerning;\n        var fontScale = 1 / this.unitsPerEm * fontSize;\n        var glyphs = this.stringToGlyphs(text);\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs[i];\n            callback(glyph, x, y, fontSize, options);\n            if (glyph.advanceWidth) {\n                x += glyph.advanceWidth * fontScale;\n            }\n\n            if (kerning && i < glyphs.length - 1) {\n                var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n                x += kerningValue * fontScale;\n            }\n        }\n    };\n\n    // Create a Path object that represents the given text.\n    //\n    // text - The text to create.\n    // x - Horizontal position of the beginning of the text. (default: 0)\n    // y - Vertical position of the *baseline* of the text. (default: 0)\n    // fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n    // Options is an optional object that contains:\n    // - kerning - Whether to take kerning information into account. (default: true)\n    //\n    // Returns a Path object.\n    Font.prototype.getPath = function(text, x, y, fontSize, options) {\n        var fullPath = new path.Path();\n        this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n            var glyphPath = glyph.getPath(gX, gY, gFontSize);\n            fullPath.extend(glyphPath);\n        });\n\n        return fullPath;\n    };\n\n    // Draw the text on the given drawing context.\n    //\n    // ctx - A 2D drawing context, like Canvas.\n    // text - The text to create.\n    // x - Horizontal position of the beginning of the text. (default: 0)\n    // y - Vertical position of the *baseline* of the text. (default: 0)\n    // fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n    // Options is an optional object that contains:\n    // - kerning - Whether to take kerning information into account. (default: true)\n    Font.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n        this.getPath(text, x, y, fontSize, options).draw(ctx);\n    };\n\n    // Draw the points of all glyphs in the text.\n    // On-curve points will be drawn in blue, off-curve points will be drawn in red.\n    //\n    // ctx - A 2D drawing context, like Canvas.\n    // text - The text to create.\n    // x - Horizontal position of the beginning of the text. (default: 0)\n    // y - Vertical position of the *baseline* of the text. (default: 0)\n    // fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n    // Options is an optional object that contains:\n    // - kerning - Whether to take kerning information into account. (default: true)\n    Font.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n        this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n            glyph.drawPoints(ctx, gX, gY, gFontSize);\n        });\n    };\n\n    // Draw lines indicating important font measurements for all glyphs in the text.\n    // Black lines indicate the origin of the coordinate system (point 0,0).\n    // Blue lines indicate the glyph bounding box.\n    // Green line indicates the advance width of the glyph.\n    //\n    // ctx - A 2D drawing context, like Canvas.\n    // text - The text to create.\n    // x - Horizontal position of the beginning of the text. (default: 0)\n    // y - Vertical position of the *baseline* of the text. (default: 0)\n    // fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n    // Options is an optional object that contains:\n    // - kerning - Whether to take kerning information into account. (default: true)\n    Font.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n        this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n            glyph.drawMetrics(ctx, gX, gY, gFontSize);\n        });\n    };\n\n    Font.prototype.getEnglishName = function(name) {\n        var translations = this.names[name];\n        if (translations) {\n            return translations.en;\n        }\n    };\n\n    // Validate\n    Font.prototype.validate = function() {\n        var _this = this;\n\n        function assert(predicate, message) {\n        }\n\n        function assertNamePresent(name) {\n            var englishName = _this.getEnglishName(name);\n            assert(englishName && englishName.trim().length > 0);\n        }\n\n        // Identification information\n        assertNamePresent('fontFamily');\n        assertNamePresent('weightName');\n        assertNamePresent('manufacturer');\n        assertNamePresent('copyright');\n        assertNamePresent('version');\n\n        // Dimension information\n        assert(this.unitsPerEm > 0);\n    };\n\n    // Convert the font object to a SFNT data structure.\n    // This structure contains all the necessary tables and metadata to create a binary OTF file.\n    Font.prototype.toTables = function() {\n        return sfnt.fontToTable(this);\n    };\n\n    Font.prototype.toBuffer = function() {\n        var sfntTable = this.toTables();\n        var bytes = sfntTable.encode();\n        var buffer = new ArrayBuffer(bytes.length);\n        var intArray = new Uint8Array(buffer);\n        for (var i = 0; i < bytes.length; i++) {\n            intArray[i] = bytes[i];\n        }\n\n        return buffer;\n    };\n\n    // Initiate a download of the OpenType font.\n    Font.prototype.download = function() {\n        var familyName = this.getEnglishName('fontFamily');\n        var styleName = this.getEnglishName('fontSubfamily');\n        var fileName = familyName.replace(/\\s/g, '') + '-' + styleName + '.otf';\n        var buffer = this.toBuffer();\n\n        window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n        window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function(fs) {\n            fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n                fileEntry.createWriter(function(writer) {\n                    var dataView = new DataView(buffer);\n                    var blob = new Blob([dataView], {type: 'font/opentype'});\n                    writer.write(blob);\n\n                    writer.addEventListener('writeend', function() {\n                        // Navigating to the file will download it.\n                        location.href = fileEntry.toURL();\n                    }, false);\n                });\n            });\n        },\n\n        function(err) {\n            throw err;\n        });\n    };\n\n    var Font_1 = Font;\n\n    var font = {\n    \tFont: Font_1\n    };\n\n    function addName(name, names) {\n        var nameString = JSON.stringify(name);\n        var nameID = 256;\n        for (var nameKey in names) {\n            var n = parseInt(nameKey);\n            if (!n || n < 256) {\n                continue;\n            }\n\n            if (JSON.stringify(names[nameKey]) === nameString) {\n                return n;\n            }\n\n            if (nameID <= n) {\n                nameID = n + 1;\n            }\n        }\n\n        names[nameID] = name;\n        return nameID;\n    }\n\n    function makeFvarAxis(axis, names) {\n        var nameID = addName(axis.name, names);\n        return new table.Table('fvarAxis', [\n            {name: 'tag', type: 'TAG', value: axis.tag},\n            {name: 'minValue', type: 'FIXED', value: axis.minValue << 16},\n            {name: 'defaultValue', type: 'FIXED', value: axis.defaultValue << 16},\n            {name: 'maxValue', type: 'FIXED', value: axis.maxValue << 16},\n            {name: 'flags', type: 'USHORT', value: 0},\n            {name: 'nameID', type: 'USHORT', value: nameID}\n        ]);\n    }\n\n    function parseFvarAxis(data, start, names) {\n        var axis = {};\n        var p = new parse.Parser(data, start);\n        axis.tag = p.parseTag();\n        axis.minValue = p.parseFixed();\n        axis.defaultValue = p.parseFixed();\n        axis.maxValue = p.parseFixed();\n        p.skip('uShort', 1);  // reserved for flags; no values defined\n        axis.name = names[p.parseUShort()] || {};\n        return axis;\n    }\n\n    function makeFvarInstance(inst, axes, names) {\n        var nameID = addName(inst.name, names);\n        var fields = [\n            {name: 'nameID', type: 'USHORT', value: nameID},\n            {name: 'flags', type: 'USHORT', value: 0}\n        ];\n\n        for (var i = 0; i < axes.length; ++i) {\n            var axisTag = axes[i].tag;\n            fields.push({\n                name: 'axis ' + axisTag,\n                type: 'FIXED',\n                value: inst.coordinates[axisTag] << 16\n            });\n        }\n\n        return new table.Table('fvarInstance', fields);\n    }\n\n    function parseFvarInstance(data, start, axes, names) {\n        var inst = {};\n        var p = new parse.Parser(data, start);\n        inst.name = names[p.parseUShort()] || {};\n        p.skip('uShort', 1);  // reserved for flags; no values defined\n\n        inst.coordinates = {};\n        for (var i = 0; i < axes.length; ++i) {\n            inst.coordinates[axes[i].tag] = p.parseFixed();\n        }\n\n        return inst;\n    }\n\n    function makeFvarTable(fvar, names) {\n        var result = new table.Table('fvar', [\n            {name: 'version', type: 'ULONG', value: 0x10000},\n            {name: 'offsetToData', type: 'USHORT', value: 0},\n            {name: 'countSizePairs', type: 'USHORT', value: 2},\n            {name: 'axisCount', type: 'USHORT', value: fvar.axes.length},\n            {name: 'axisSize', type: 'USHORT', value: 20},\n            {name: 'instanceCount', type: 'USHORT', value: fvar.instances.length},\n            {name: 'instanceSize', type: 'USHORT', value: 4 + fvar.axes.length * 4}\n        ]);\n        result.offsetToData = result.sizeOf();\n\n        for (var i = 0; i < fvar.axes.length; i++) {\n            result.fields.push({\n                name: 'axis ' + i,\n                type: 'TABLE',\n                value: makeFvarAxis(fvar.axes[i], names)});\n        }\n\n        for (var j = 0; j < fvar.instances.length; j++) {\n            result.fields.push({\n                name: 'instance ' + j,\n                type: 'TABLE',\n                value: makeFvarInstance(fvar.instances[j], fvar.axes, names)\n            });\n        }\n\n        return result;\n    }\n\n    function parseFvarTable(data, start, names) {\n        var p = new parse.Parser(data, start);\n        var tableVersion = p.parseULong();\n        check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n        var offsetToData = p.parseOffset16();\n        // Skip countSizePairs.\n        p.skip('uShort', 1);\n        var axisCount = p.parseUShort();\n        var axisSize = p.parseUShort();\n        var instanceCount = p.parseUShort();\n        var instanceSize = p.parseUShort();\n\n        var axes = [];\n        for (var i = 0; i < axisCount; i++) {\n            axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n        }\n\n        var instances = [];\n        var instanceStart = start + offsetToData + axisCount * axisSize;\n        for (var j = 0; j < instanceCount; j++) {\n            instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n        }\n\n        return {axes:axes, instances:instances};\n    }\n\n    var make$1 = makeFvarTable;\n    var parse_1$4 = parseFvarTable;\n\n    var fvar = {\n    \tmake: make$1,\n    \tparse: parse_1$4\n    };\n\n    // Parse the coordinate data for a glyph.\n    function parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n        var v;\n        if ((flag & shortVectorBitMask) > 0) {\n            // The coordinate is 1 byte long.\n            v = p.parseByte();\n            // The `same` bit is re-used for short values to signify the sign of the value.\n            if ((flag & sameBitMask) === 0) {\n                v = -v;\n            }\n\n            v = previousValue + v;\n        } else {\n            //  The coordinate is 2 bytes long.\n            // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n            if ((flag & sameBitMask) > 0) {\n                v = previousValue;\n            } else {\n                // Parse the coordinate as a signed 16-bit delta value.\n                v = previousValue + p.parseShort();\n            }\n        }\n\n        return v;\n    }\n\n    // Parse a TrueType glyph.\n    function parseGlyph(glyph, data, start) {\n        var p = new parse.Parser(data, start);\n        glyph.numberOfContours = p.parseShort();\n        glyph.xMin = p.parseShort();\n        glyph.yMin = p.parseShort();\n        glyph.xMax = p.parseShort();\n        glyph.yMax = p.parseShort();\n        var flags;\n        var flag;\n        if (glyph.numberOfContours > 0) {\n            var i;\n            // This glyph is not a composite.\n            var endPointIndices = glyph.endPointIndices = [];\n            for (i = 0; i < glyph.numberOfContours; i += 1) {\n                endPointIndices.push(p.parseUShort());\n            }\n\n            glyph.instructionLength = p.parseUShort();\n            glyph.instructions = [];\n            for (i = 0; i < glyph.instructionLength; i += 1) {\n                glyph.instructions.push(p.parseByte());\n            }\n\n            var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n            flags = [];\n            for (i = 0; i < numberOfCoordinates; i += 1) {\n                flag = p.parseByte();\n                flags.push(flag);\n                // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n                if ((flag & 8) > 0) {\n                    var repeatCount = p.parseByte();\n                    for (var j = 0; j < repeatCount; j += 1) {\n                        flags.push(flag);\n                        i += 1;\n                    }\n                }\n            }\n\n            check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n            if (endPointIndices.length > 0) {\n                var points = [];\n                var point;\n                // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n                if (numberOfCoordinates > 0) {\n                    for (i = 0; i < numberOfCoordinates; i += 1) {\n                        flag = flags[i];\n                        point = {};\n                        point.onCurve = !!(flag & 1);\n                        point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                        points.push(point);\n                    }\n\n                    var px = 0;\n                    for (i = 0; i < numberOfCoordinates; i += 1) {\n                        flag = flags[i];\n                        point = points[i];\n                        point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                        px = point.x;\n                    }\n\n                    var py = 0;\n                    for (i = 0; i < numberOfCoordinates; i += 1) {\n                        flag = flags[i];\n                        point = points[i];\n                        point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                        py = point.y;\n                    }\n                }\n\n                glyph.points = points;\n            } else {\n                glyph.points = [];\n            }\n        } else if (glyph.numberOfContours === 0) {\n            glyph.points = [];\n        } else {\n            glyph.isComposite = true;\n            glyph.points = [];\n            glyph.components = [];\n            var moreComponents = true;\n            while (moreComponents) {\n                flags = p.parseUShort();\n                var component = {\n                    glyphIndex: p.parseUShort(),\n                    xScale: 1,\n                    scale01: 0,\n                    scale10: 0,\n                    yScale: 1,\n                    dx: 0,\n                    dy: 0\n                };\n                if ((flags & 1) > 0) {\n                    // The arguments are words\n                    component.dx = p.parseShort();\n                    component.dy = p.parseShort();\n                } else {\n                    // The arguments are bytes\n                    component.dx = p.parseChar();\n                    component.dy = p.parseChar();\n                }\n\n                if ((flags & 8) > 0) {\n                    // We have a scale\n                    component.xScale = component.yScale = p.parseF2Dot14();\n                } else if ((flags & 64) > 0) {\n                    // We have an X / Y scale\n                    component.xScale = p.parseF2Dot14();\n                    component.yScale = p.parseF2Dot14();\n                } else if ((flags & 128) > 0) {\n                    // We have a 2x2 transformation\n                    component.xScale = p.parseF2Dot14();\n                    component.scale01 = p.parseF2Dot14();\n                    component.scale10 = p.parseF2Dot14();\n                    component.yScale = p.parseF2Dot14();\n                }\n\n                glyph.components.push(component);\n                moreComponents = !!(flags & 32);\n            }\n        }\n    }\n\n    // Transform an array of points and return a new array.\n    function transformPoints(points, transform) {\n        var newPoints = [];\n        for (var i = 0; i < points.length; i += 1) {\n            var pt = points[i];\n            var newPt = {\n                x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n                y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n                onCurve: pt.onCurve,\n                lastPointOfContour: pt.lastPointOfContour\n            };\n            newPoints.push(newPt);\n        }\n\n        return newPoints;\n    }\n\n    function getContours(points) {\n        var contours = [];\n        var currentContour = [];\n        for (var i = 0; i < points.length; i += 1) {\n            var pt = points[i];\n            currentContour.push(pt);\n            if (pt.lastPointOfContour) {\n                contours.push(currentContour);\n                currentContour = [];\n            }\n        }\n\n        check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n        return contours;\n    }\n\n    // Convert the TrueType glyph outline to a Path.\n    function getPath(points) {\n        var p = new path.Path();\n        if (!points) {\n            return p;\n        }\n\n        var contours = getContours(points);\n        for (var i = 0; i < contours.length; i += 1) {\n            var contour = contours[i];\n            var firstPt = contour[0];\n            var lastPt = contour[contour.length - 1];\n            var curvePt;\n            var realFirstPoint;\n            if (firstPt.onCurve) {\n                curvePt = null;\n                // The first point will be consumed by the moveTo command,\n                // so skip it in the loop.\n                realFirstPoint = true;\n            } else {\n                if (lastPt.onCurve) {\n                    // If the first point is off-curve and the last point is on-curve,\n                    // start at the last point.\n                    firstPt = lastPt;\n                } else {\n                    // If both first and last points are off-curve, start at their middle.\n                    firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n                }\n\n                curvePt = firstPt;\n                // The first point is synthesized, so don't skip the real first point.\n                realFirstPoint = false;\n            }\n\n            p.moveTo(firstPt.x, firstPt.y);\n\n            for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n                var pt = contour[j];\n                var prevPt = j === 0 ? firstPt : contour[j - 1];\n                if (prevPt.onCurve && pt.onCurve) {\n                    // This is a straight line.\n                    p.lineTo(pt.x, pt.y);\n                } else if (prevPt.onCurve && !pt.onCurve) {\n                    curvePt = pt;\n                } else if (!prevPt.onCurve && !pt.onCurve) {\n                    var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                    p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                    curvePt = pt;\n                } else if (!prevPt.onCurve && pt.onCurve) {\n                    // Previous point off-curve, this point on-curve.\n                    p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                    curvePt = null;\n                } else {\n                    throw new Error('Invalid state.');\n                }\n            }\n\n            if (firstPt !== lastPt) {\n                // Connect the last and first points\n                if (curvePt) {\n                    p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n                } else {\n                    p.lineTo(firstPt.x, firstPt.y);\n                }\n            }\n        }\n\n        p.closePath();\n        return p;\n    }\n\n    function buildPath(glyphs, glyph) {\n        if (glyph.isComposite) {\n            for (var j = 0; j < glyph.components.length; j += 1) {\n                var component = glyph.components[j];\n                var componentGlyph = glyphs.get(component.glyphIndex);\n                // Force the ttfGlyphLoader to parse the glyph.\n                componentGlyph.getPath();\n                if (componentGlyph.points) {\n                    var transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n\n        return getPath(glyph.points);\n    }\n\n    // Parse all the glyphs according to the offsets from the `loca` table.\n    function parseGlyfTable(data, start, loca, font) {\n        var glyphs = new glyphset.GlyphSet(font);\n        var i;\n\n        // The last element of the loca table is invalid.\n        for (i = 0; i < loca.length - 1; i += 1) {\n            var offset = loca[i];\n            var nextOffset = loca[i + 1];\n            if (offset !== nextOffset) {\n                glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n            } else {\n                glyphs.push(i, glyphset.glyphLoader(font, i));\n            }\n        }\n\n        return glyphs;\n    }\n\n    var parse_1$3 = parseGlyfTable;\n\n    var glyf = {\n    \tparse: parse_1$3\n    };\n\n    // Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n    // These lists are unused by now, this function is just the basis for a real parsing.\n    function parseTaggedListTable(data, start) {\n        var p = new parse.Parser(data, start);\n        var n = p.parseUShort();\n        var list = [];\n        for (var i = 0; i < n; i++) {\n            list[p.parseTag()] = { offset: p.parseUShort() };\n        }\n\n        return list;\n    }\n\n    // Parse a coverage table in a GSUB, GPOS or GDEF table.\n    // Format 1 is a simple list of glyph ids,\n    // Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\n    function parseCoverageTable(data, start) {\n        var p = new parse.Parser(data, start);\n        var format = p.parseUShort();\n        var count =  p.parseUShort();\n        if (format === 1) {\n            return p.parseUShortList(count);\n        }\n        else if (format === 2) {\n            var coverage = [];\n            for (; count--;) {\n                var begin = p.parseUShort();\n                var end = p.parseUShort();\n                var index = p.parseUShort();\n                for (var i = begin; i <= end; i++) {\n                    coverage[index++] = i;\n                }\n            }\n\n            return coverage;\n        }\n    }\n\n    // Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n    // Returns a function that gets a class value from a glyph ID.\n    function parseClassDefTable(data, start) {\n        var p = new parse.Parser(data, start);\n        var format = p.parseUShort();\n        if (format === 1) {\n            // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n            var startGlyph = p.parseUShort();\n            var glyphCount = p.parseUShort();\n            var classes = p.parseUShortList(glyphCount);\n            return function(glyphID) {\n                return classes[glyphID - startGlyph] || 0;\n            };\n        }\n        else if (format === 2) {\n            // Format 2 defines multiple groups of glyph indices that belong to the same class.\n            var rangeCount = p.parseUShort();\n            var startGlyphs = [];\n            var endGlyphs = [];\n            var classValues = [];\n            for (var i = 0; i < rangeCount; i++) {\n                startGlyphs[i] = p.parseUShort();\n                endGlyphs[i] = p.parseUShort();\n                classValues[i] = p.parseUShort();\n            }\n\n            return function(glyphID) {\n                var l = 0;\n                var r = startGlyphs.length - 1;\n                while (l < r) {\n                    var c = (l + r + 1) >> 1;\n                    if (glyphID < startGlyphs[c]) {\n                        r = c - 1;\n                    } else {\n                        l = c;\n                    }\n                }\n\n                if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                    return classValues[l] || 0;\n                }\n\n                return 0;\n            };\n        }\n    }\n\n    // Parse a pair adjustment positioning subtable, format 1 or format 2\n    // The subtable is returned in the form of a lookup function.\n    function parsePairPosSubTable(data, start) {\n        var p = new parse.Parser(data, start);\n        // This part is common to format 1 and format 2 subtables\n        var format = p.parseUShort();\n        var coverageOffset = p.parseUShort();\n        var coverage = parseCoverageTable(data, start + coverageOffset);\n        // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n        // Only valueFormat1=4 and valueFormat2=0 is supported.\n        var valueFormat1 = p.parseUShort();\n        var valueFormat2 = p.parseUShort();\n        var value1;\n        if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n        var sharedPairSets = {};\n        if (format === 1) {\n            // Pair Positioning Adjustment: Format 1\n            var pairSetCount = p.parseUShort();\n            var pairSet = [];\n            // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n            var pairSetOffsets = p.parseOffset16List(pairSetCount);\n            for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n                var pairSetOffset = pairSetOffsets[firstGlyph];\n                var sharedPairSet = sharedPairSets[pairSetOffset];\n                if (!sharedPairSet) {\n                    // Parse a pairset table in a pair adjustment subtable format 1\n                    sharedPairSet = {};\n                    p.relativeOffset = pairSetOffset;\n                    var pairValueCount = p.parseUShort();\n                    for (; pairValueCount--;) {\n                        var secondGlyph = p.parseUShort();\n                        if (valueFormat1) value1 = p.parseShort();\n                        if (valueFormat2) p.parseShort();\n                        // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                        // so value1 is the XAdvance and value2 is empty.\n                        sharedPairSet[secondGlyph] = value1;\n                    }\n                }\n\n                pairSet[coverage[firstGlyph]] = sharedPairSet;\n            }\n\n            return function(leftGlyph, rightGlyph) {\n                var pairs = pairSet[leftGlyph];\n                if (pairs) return pairs[rightGlyph];\n            };\n        }\n        else if (format === 2) {\n            // Pair Positioning Adjustment: Format 2\n            var classDef1Offset = p.parseUShort();\n            var classDef2Offset = p.parseUShort();\n            var class1Count = p.parseUShort();\n            var class2Count = p.parseUShort();\n            var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n            var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n            // Parse kerning values by class pair.\n            var kerningMatrix = [];\n            for (var i = 0; i < class1Count; i++) {\n                var kerningRow = kerningMatrix[i] = [];\n                for (var j = 0; j < class2Count; j++) {\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    kerningRow[j] = value1;\n                }\n            }\n\n            // Convert coverage list to a hash\n            var covered = {};\n            for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n            // Get the kerning value for a specific glyph pair.\n            return function(leftGlyph, rightGlyph) {\n                if (!covered[leftGlyph]) return;\n                var class1 = getClass1(leftGlyph);\n                var class2 = getClass2(rightGlyph);\n                var kerningRow = kerningMatrix[class1];\n\n                if (kerningRow) {\n                    return kerningRow[class2];\n                }\n            };\n        }\n    }\n\n    // Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\n    function parseLookupTable(data, start) {\n        var p = new parse.Parser(data, start);\n        var lookupType = p.parseUShort();\n        var lookupFlag = p.parseUShort();\n        var useMarkFilteringSet = lookupFlag & 0x10;\n        var subTableCount = p.parseUShort();\n        var subTableOffsets = p.parseOffset16List(subTableCount);\n        var table = {\n            lookupType: lookupType,\n            lookupFlag: lookupFlag,\n            markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n        };\n        // LookupType 2, Pair adjustment\n        if (lookupType === 2) {\n            var subtables = [];\n            for (var i = 0; i < subTableCount; i++) {\n                subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n            }\n            // Return a function which finds the kerning values in the subtables.\n            table.getKerningValue = function(leftGlyph, rightGlyph) {\n                for (var i = subtables.length; i--;) {\n                    var value = subtables[i](leftGlyph, rightGlyph);\n                    if (value !== undefined) return value;\n                }\n\n                return 0;\n            };\n        }\n\n        return table;\n    }\n\n    // Parse the `GPOS` table which contains, among other things, kerning pairs.\n    // https://www.microsoft.com/typography/OTSPEC/gpos.htm\n    function parseGposTable(data, start, font) {\n        var p = new parse.Parser(data, start);\n        var tableVersion = p.parseFixed();\n        check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n        // ScriptList and FeatureList - ignored for now\n        parseTaggedListTable(data, start + p.parseUShort());\n        // 'kern' is the feature we are looking for.\n        parseTaggedListTable(data, start + p.parseUShort());\n\n        // LookupList\n        var lookupListOffset = p.parseUShort();\n        p.relativeOffset = lookupListOffset;\n        var lookupCount = p.parseUShort();\n        var lookupTableOffsets = p.parseOffset16List(lookupCount);\n        var lookupListAbsoluteOffset = start + lookupListOffset;\n        for (var i = 0; i < lookupCount; i++) {\n            var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n            if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n        }\n    }\n\n    var parse_1$2 = parseGposTable;\n\n    var gpos = {\n    \tparse: parse_1$2\n    };\n\n    // Parse the `kern` table which contains kerning pairs.\n    function parseKernTable(data, start) {\n        var pairs = {};\n        var p = new parse.Parser(data, start);\n        var tableVersion = p.parseUShort();\n        check.argument(tableVersion === 0, 'Unsupported kern table version.');\n        // Skip nTables.\n        p.skip('uShort', 1);\n        var subTableVersion = p.parseUShort();\n        check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n        // Skip subTableLength, subTableCoverage\n        p.skip('uShort', 2);\n        var nPairs = p.parseUShort();\n        // Skip searchRange, entrySelector, rangeShift.\n        p.skip('uShort', 3);\n        for (var i = 0; i < nPairs; i += 1) {\n            var leftIndex = p.parseUShort();\n            var rightIndex = p.parseUShort();\n            var value = p.parseShort();\n            pairs[leftIndex + ',' + rightIndex] = value;\n        }\n\n        return pairs;\n    }\n\n    var parse_1$1 = parseKernTable;\n\n    var kern = {\n    \tparse: parse_1$1\n    };\n\n    // Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n    // relative to the beginning of the glyphData table.\n    // The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n    // The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n    // version where offsets are stored as uLongs. The `head` table specifies which version to use\n    // (under indexToLocFormat).\n    function parseLocaTable(data, start, numGlyphs, shortVersion) {\n        var p = new parse.Parser(data, start);\n        var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n        // There is an extra entry after the last index element to compute the length of the last glyph.\n        // That's why we use numGlyphs + 1.\n        var glyphOffsets = [];\n        for (var i = 0; i < numGlyphs + 1; i += 1) {\n            var glyphOffset = parseFn.call(p);\n            if (shortVersion) {\n                // The short table version stores the actual offset divided by 2.\n                glyphOffset *= 2;\n            }\n\n            glyphOffsets.push(glyphOffset);\n        }\n\n        return glyphOffsets;\n    }\n\n    var parse_1 = parseLocaTable;\n\n    var loca = {\n    \tparse: parse_1\n    };\n\n    // File loaders /////////////////////////////////////////////////////////\n\n    // Convert a Node.js Buffer to an ArrayBuffer\n    function toArrayBuffer(buffer) {\n        var arrayBuffer = new ArrayBuffer(buffer.length);\n        var data = new Uint8Array(arrayBuffer);\n        for (var i = 0; i < buffer.length; i += 1) {\n            data[i] = buffer[i];\n        }\n\n        return arrayBuffer;\n    }\n\n    function loadFromFile(path, callback) {\n        var fs = require$$0__default['default'];\n        fs.readFile(path, function(err, buffer) {\n            if (err) {\n                return callback(err.message);\n            }\n\n            callback(null, toArrayBuffer(buffer));\n        });\n    }\n\n    function loadFromUrl(url, callback) {\n        var request = new XMLHttpRequest();\n        request.open('get', url, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function() {\n            if (request.status !== 200) {\n                return callback('Font could not be loaded: ' + request.statusText);\n            }\n\n            return callback(null, request.response);\n        };\n\n        request.send();\n    }\n\n    // Public API ///////////////////////////////////////////////////////////\n\n    // Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n    // Throws an error if the font could not be parsed.\n    function parseBuffer(buffer) {\n        var indexToLocFormat;\n        var ltagTable;\n\n        var cffOffset;\n        var fvarOffset;\n        var glyfOffset;\n        var gposOffset;\n        var hmtxOffset;\n        var kernOffset;\n        var locaOffset;\n        var nameOffset;\n\n        // OpenType fonts use big endian byte ordering.\n        // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n        // Instead we use DataViews where we can specify endianness.\n\n        var font$1 = new font.Font();\n        var data = new DataView(buffer, 0);\n\n        var version = parse.getFixed(data, 0);\n        if (version === 1.0) {\n            font$1.outlinesFormat = 'truetype';\n        } else {\n            version = parse.getTag(data, 0);\n            if (version === 'OTTO') {\n                font$1.outlinesFormat = 'cff';\n            } else {\n                throw new Error('Unsupported OpenType version ' + version);\n            }\n        }\n\n        var numTables = parse.getUShort(data, 4);\n\n        // Offset into the table records.\n        var p = 12;\n        for (var i = 0; i < numTables; i += 1) {\n            var tag = parse.getTag(data, p);\n            var offset = parse.getULong(data, p + 8);\n            switch (tag) {\n            case 'cmap':\n                font$1.tables.cmap = cmap.parse(data, offset);\n                font$1.encoding = new encoding.CmapEncoding(font$1.tables.cmap);\n                break;\n            case 'fvar':\n                fvarOffset = offset;\n                break;\n            case 'head':\n                font$1.tables.head = head.parse(data, offset);\n                font$1.unitsPerEm = font$1.tables.head.unitsPerEm;\n                indexToLocFormat = font$1.tables.head.indexToLocFormat;\n                break;\n            case 'hhea':\n                font$1.tables.hhea = hhea.parse(data, offset);\n                font$1.ascender = font$1.tables.hhea.ascender;\n                font$1.descender = font$1.tables.hhea.descender;\n                font$1.numberOfHMetrics = font$1.tables.hhea.numberOfHMetrics;\n                break;\n            case 'hmtx':\n                hmtxOffset = offset;\n                break;\n            case 'ltag':\n                ltagTable = ltag.parse(data, offset);\n                break;\n            case 'maxp':\n                font$1.tables.maxp = maxp.parse(data, offset);\n                font$1.numGlyphs = font$1.tables.maxp.numGlyphs;\n                break;\n            case 'name':\n                nameOffset = offset;\n                break;\n            case 'OS/2':\n                font$1.tables.os2 = os2.parse(data, offset);\n                break;\n            case 'post':\n                font$1.tables.post = post.parse(data, offset);\n                font$1.glyphNames = new encoding.GlyphNames(font$1.tables.post);\n                break;\n            case 'glyf':\n                glyfOffset = offset;\n                break;\n            case 'loca':\n                locaOffset = offset;\n                break;\n            case 'CFF ':\n                cffOffset = offset;\n                break;\n            case 'kern':\n                kernOffset = offset;\n                break;\n            case 'GPOS':\n                gposOffset = offset;\n                break;\n            }\n            p += 16;\n        }\n\n        font$1.tables.name = name.parse(data, nameOffset, ltagTable);\n        font$1.names = font$1.tables.name;\n\n        if (glyfOffset && locaOffset) {\n            var shortVersion = indexToLocFormat === 0;\n            var locaTable = loca.parse(data, locaOffset, font$1.numGlyphs, shortVersion);\n            font$1.glyphs = glyf.parse(data, glyfOffset, locaTable, font$1);\n        } else if (cffOffset) {\n            cff.parse(data, cffOffset, font$1);\n        } else {\n            throw new Error('Font doesn\\'t contain TrueType or CFF outlines.');\n        }\n\n        hmtx.parse(data, hmtxOffset, font$1.numberOfHMetrics, font$1.numGlyphs, font$1.glyphs);\n        encoding.addGlyphNames(font$1);\n\n        if (kernOffset) {\n            font$1.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font$1.kerningPairs = {};\n        }\n\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font$1);\n        }\n\n        if (fvarOffset) {\n            font$1.tables.fvar = fvar.parse(data, fvarOffset, font$1.names);\n        }\n\n        return font$1;\n    }\n\n    // Asynchronously load the font from a URL or a filesystem. When done, call the callback\n    // with two arguments `(err, font)`. The `err` will be null on success,\n    // the `font` is a Font object.\n    //\n    // We use the node.js callback convention so that\n    // opentype.js can integrate with frameworks like async.js.\n    function load(url, callback) {\n        var isNode = typeof window === 'undefined';\n        var loadFn = isNode ? loadFromFile : loadFromUrl;\n        loadFn(url, function(err, arrayBuffer) {\n            if (err) {\n                return callback(err);\n            }\n\n            var font = parseBuffer(arrayBuffer);\n            return callback(null, font);\n        });\n    }\n\n    // Syncronously load the font from a URL or file.\n    // When done, return the font object or throw an error.\n    function loadSync(url) {\n        var fs = require$$0__default['default'];\n        var buffer = fs.readFileSync(url);\n        return parseBuffer(toArrayBuffer(buffer));\n    }\n    var load_1 = load;\n    var loadSync_1 = loadSync;\n\n    /**\n     * @type {object} Map containing all the fonts available for use\n     */\n    const _fonts = {};\n\n    /**\n     * Register Font\n     *\n     * @param {string} binaryPath Path to the font binary file(.eot, .ttf etc.)\n     * @param {string} family     The name to give the font\n     * @param {number} weight     The font weight to use\n     * @param {string} style      Font style\n     * @param {string} variant    Font variant\n     *\n     * @returns {font} Font instance\n     */\n    function registerFont(binaryPath, family, weight, style, variant) {\n        _fonts[family] = {\n            binary: binaryPath,\n            family: family,\n            weight: weight,\n            style: style,\n            variant: variant,\n            loaded: false,\n            font: null,\n            load: function(cb) {\n                if(this.loaded) {\n                    if(cb)cb();\n                    return;\n                }\n                const self = this;\n                load_1(binaryPath, function (err, font) {\n                    if (err) throw new Error('Could not load font: ' + err);\n                    self.loaded = true;\n                    self.font = font;\n                    if(cb)cb();\n                });\n            },\n            loadSync: function() {\n                if(this.loaded) {\n                    return;\n                }\n                try {\n                    this.font = loadSync_1(binaryPath);\n                    this.loaded = true;\n                    return this;\n                } catch (err) {\n                    throw new Error('Could not load font: ' + err);\n                }\n            },\n            loadPromise: function() {\n                return new Promise((res,rej)=>{\n                    this.load(()=>res());\n                })\n            }\n        };\n        return _fonts[family];\n    }\n    /**@ignore */\n    const debug_list_of_fonts = _fonts;\n\n    /**\n     * Find Font\n     *\n     * Search the `fonts` array for a given font family name\n     *\n     * @param {string} family The name of the font family to search for\n     *\n     * @returns {object}\n     */\n    function findFont(family) {\n        if(_fonts[family]) return _fonts[family];\n        family =  Object.keys(_fonts)[0];\n        return _fonts[family];\n    }\n\n    /**\n     * Process Text Path\n     *\n     * @param {Context} ctx  The {@link Context} to paint on\n     * @param {string}  text The text to write to the given Context\n     * @param {number}  x    X position\n     * @param {number}  y    Y position\n     * @param {boolean} fill Indicates wether or not the font should be filled\n     *\n     * @returns {void}\n     */\n    function processTextPath(ctx,text,x,y, fill, hAlign, vAlign) {\n        let font = findFont(ctx._font.family);\n        if(!font) {\n            console.warn(\"Font missing\",ctx._font);\n        }\n        const metrics = measureText(ctx,text);\n        if(hAlign === 'end'   || hAlign === 'right')  x = x - metrics.width;\n        if(hAlign === 'center')  x = x - metrics.width/2;\n        if(vAlign === 'top') y = y + metrics.emHeightAscent;\n        if(vAlign === 'middle') y = y + metrics.emHeightAscent/2+metrics.emHeightDescent/2;\n        if(vAlign === 'bottom') y = y + metrics.emHeightDescent;\n        const size = ctx._font.size;\n        font.load(function(){\n            const path = font.font.getPath(text, x, y, size);\n            ctx.beginPath();\n            path.commands.forEach(function(cmd) {\n                switch(cmd.type) {\n                    case 'M': ctx.moveTo(cmd.x,cmd.y); break;\n                    case 'Q': ctx.quadraticCurveTo(cmd.x1,cmd.y1,cmd.x,cmd.y); break;\n                    case 'L': ctx.lineTo(cmd.x,cmd.y); break;\n                    case 'Z':\n                    {\n                        ctx.closePath();\n                        fill ? ctx.fill() : ctx.stroke();\n                        ctx.beginPath();\n                        break;\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Process Text Path\n     *\n     * @param {Context} ctx The {@link Context} to paint on\n     * @param {string} text The name to give the font\n     *\n     * @returns {object}\n     */\n    function measureText(ctx,text) {\n        let font = findFont(ctx._font.family);\n        if(!font) console.warn(\"WARNING. Can't find font family \", ctx._font);\n        if(!font.font) console.warn(\"WARNING. Can't find font family \", ctx._font);\n        const fsize = ctx._font.size;\n        const glyphs = font.font.stringToGlyphs(text);\n        let advance = 0;\n        glyphs.forEach(function(g) { advance += g.advanceWidth; });\n\n        return {\n            width: advance/font.font.unitsPerEm*fsize,\n            emHeightAscent: font.font.ascender/font.font.unitsPerEm*fsize,\n            emHeightDescent: font.font.descender/font.font.unitsPerEm*fsize,\n        }\n    }\n\n    //transform code from https://github.com/kcmoot/transform-tracker/blob/master/transform-tracker.js\n\n    /**\n     * @ignore\n     */\n    function Transform(context) {\n        this.context = context;\n        this.matrix = [1,0,0,1,0,0]; //initialize with the identity matrix\n        this.stack = [];\n\n        //==========================================\n        // Constructor, getter/setter\n        //==========================================\n\n        this.setContext = function(context) {\n            this.context = context;\n        };\n\n        this.getMatrix = function() {\n            return this.matrix;\n        };\n\n        this.setMatrix = function(m) {\n            this.matrix = [m[0],m[1],m[2],m[3],m[4],m[5]];\n            this.setTransform();\n        };\n\n        this.cloneMatrix = function(m) {\n            return [m[0],m[1],m[2],m[3],m[4],m[5]];\n        };\n\n        this.cloneTransform = function() {\n            let trans = new Transform();\n            trans.setMatrix(this.getMatrix());\n            return trans\n        };\n\n        this.asDomMatrix = function() {\n            return {\n                is2D:true,\n                isIdentity:false,\n                a:this.matrix[0],\n                b:this.matrix[1],\n                c:this.matrix[2],\n                d:this.matrix[3],\n                e:this.matrix[4],\n            }\n        };\n        this.fromDomMatrix = function(dom) {\n            return [dom.a,dom.b,dom.c,dom.d,dom.e,dom.f]\n        };\n\n\n        //==========================================\n        // Stack\n        //==========================================\n\n        this.save = function() {\n            let matrix = this.cloneMatrix(this.getMatrix());\n            this.stack.push(matrix);\n\n            if (this.context) this.context.save();\n        };\n\n        this.restore = function() {\n            if (this.stack.length > 0) {\n                let matrix = this.stack.pop();\n                this.setMatrix(matrix);\n            }\n\n            if (this.context) this.context.restore();\n        };\n\n        //==========================================\n        // Matrix\n        //==========================================\n\n        this.setTransform = function() {\n            if (this.context) {\n                this.context.setTransform(\n                    this.matrix[0],\n                    this.matrix[1],\n                    this.matrix[2],\n                    this.matrix[3],\n                    this.matrix[4],\n                    this.matrix[5]\n                );\n            }\n        };\n\n        this.translate = function(x, y) {\n            this.matrix[4] += this.matrix[0] * x + this.matrix[2] * y;\n            this.matrix[5] += this.matrix[1] * x + this.matrix[3] * y;\n\n            this.setTransform();\n        };\n\n        this.rotate = function(rad) {\n            const c = Math.cos(rad);\n            const s = Math.sin(rad);\n            const m11 = this.matrix[0] * c + this.matrix[2] * s;\n            const m12 = this.matrix[1] * c + this.matrix[3] * s;\n            const m21 = this.matrix[0] * -s + this.matrix[2] * c;\n            const m22 = this.matrix[1] * -s + this.matrix[3] * c;\n            this.matrix[0] = m11;\n            this.matrix[1] = m12;\n            this.matrix[2] = m21;\n            this.matrix[3] = m22;\n\n            this.setTransform();\n        };\n\n        this.scale = function(sx, sy) {\n            this.matrix[0] *= sx;\n            this.matrix[1] *= sx;\n            this.matrix[2] *= sy;\n            this.matrix[3] *= sy;\n\n            this.setTransform();\n        };\n\n        //==========================================\n        // Matrix extensions\n        //==========================================\n\n        this.rotateDegrees = function(deg) {\n            const rad = deg * Math.PI / 180;\n            this.rotate(rad);\n        };\n\n        this.rotateAbout = function(rad, x, y) {\n            this.translate(x, y);\n            this.rotate(rad);\n            this.translate(-x, -y);\n            this.setTransform();\n        };\n\n        this.rotateDegreesAbout = function(deg, x, y) {\n            this.translate(x, y);\n            this.rotateDegrees(deg);\n            this.translate(-x, -y);\n            this.setTransform();\n        };\n\n        this.identity = function() {\n            this.m = [1,0,0,1,0,0];\n            this.setTransform();\n        };\n\n        this.multiply = function(matrix) {\n            const m11 = this.matrix[0] * matrix[0] + this.matrix[2] * matrix[1];\n            const m12 = this.matrix[1] * matrix[0] + this.matrix[3] * matrix[1];\n\n            const m21 = this.matrix[0] * matrix[2] + this.matrix[2] * matrix[3];\n            const m22 = this.matrix[1] * matrix[2] + this.matrix[3] * matrix[3];\n\n            const dx = this.matrix[0] * matrix[4] + this.matrix[2] * matrix[5] + this.matrix[4];\n            const dy = this.matrix[1] * matrix[4] + this.matrix[3] * matrix[5] + this.matrix[5];\n\n            this.matrix[0] = m11;\n            this.matrix[1] = m12;\n            this.matrix[2] = m21;\n            this.matrix[3] = m22;\n            this.matrix[4] = dx;\n            this.matrix[5] = dy;\n            this.setTransform();\n        };\n\n        this.invert = function() {\n            const d = 1 / (this.matrix[0] * this.matrix[3] - this.matrix[1] * this.matrix[2]);\n            const m0 = this.matrix[3] * d;\n            const m1 = -this.matrix[1] * d;\n            const m2 = -this.matrix[2] * d;\n            const m3 = this.matrix[0] * d;\n            const m4 = d * (this.matrix[2] * this.matrix[5] - this.matrix[3] * this.matrix[4]);\n            const m5 = d * (this.matrix[1] * this.matrix[4] - this.matrix[0] * this.matrix[5]);\n            this.matrix[0] = m0;\n            this.matrix[1] = m1;\n            this.matrix[2] = m2;\n            this.matrix[3] = m3;\n            this.matrix[4] = m4;\n            this.matrix[5] = m5;\n            this.setTransform();\n        };\n\n         //==========================================\n        // Helpers\n        //==========================================\n\n        this.transformPoint = function(pt) {\n            const x = pt.x;\n            const y = pt.y;\n            return new Point(\n                x * this.matrix[0] + y * this.matrix[2] + this.matrix[4],\n                x * this.matrix[1] + y * this.matrix[3] + this.matrix[5],\n            )\n        };\n    }\n\n    //from https://github.com/fxa/uint32.js\n\n    //  Creating and Extracting\n    //\n\n    /**\n     *  Creates an uint32 from the given bytes in big endian order.\n     *  @param {Number} highByte the high byte\n     *  @param {Number} secondHighByte the 2nd high byte\n     *  @param {Number} thirdHighByte the 3rd high byte\n     *  @param {Number} lowByte the low byte\n     *  @returns highByte concat secondHighByte concat thirdHighByte concat lowByte\n     */\n    const fromBytesBigEndian = function (highByte, secondHighByte, thirdHighByte, lowByte) {\n        return ((highByte << 24) | (secondHighByte << 16) | (thirdHighByte << 8) | lowByte) >>> 0;\n    };\n\n        /**\n         *  Returns the byte.\n         *  e.g. when byteNo is 0, the high byte is returned, when byteNo = 3 the low byte is returned.\n         *  @param {Number} uint32value the source to be extracted\n         *  @param {Number} byteNo 0-3 the byte number, 0 is the high byte, 3 the low byte\n         *  @returns {Number} the 0-255 byte according byteNo\n         */\n        const getByteBigEndian = function (uint32value, byteNo) {\n            return (uint32value >>> (8 * (3 - byteNo))) & 0xff;\n        };\n\n        /**\n         *  Returns the bytes as array.\n         *  @param {Number} uint32value the source to be extracted\n         *  @returns {Array} the array [highByte, 2ndHighByte, 3rdHighByte, lowByte]\n         */\n        const getBytesBigEndian = function (uint32value) {\n            return [\n                getByteBigEndian(uint32value, 0),\n                getByteBigEndian(uint32value, 1),\n                getByteBigEndian(uint32value, 2),\n                getByteBigEndian(uint32value, 3)\n            ];\n        };\n\n        /**\n         *  Converts a number to an uint32.\n         *  @param {Number} number the number to be converted.\n         *  @return {Number} an uint32 value\n         */\n        const toUint32 = function (number) {\n            // the shift operator forces js to perform the internal ToUint32 (see ecmascript spec 9.6)\n            return number >>> 0;\n        };\n\n        //\n        //  Bitwise Logical Operators\n        //\n\n        /**\n         *  Returns a bitwise OR operation on two or more values.\n         *  @param {Number} uint32val0 first uint32 value\n         *  @param {Number} argv one or more uint32 values\n         *  @return {Number} the bitwise OR uint32 value\n         */\n        const or = function (uint32val0, argv) {\n            let result = uint32val0;\n            for (let index = 1; index < arguments.length; index += 1) {\n                result = (result | arguments[index]);\n            }\n            return result >>> 0;\n        };\n\n        /**\n         *  Returns a bitwise AND operation on two or more values.\n         *  @param {Number} uint32val0 first uint32 value\n         *  @param {Number} argv one or more uint32 values\n         *  @return {Number} the bitwise AND uint32 value\n         */\n        const and = function (uint32val0, argv) {\n            let result = uint32val0;\n            for (let index = 1; index < arguments.length; index += 1) {\n                result = (result & arguments[index]);\n            }\n            return result >>> 0;\n        };\n\n        //\n        // Shifting and Rotating\n        //\n\n        /**\n         *  Returns the uint32 representation of a << operation.\n         *  @param {Number} uint32val the word to be shifted\n         *  @param {Number} numBits the number of bits to be shifted (0-31)\n         *  @returns {Number} the uint32 value of the shifted word\n         */\n        const shiftLeft = function (uint32val, numBits) {\n            return (uint32val << numBits) >>> 0;\n        };\n\n    /**\n     * Clamping is the process of limiting a position to an area\n     *\n     * @see https://en.wikipedia.org/wiki/Clamping_(graphics)\n     *\n     * @param {number} value The value to apply the clamp restriction to\n     * @param {number} min   Lower limit\n     * @param {number} max   Upper limit\n     *\n     * @returns {number}\n     */\n    function clamp(value,min,max) {\n        if(value < min) return min;\n        if(value > max) return max;\n        return value;\n    }\n\n\n    /**\n     * Linear Interpolation\n     *\n     * In mathematics, linear interpolation is a method of curve fitting using linear polynomials to construct new data\n     * points within the range of a discrete set of known data points.\n     *\n     * @param {number} a\n     * @param {number} b\n     * @param {number} t\n     *\n     * @ignore\n     *\n     * @see https://en.wikipedia.org/wiki/Linear_interpolation\n     *\n     * @returns {number}\n     */\n    const lerp = function(a,b,t) {  return a + (b-a)*t; };\n\n    /**\n     * Color String To Unint32\n     *\n     * Convert a color string to Uint32 notation\n     *\n     * @static\n     * @param {string} str The color string to convert\n     *\n     * @returns {number}\n     *\n     * @example\n     * var uInt32 = colorStringToUint32('#FF00FF');\n     * console.log(uInt32); // Prints 4278255615\n     *\n     * @memberof Context\n     */\n    function colorStringToUint32(str) {\n        if(!str) return 0x000000;\n        //hex values always get 255 for the alpha channel\n        if(str.indexOf('#')===0) {\n            if(str.length===4) {\n                //Color format is #RGB\n                //Will get 255 for the alpha channel\n                let redNibble = parseInt(str[1], 16);\n                let red = (redNibble << 4) | redNibble;\n                let greenNibble = parseInt(str[2], 16);\n                let green = (greenNibble << 4) | greenNibble;\n                let blueNibble = parseInt(str[3], 16);\n                let blue = (blueNibble << 4) | blueNibble;\n\n                let int = toUint32(red << 16 | green << 8 | blue);\n                int = shiftLeft(int,8);\n                return or(int,0xff);\n            } else if(str.length===5) {\n                //Color format is #RGBA\n                let redNibble = parseInt(str[1], 16);\n                let red = (redNibble << 4) | redNibble;\n                let greenNibble = parseInt(str[2], 16);\n                let green = (greenNibble << 4) | greenNibble;\n                let blueNibble = parseInt(str[3], 16);\n                let blue = (blueNibble << 4) | blueNibble;\n                let alphaNibble = parseInt(str[4], 16);\n                let alpha = (alphaNibble << 4) | alphaNibble;\n\n                let int = toUint32(red << 16 | green << 8 | blue);\n                int = shiftLeft(int,8);\n                return or(int,alpha);\n            } else if(str.length===7) {\n                //Color format is #RRGGBB\n                //Will get 255 for the alpha channel\n                let int = toUint32(parseInt(str.substring(1),16));\n                int = shiftLeft(int,8);\n                return or(int,0xff);\n            } else if(str.length===9) {\n                //Color format is #RRGGBBAA\n                return toUint32(parseInt(str.substring(1),16));\n            }\n        }\n        if(str.indexOf('rgba')===0) {\n            const parts = str.trim().substring(4).replace('(','').replace(')','').split(',');\n            return fromBytesBigEndian(\n                parseInt(parts[0]),\n                parseInt(parts[1]),\n                parseInt(parts[2]),\n                Math.floor(parseFloat(parts[3])*255));\n        }\n        if(str.indexOf('rgb')===0) {\n            const parts = str.trim().substring(3).replace('(','').replace(')','').split(',');\n            return fromBytesBigEndian(parseInt(parts[0]), parseInt(parts[1]), parseInt(parts[2]), 255);\n        }\n        if(NAMED_COLORS.hasOwnProperty(str)) {\n            return NAMED_COLORS[str];\n        }\n        throw new Error(\"unknown style format: \" + str );\n    }\n\n    class CanvasGradient {\n        constructor() {\n            this.stops = [];\n        }\n        addColorStop(t,colorstring) {\n            const color = colorStringToUint32(colorstring);\n            this.stops.push({t:t,color:color});\n        }\n        _lerpStops(t) {\n            const first = getBytesBigEndian(this.stops[0].color).map(b=>b/255);\n            const second = getBytesBigEndian(this.stops[1].color).map(b=>b/255);\n            const fc = first.map((f,i) => lerp(f,second[i],t)).map(c=>c*255);\n            return fromBytesBigEndian(fc[0],fc[1],fc[2],0xFF)\n        }\n    }\n\n    class LinearGradient extends CanvasGradient {\n        constructor(x0,y0,x1,y1) {\n            super();\n            this.start = new Point(x0,y0);\n            this.end = new Point(x1,y1);\n        }\n\n        colorAt(x,y) {\n            const pc = new Point(x,y); //convert to a point\n            //calculate V\n            let V = this.end.subtract(this.start); // subtract\n            const d = V.magnitude(); // get magnitude\n            V = V.divide(d); // normalize\n\n            //calculate V0\n            const V0 = pc.subtract(this.start);\n            //project V0 onto V\n            let t = V0.dotProduct(V);\n            //convert to t value and clamp\n            t = clamp(t/d,0,1);\n            return this._lerpStops(t)\n        }\n    }\n\n\n    class RadialGradient extends CanvasGradient {\n        constructor(x0, y0, x1, y1) {\n            super();\n            this.start = new Point(x0,y0);\n        }\n\n        colorAt(x,y) {\n            const pc = new Point(x, y); //convert to a point\n            const dist =  pc.distance(this.start);\n            let t = clamp(dist/10,0,1);\n            return this._lerpStops(t)\n        }\n    }\n\n    /**\n     * Enum for path commands (used for encoding and decoding lines, curves etc. to and from a path)\n     * @enum {string}\n     */\n    const PATH_COMMAND = {\n        MOVE: 'm',\n        LINE: 'l',\n        QUADRATIC_CURVE: 'q',\n        BEZIER_CURVE: 'b'\n    };\n\n    /**\n     * Used for drawing rectangles, text, images and other objects onto the canvas element. It provides the 2D rendering context for a drawing surface.\n     *\n     * It has the same API as [CanvasRenderingContext2D](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D) from the HTML5 canvas spec\n     *\n     * @class Context\n     */\n    class Context {\n        /**\n         * Creates a new pure image Context\n         *\n         * @param {Bitmap} bitmap An instance of the {@link Bitmap} class\n         * @memberof Context\n         */\n        constructor(bitmap) {\n            /**\n             * An instance of the {@link Bitmap} class. Used for direct pixel manipulation(for example setting pixel colours)\n             * @type {Bitmap}\n             */\n            this.bitmap = bitmap;\n\n            /**\n             *  A 32-bit unsigned integer (uint32) number representing the fill color of the 2D drawing context\n             *\n             * @type {number}\n             */\n            this._fillColor = NAMED_COLORS.black;\n\n            /**\n             * @type {number}\n             */\n            this._strokeColor = NAMED_COLORS.black;\n\n            /**\n             * @type {number}\n             */\n            this._lineWidth = 1;\n\n            /**\n             * @type {number}\n             */\n            this._globalAlpha = 1;\n\n            /**\n             * @type {Transform}\n             */\n            this._transform = new Transform();\n\n            /**\n             * @type {object} Plain js object wrapping the font name and size\n             */\n            this._font = {\n                family:'invalid',\n                size:12\n            };\n\n            /** @type {string} horizontal text alignment, one of start, end, left, center, right. start is the default */\n            this.textAlign = 'start';\n\n            /** @type {string} vertical text alignment, relative to the baseline. one of top, middle, alphabetic(default) and bottom. */\n            this.textBaseline = 'alphabetic';\n\n\n            /**\n             * @type {boolean} Enable or disable image smoothing(anti-aliasing)\n             */\n            this.imageSmoothingEnabled = true;\n\n            /**\n             * @type {?any}\n             */\n            this._clip = null;\n\n            /**\n             * @type {string}\n             */\n            this._fillStyle_text = '';\n\n            /**\n             * @type {string}\n             */\n            this._strokeStyle_text = '';\n        }\n\n        /**\n         * The color or style to use inside shapes. The default is #000 (black).\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle\n         * @type {string}\n         */\n        get fillStyle () {\n            return this._fillStyle_text;\n        };\n\n        /**\n         * @param {string} val\n         * @example ctx.fillStyle = 'rgba(0, 25, 234, 0.6)';\n         */\n        set fillStyle (val) {\n            if(val instanceof CanvasGradient) {\n                this._fillColor = val;\n            } else {\n                this._fillColor = colorStringToUint32(val);\n                this._fillStyle_text = val;\n            }\n        };\n\n        /**\n         * The color or style to use for the lines around shapes. The default is #000 (black).\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeStyle\n         * @type {string}\n         */\n        get strokeStyle () {\n            return this._strokeStyle_text\n        };\n\n        /**\n         * @param {string} val\n         * @example ctx.strokeStyle = 'rgba(0, 25, 234, 0.6)';\n         */\n        set strokeStyle (val) {\n            if(val instanceof CanvasGradient) {\n                this._strokeStyle_text = val;\n            } else {\n                this._strokeColor = colorStringToUint32(val);\n                this._strokeStyle_text = val;\n            }\n        };\n\n        /**\n         * The thickness of lines in space units. When getting, it returns the current value (1.0 by default). When setting, zero, negative, `Infinity` and `NaN` values are ignored; otherwise the current value is set to the new value.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineWidth\n         * @type {number}\n         */\n        get lineWidth() {\n            return this._lineWidth;\n        };\n\n        /**\n         * @param {string} val\n         * @example ctx.lineWidth = 15;\n         */\n        set lineWidth(val) {\n            this._lineWidth = val;\n        };\n\n        /**\n         * The alpha value that is applied to shapes and images before they are drawn onto the canvas. The value is in the range from 0.0 (fully transparent) to 1.0 (fully opaque).\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalAlpha\n         * @type {Boolean}\n         */\n        get globalAlpha() {\n            return this._globalAlpha;\n        };\n\n        /**\n         * @param {boolean} val\n         * @example ctx.globalAlpha = 1;\n         */\n        set globalAlpha(val) {\n            this._globalAlpha = clamp(val,0,1);\n        }\n\n        /**\n         * The current text style being used when drawing text. This string uses the same syntax as the CSS font specifier\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font\n         * @type {string} a string representing the font size and family to use\n         */\n        get font() {};\n\n        /**\n         * @param {string} font to use. Note that the font weight is not supported.\n         * @example ctx.font = '16px serif'\n         */\n        set font(val) {\n            const n = val.trim().indexOf(' ');\n            this._font.size   = parseInt(val.slice(0, n));\n            this._font.family = val.slice(n).trim();\n        }\n\n\n        createLinearGradient(x0,y0, x1,y1) {\n            return new LinearGradient(x0,y0,x1,y1)\n        }\n        createRadialGradient(x0,y0) {\n            return new RadialGradient(x0,y0)\n        }\n\n\n        /**\n         * Saves the entire state of the canvas by pushing the current state onto a stack\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/save\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        save() {\n            this._transform.save();\n        }\n\n        /**\n         * Adds a translation transformation by moving the canvas and its origin `x` horizontally and `y` vertically on the grid\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/translate\n         *\n         * @param {number} x X position\n         * @param {number} y Y position\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        translate(x,y) {\n            this._transform.translate(x,y);\n        }\n\n        /**\n         * Add a rotation to the transformation matrix. The angle argument represents a clockwise rotation angle and is expressed in adians\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/rotate\n         *\n         * @param {number} angle Degrees of rotation (in radians)\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        rotate(angle) {\n            this._transform.rotate(angle);\n        }\n\n        /**\n         * Adds a scaling transformation to the canvas units by `x` horizontally and by `y` vertically\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/rotate\n         *\n         * @param {number} sx Scale X amount\n         * @param {number} sy Scale Y amount\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        scale(sx,sy) {\n            this._transform.scale(sx,sy);\n        }\n\n        transform(...args) {\n            let new_mat = [...args];\n            this._transform.multiply(new_mat);\n        }\n\n        setTransform(...args) {\n            this._transform.identity();\n            if(args[0].is2D) {\n                let new_mat = this._transform.fromDomMatrix(args[0]);\n                this._transform.multiply(new_mat);\n            } else {\n                this._transform.multiply([...args]);\n            }\n        }\n        getTransform() {\n            return this._transform.asDomMatrix()\n        }\n\n\n        /**\n         * Restores the most recently saved canvas state by popping the top entry in the drawing state stack. If there is no saved state, this method does nothing.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/restore\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        restore() {\n            this._transform.restore();\n        }\n\n\n        /**\n         * Draws a filled rectangle whose starting point is at the coordinates `(x, y)` with the specified width and height and whose style is determined by the fillStyle attribute.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillRect\n         *\n         * @param {number} x X position\n         * @param {number} y Y position\n         * @param {number} w Width\n         * @param {number} h Height\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        fillRect(x,y,w,h) {\n            for(let i=x; i<x+w; i++) {\n                for(let j=y; j<y+h; j++) {\n                    this.fillPixel(i,j);\n                }\n            }\n        }\n\n        /**\n         * Sets all pixels in the rectangle defined by starting point `(x, y)` and size `(width, height)` to transparent black, erasing any previously drawn content.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/clearRect\n         *\n         * @param {number} x X position\n         * @param {number} y Y position\n         * @param {number} w Width\n         * @param {number} h Height\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        clearRect(x,y,w,h) {\n            for(let i=x; i<x+w; i++) {\n                for(let j=y; j<y+h; j++) {\n                    this.bitmap.setPixelRGBA(i,j,0x00000000);\n                }\n            }\n        }\n\n        /**\n         * Paints a rectangle which has a starting point at `(x, y)` and has a `w` width and an `h` height onto the canvas, using the current stroke style.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeRect\n         *\n         * @param {number} x X position\n         * @param {number} y Y position\n         * @param {number} w Width\n         * @param {number} h Height\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        strokeRect(x,y,w,h) {\n            for(let i=x; i<x+w; i++) {\n                this.bitmap.setPixelRGBA(i, y, this._strokeColor);\n                this.bitmap.setPixelRGBA(i, y+h, this._strokeColor);\n            }\n            for(let j=y; j<y+h; j++) {\n                this.bitmap.setPixelRGBA(x, j, this._strokeColor);\n                this.bitmap.setPixelRGBA(x+w, j, this._strokeColor);\n            }\n        }\n\n        /**\n         * Set the background colour of a single pixel denoted by the `x` and `y` co-ordinates\n         *\n         * @param {number} x The x axis of the pixel\n         * @param {number} y The y axis of the pixel\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        fillPixel(x,y) {\n            if(!this.pixelInsideClip(x,y)) {\n                return\n            }\n\n            const new_pixel = this.calculateRGBA(x, y);\n            const old_pixel = this.bitmap.getPixelRGBA(x, y);\n            const final_pixel = this.composite(x, y, old_pixel, new_pixel);\n\n            this.bitmap.setPixelRGBA(x,y,final_pixel);\n        }\n\n        /**\n         * Paints a pixel which has an x axis position of `x` and a y axis position of `y`\n         *\n         * @param {number} x The x axis of the pixel to stroke\n         * @param {number} y The y axis of the pixel to stroke\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        strokePixel(x,y) {\n            if(!this.pixelInsideClip(x,y)) {\n                return\n            }\n\n            const new_pixel = this.calculateRGBA_stroke(x, y);\n            const old_pixel = this.bitmap.getPixelRGBA(x, y);\n            const final_pixel = this.composite(x, y, old_pixel, new_pixel);\n\n            this.bitmap.setPixelRGBA(x,y,final_pixel);\n        }\n\n        /**\n         * Fill Pixel With Color\n         *\n         * @param {number} x   The x axis of the pixel to fill\n         * @param {number} y   The y axis of the pixel to fill\n         * @param {number} col\n         *\n         * @ignore\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        fillPixelWithColor(x,y,col) {\n            if(!this.pixelInsideClip(x,y)) {\n                return\n            }\n\n            const new_pixel = col;\n            const old_pixel = this.bitmap.getPixelRGBA(x, y);\n            const final_pixel = this.composite(x, y, old_pixel, new_pixel);\n\n            this.bitmap.setPixelRGBA(x,y,final_pixel);\n        }\n\n        /**\n         * Composite\n         *\n         * @param {number} i Unused\n         * @param {number} j Unused\n         * @param {number} old_pixel\n         * @param {number} new_pixel\n         *\n         * @ignore\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        composite(i,j,old_pixel, new_pixel) {\n            const old_rgba = getBytesBigEndian(old_pixel);\n            const new_rgba = getBytesBigEndian(new_pixel);\n\n            // convert to range of 0->1\n            const A = new_rgba.map((b) => b / 255);\n            const B = old_rgba.map((b) => b / 255);\n\n            // multiply by global alpha\n            A[3] = A[3] * this._globalAlpha;\n\n            // do a standard composite (SRC_OVER) on RGB values\n            function compit(ca, cb, aa, ab) {\n                return (ca*aa + cb*ab * (1-aa)) / (aa+ab*(1-aa));\n            }\n            const C = A.slice(0, 3).map((comp, i) => compit(A[i], B[i], A[3], B[3]));\n\n            // convert back to 0->255 range\n            const Cf = C.map((c) => c * 255);\n\n            // convert back to int\n            return fromBytesBigEndian(\n                Cf[0], Cf[1], Cf[2], // R, G, B,\n                Math.max(old_rgba[3], new_rgba[3]) // alpha\n            );\n        }\n\n        /**\n         * Calculate RGBA\n         *\n         * @param {number} x X position\n         * @param {number} y Y position\n         *\n         * @ignore\n         *\n         * @returns {number}\n         *\n         * @memberof Context\n         */\n        calculateRGBA(x,y) {\n            if(this._fillColor instanceof CanvasGradient) {\n                return this._fillColor.colorAt(x,y)\n            }\n            return this._fillColor;\n        }\n\n        /**\n         * Calculate RGBA Stroke\n         *\n         * @param {number} x X position\n         * @param {number} y Y position\n         *\n         * @ignore\n         *\n         * @returns {number}\n         *\n         * @memberof Context\n         */\n        calculateRGBA_stroke(x,y) {\n            return this._strokeColor;\n        }\n\n\n        /**\n         * Get Image Data\n         *\n         * @param {number} x X position\n         * @param {number} y Y position\n         * @param {number} w Width\n         * @param {number} h Height\n         *\n         * @ignore\n         *\n         * @returns {Bitmap}\n         *\n         * @memberof Context\n         */\n        getImageData(x,y,w,h) {\n            return this.bitmap._copySubBitmap(x,y,w,h)\n        }\n\n        /**\n         * *Put Image Data\n         *\n         * @param {Bitmap} imageData Image ID\n         * @param {number} x  X position\n         * @param {number} y  Y position\n         *\n         * @ignore\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        putImageData(imageData, x, y) {\n            this.bitmap._pasteSubBitmap(imageData,x,y);\n        }\n\n        /**\n         * Provides different ways to draw an image onto the canvas.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage\n         *\n         * @param {Bitmap} bitmap An instance of the {@link Bitmap} class to use for drawing\n         * @param {number} sx     The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.\n         * @param {number} sy     The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.\n         * @param {number} sw     The width of the sub-rectangle of the source {@link Bitmap} to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by `sx` and `sy` to the bottom-right corner of the image is used.\n         * @param {number} sh     The height of the sub-rectangle of the source {@link Bitmap} to draw into the destination context.\n         * @param {number} dx     The X coordinate in the destination canvas at which to place the top-left corner of the source {@link Bitmap}\n         * @param {number} dy     The Y coordinate in the destination canvas at which to place the top-left corner of the source {@link Bitmap}\n         * @param {number} dw     The width to draw the {@link Bitmap} in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn\n         * @param {number} dh     The height to draw the {@link Bitmap} in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        drawImage(bitmap, sx,sy,sw,sh, dx, dy, dw, dh) {\n            // two argument form\n            if(typeof sw === 'undefined') return this.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, sx, sy, bitmap.width, bitmap.height)\n            // four argument form\n            if(typeof dx === 'undefined') return this.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, sx, sy, sw, sh)\n\n            let src_bounds = new Bounds(sx,sy,sx+sw,sy+sh);\n            let pts = [\n                new Point(dx,dy),\n                new Point(dx+dw,dy),\n                new Point(dx+dw,dy+dh),\n                new Point(dx,dy+dh),\n                ];\n            pts = pts.map(pt => this._transform.transformPoint(pt));\n            let dst_bounds = calc_min_bounds(pts);\n\n            let bitmap_bounds = new Bounds(0,0, this.bitmap.width, this.bitmap.height);\n            dst_bounds = dst_bounds.intersect(bitmap_bounds);\n\n            let inv = this._transform.cloneTransform();\n            inv.invert();\n\n            //map dx to dx+dw  from sx to sx+sw\n            function remap(n, a1, a2, b1, b2) {\n                let t = (n-a1)/(a2-a1);\n                return t*(b2-b1) + b1\n            }\n\n            for(let i=dst_bounds.x1; i<dst_bounds.x2; i++) {\n                for(let j=dst_bounds.y1; j<dst_bounds.y2; j++) {\n                    let dst_pt = new Point(i,j);\n                    let src_pt = inv.transformPoint(dst_pt).round();\n                    src_pt = new Point(\n                        remap(src_pt.x, dx,dx+dw, sx,sx+sw),\n                        remap(src_pt.y, dy,dy+dh, sy,sy+sh)\n                    );\n                    if(src_bounds.contains(src_pt)) {\n                        const rgba = bitmap.getPixelRGBA(src_pt.x, src_pt.y);\n                        if(this.pixelInsideClip(dst_pt.x,dst_pt.y)) {\n                            this.bitmap.setPixelRGBA(dst_pt.x, dst_pt.y, rgba);\n                        }\n                    }\n                }\n            }\n        }\n\n\n        /**\n         * Starts a new path by emptying the list of sub-paths. Call this method when you want to create a new path.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/beginPath\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        beginPath() {\n            /**\n             * @type {Array}\n             */\n            this.path = [];\n            this._closed = false;\n        }\n\n        /**\n         * Moves the starting point of a new sub-path to the (x, y) coordinates.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/moveTo\n         *\n         * @param {number} x The x axis of the point.\n         * @param {number} y The y axis of the point.\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n        * */\n        moveTo(x,y) {\n            return this._moveTo(new Point(x, y));\n        }\n\n        /**\n         * Moves the starting point of a new sub-path to the (x, y) coordinates.\n         *\n         * @param {Point} pt A `point` object representing a set of co-ordinates to move the \"pen\" to.\n         *\n         * @example\n         * //All of the following are valid:\n         * this._moveTo({x: 20, y: 40})\n         * this._moveTo(new Point(20, 40))\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n        * */\n        _moveTo(pt) {\n            pt = this._transform.transformPoint(pt);\n            /**\n             * Set the starting co-ordinates for the path starting point\n             * @type {Point}\n             */\n            this.pathstart = pt;\n            this.path.push([PATH_COMMAND.MOVE, pt]);\n        }\n\n        /**\n         * Connects the last point in the sub-path to the x, y coordinates with a straight line (but does not actually draw it).\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineTo\n         *\n         * @param {number} x The x axis of the coordinate for the end of the line.\n         * @param {number} y The y axis of the coordinate for the end of the line.\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        lineTo(x,y) {\n            return this._lineTo(new Point(x, y));\n        }\n\n        /**\n         * Connects the last point in the sub-path to the x, y coordinates with a straight line (but does not actually draw it).\n         *\n         * @param {Point} pt A point object to draw a line to from the current set of co-ordinates\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        _lineTo(pt) {\n            this.path.push([PATH_COMMAND.LINE, this._transform.transformPoint(pt)]);\n        }\n\n        /**\n         * Adds a quadratic B\u00E9zier curve to the path. It requires two points. The first point is a control point and the second one is the end point. The starting point is the last point in the current path, which can be changed using moveTo() before creating the quadratic B\u00E9zier curve.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo\n         *\n         * @param {number} cp1x The x axis of the coordinate for the control point.\n         * @param {number} cp1y The y axis of the coordinate for the control point.\n         * @param {number} x    The x axis of the coordinate for the end point.\n         * @param {number} y    The y axis of the coordinate for the end point.\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        quadraticCurveTo(cp1x, cp1y, x,y) {\n            let cp1 = this._transform.transformPoint(new Point(cp1x, cp1y));\n            let pt  = this._transform.transformPoint(new Point(x, y));\n            this.path.push([PATH_COMMAND.QUADRATIC_CURVE, cp1, pt]);\n        }\n\n        /**\n         * Adds a cubic B\u00E9zier curve to the path. It requires three points. The first two points are control points and the third one is the end point. The starting point is the last point in the current path, which can be changed using moveTo() before creating the B\u00E9zier curve.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo\n         *\n         * @param {number} cp1x The x axis of the coordinate for the first control point.\n         * @param {number} cp1y The y axis of the coordinate for first control point.\n         * @param {number} cp2x The x axis of the coordinate for the second control point.\n         * @param {number} cp2y The y axis of the coordinate for the second control point.\n         * @param {number} x    The x axis of the coordinate for the end point.\n         * @param {number} y    The y axis of the coordinate for the end point.\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n            this._bezierCurveTo(new Point(cp1x, cp1y), new Point(cp2x, cp2y), new Point(x, y));\n        }\n\n        /**\n         * Bezier Curve To\n         *\n         * @param {number} cp1 Curve point 1\n         * @param {number} cp2 Curve point 2\n         * @param {Point}  pt\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n        * */\n        _bezierCurveTo(cp1, cp2, pt) {\n            cp1 = this._transform.transformPoint(cp1);\n            cp2 = this._transform.transformPoint(cp2);\n            pt  = this._transform.transformPoint(pt);\n            this.path.push([PATH_COMMAND.BEZIER_CURVE, cp1, cp2, pt]);\n        }\n\n        /**\n         * Adds an arc to the path which is centered at (x, y) position with radius r starting at startAngle and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/arc\n         *\n         * @param {number}  x         The x coordinate of the arc's center\n         * @param {number}  y         The y coordinate of the arc's center\n         * @param {number}  rad       The arc's radius\n         * @param {number}  start     The angle at which the arc starts, measured clockwise from the positive x axis and expressed in radians\n         * @param {number}  end       The angle at which the arc ends, measured clockwise from the positive x axis and expressed in radians\n         * @param {boolean} anticlockwise A boolean which, if true, causes the arc to be drawn anticlockwise between the two angles.\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        arc(x,y, rad, start, end, anticlockwise) {\n            function calcPoint(angle) {\n                let px = x + Math.cos(angle)*rad;\n                let py = y + Math.sin(angle)*rad;\n                return new Point(px, py);\n            }\n\n            if(start > end) end += Math.PI*2;\n\n            let step = Math.PI / 16;\n            if (anticlockwise) {\n                let temp = end;\n                end = start + Math.PI * 2;\n                start = temp;\n            }\n            this._moveTo(calcPoint(start));\n            for (let a = start; a <= end; a += step) {\n                this._lineTo(calcPoint(a));\n            }\n            this._lineTo(calcPoint(end));\n        }\n\n        /**\n         * Arc To\n         *\n         * @ignore\n         *\n         * @throws {Error} Method is not yet implemented\n         *\n         * @memberof Context\n         */\n        arcTo() {\n            throw new Error(\"arcTo not yet supported\");\n        }\n\n        /**\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/rect\n         * Draws a rectangle with the upper left corner at the specified (x, y)\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         *\n         *\n         * @param {number}  x         The x coordinate of the rectangle\n         * @param {number}  y         The y coordinate of the rectangle\n         * @param {number}  width     The width of the rectangle\n         * @param {number}  height    The height of the rectangle\n         *\n         *\n         * @memberof Context\n         */\n        rect(x,y,width,height) {\n            this.moveTo(x,y);\n            this.lineTo(x+width,y);\n            this.lineTo(x+width,y+height);\n            this.lineTo(x,y+height);\n            this.lineTo(x,y);\n        }\n\n        /**\n         * Ellipse\n         *\n         * @ignore\n         *\n         * @throws {Error} Method is not yet implemented\n         *\n         * @memberof Context\n         */\n        ellipse() {\n            throw new Error(\"ellipse not yet supported\");\n        }\n\n        /**\n         * Turns the path currently being built into the current clipping path.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/clip\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        clip() {\n            this._clip = pathToLines(this.path);\n        }\n\n        /**\n         * Measure Text\n         *\n         * @ignore\n         *\n         * @throws {Error} Method is not yet implemented\n         *\n         * @memberof Context\n         */\n        measureText(string) {\n            return measureText(this,string)\n        }\n\n        /**\n         * Causes the point of the pen to move back to the start of the current sub-path. It tries to add a straight line (but does not actually draw it) from the current point to the start. If the shape has already been closed or has only one point, this function does nothing.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/closePath\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        closePath() {\n            if(!this._closed) {\n                this.path.push([PATH_COMMAND.LINE, this.pathstart]);\n                this._closed = true;\n            }\n        }\n\n\n        /**\n         * Strokes the current or given path with the current stroke style\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/stroke\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        stroke() {\n            let flat_path = flatten_path(this.path);\n            let stroke_path = path_to_stroked_path(flat_path,this.lineWidth/2);\n            const lines = pathToLines(stroke_path);\n            const old_fillStyle = this.fillStyle;\n            this.fillStyle = this.strokeStyle;\n            this.imageSmoothingEnabled ? this.fill_aa(lines) : this.fill_noaa(lines);\n            this.fillStyle = old_fillStyle;\n\n            if(this.debug) {\n                this.save();\n                let old_ss = this.strokeStyle;\n                let old_lw = this.lineWidth;\n                this.strokeStyle = 'red';\n                this.lineWidth = 1;\n                console.log(\"path is\",this.path);\n                pathToLines(this.path).forEach((line) => this.drawLine(line));\n                console.log(\"flat path is\",flat_path);\n                pathToLines(flat_path).forEach((line) => this.drawLine(line));\n                console.log(\"stroke path is\",stroke_path);\n                pathToLines(stroke_path).forEach(line => this.drawLine(line));\n                console.log(\"final lines are\",lines);\n                this.strokeStyle = old_ss;\n                this.lineWidth = old_lw;\n                this.restore();\n            }\n        }\n\n        /**\n         * Draw a line using the correct anti-aliased, or non-anti-aliased line drawing function based on the value of {@link imageSmoothingEnabled}\n         *\n         * @param {Line} line A set of co-ordinates representing the start and end of the line. You can also pass a plain js object if you wish\n         * @example\n         * //All of the following are valid:\n         * ctx.drawLine({start: {x: 20, y:42}, end: {x: 20, y:90}})\n         * ctx.drawLine(new Line(new Point(20, 42), new Point(20, 90)))\n         * ctx.drawLine(new Line(20, 42, 20, 90))\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        drawLine(line) {\n            if(line.is_invalid()) return console.error('cannot draw line',line)\n            this.imageSmoothingEnabled?this.drawLine_aa(line):this.drawLine_noaa(line);\n        }\n\n        /**\n         *\n         * Draw a line without anti-aliasing using Bresenham's algorithm\n         *\n         * @param {Line} line A set of co-ordinates representing the start and end of the line. You can also pass a plain js object if you wish\n         * @example\n         * //All of the following are valid:\n         * ctx.drawLine({start: {x: 20, y:42}, end: {x: 20, y:90}})\n         * ctx.drawLine(new Line(new Point(20, 42), new Point(20, 90)))\n         * ctx.drawLine(new Line(20, 42, 20, 90))\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        drawLine_noaa(line) {\n            //Bresenham's from Rosetta Code\n            // http://rosettacode.org/wiki/Bitmap/Bresenham's_line_algorithm#JavaScript\n            let x0 = Math.floor(line.start.x);\n            let y0 = Math.floor(line.start.y);\n            const x1 = Math.floor(line.end.x);\n            const y1 = Math.floor(line.end.y);\n            const dx = Math.abs(x1 - x0), sx = x0 < x1 ? 1 : -1;\n            const dy = Math.abs(y1 - y0), sy = y0 < y1 ? 1 : -1;\n            let err = (dx > dy ? dx : -dy) / 2;\n\n            while (true) {\n                this.strokePixel(x0,y0);\n                if (x0 === x1 && y0 === y1) break;\n                const e2 = err;\n                if (e2 > -dx) { err -= dy; x0 += sx; }\n                if (e2 < dy) { err += dx; y0 += sy; }\n            }\n        }\n\n        /**\n         * Draw Line Anti-aliased\n         *\n         * Draw anti-aliased line using Bresenham's algorithm\n         *\n         * @see http://members.chello.at/~easyfilter/bresenham.html\n         *\n         * @param {Line} line A set of co-ordinates representing the start and end of the line. You can also pass a plain js object if you wish\n         * @example\n         * //All of the following are valid:\n         * ctx.drawLine({start: {x: 20, y:42}, end: {x: 20, y:90}})\n         * ctx.drawLine(new Line(new Point(20, 42), new Point(20, 90)))\n         * ctx.drawLine(new Line(20, 42, 20, 90))\n         *\n         * @memberof Context\n         */\n        drawLine_aa(line) {\n            let width = this._lineWidth;\n            let x0 = Math.floor(line.start.x);\n            let y0 = Math.floor(line.start.y);\n            let x1 = Math.floor(line.end.x);\n            let y1 = Math.floor(line.end.y);\n            let dx = Math.abs(x1 - x0), sx = x0 < x1 ? 1 : -1;\n            let dy = Math.abs(y1 - y0), sy = y0 < y1 ? 1 : -1;\n\n            let err = dx - dy, e2, x2, y2;\n            let ed = dx + dy === 0 ? 1 : Math.sqrt(dx * dx + dy * dy);\n            let rgb = and(this._strokeColor, 0xFFFFFF00);\n            let a1 = and(this._strokeColor,0x000000FF);\n            for (width = (width+1)/2; ; ) {\n                const alpha = ~~Math.max(0, 255 * (Math.abs(err - dx + dy) / ed - width + 1));\n                const a2 = 255-alpha;\n                const color = or(rgb,(a1*a2)/255);\n                this.fillPixelWithColor(x0,y0,color);\n                e2 = err; x2 = x0;\n                if (2*e2 >= -dx) {\n                    for (e2 += dy, y2 = y0; e2 < ed*width && (y1 !== y2 || dx > dy); e2 += dx) {\n                        const alpha = ~~Math.max(0, 255 * (Math.abs(e2) / ed - width + 1));\n                        const a2 = 255-alpha;\n                        const color = or(rgb,(a1*a2)/255);\n                        this.fillPixelWithColor(x0, y2 += sy, color);\n                    }\n                    if (x0 === x1) break;\n                    e2 = err; err -= dy; x0 += sx;\n                }\n                if (2*e2 <= dy) {\n                    for (e2 = dx-e2; e2 < ed*width && (x1 !== x2 || dx < dy); e2 += dy) {\n                        const alpha = ~~Math.max(0, 255 * (Math.abs(e2) / ed - width + 1));\n                        const a2 = 255-alpha;\n                        const color = or(rgb,(a1*a2)/255);\n                        this.fillPixelWithColor(x2 += sx, y0, color);\n                    }\n                    if (y0 === y1) break;\n                    err += dx; y0 += sy;\n                }\n            }\n        }\n\n        /**\n         * Fills the current or given path with the current fill style. Uses {@link fill_aa} and {@link fill_noaa} depending on the the value of {@link imageSmoothingEnabled}\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fill\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        fill() {\n            if(!this._closed) this.closePath();\n            const lines = pathToLines(this.path);\n            this.imageSmoothingEnabled ? this.fill_aa(lines) : this.fill_noaa(lines);\n        }\n\n        /**\n         * Fill Anti-aliased\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        fill_aa(lines) {\n            //get just the color part\n            const rgb = and(this._fillColor, 0xFFFFFF00);\n            const alpha = and(this._fillColor, 0xFF);\n            const bounds = calcMinimumBounds(lines);\n\n            const startY = Math.min(bounds.y2 - 1, this.bitmap.height);\n            const endY = Math.max(bounds.y, 0);\n\n            for(let j=startY; j>=endY; j--) {\n                const ints = calcSortedIntersections(lines, j);\n                //fill between each pair of intersections\n                // if(ints.length %2 !==0) console.log(\"warning. uneven number of intersections\");\n                for(let i=0; i<ints.length; i+=2) {\n                    const fstartf = fract(ints[i]);\n                    const fendf = fract(ints[i + 1]);\n                    const start = Math.floor(ints[i]);\n                    const end = Math.floor(ints[i + 1]);\n                    for(let ii=start; ii<=end; ii++) {\n                        let col = this.calculateRGBA(ii,j);\n                        if(ii === start) {\n                            //first\n                            const int = or(rgb,(1-fstartf)*alpha);\n                            this.fillPixelWithColor(ii,j, int);\n                            continue;\n                        }\n                        if(ii === end) {\n                            //last\n                            const int = or(rgb,fendf*alpha);\n                            this.fillPixelWithColor(ii,j, int);\n                            continue;\n                        }\n                        //console.log(\"filling\",ii,j);\n                        this.fillPixelWithColor(ii,j, col);\n                    }\n                }\n            }\n        }\n\n        /**\n         * Fill No Anti-aliased\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        fill_noaa(lines) {\n            //get just the color part\n            and(this._fillColor, 0xFFFFFF00);\n            const bounds = calcMinimumBounds(lines);\n            for(let j=bounds.y2-1; j>=bounds.y; j--) {\n                const ints = calcSortedIntersections(lines, j);\n                //fill between each pair of intersections\n                for(let i=0; i<ints.length; i+=2) {\n                    const start = Math.floor(ints[i]);\n                    const end = Math.floor(ints[i + 1]);\n                    for(let ii=start; ii<=end; ii++) {\n                        let col = this.calculateRGBA(ii,j);\n                        if(ii === start) {\n                            //first\n                            this.fillPixelWithColor(ii,j,col);\n                            continue;\n                        }\n                        if(ii === end) {\n                            //last\n                            this.fillPixelWithColor(ii,j,col);\n                            continue;\n                        }\n                        this.fillPixelWithColor(ii,j,col);\n                    }\n                }\n            }\n        }\n\n        /**\n         * Pixel Inside Clip\n         *\n         * Even/odd rule. https://en.wikipedia.org/wiki/Point_in_polygon\n         * technically this is not correct as the default algorithm for\n         * html canvas is supposed to be the non-zero winding rule instead\n         *\n         * @see https://en.wikipedia.org/wiki/Point_in_polygon\n         *\n         * @param {number} x\n         * @param {number} y\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        pixelInsideClip(x,y) {\n            if(!this._clip) return true;\n            //turn into a list of lines\n            // calculate intersections with a horizontal line at j\n            const ints = calcSortedIntersections(this._clip, y);\n            // find the intersections to the left of i (where x < i)\n            const left = ints.filter((inter) => inter < x);\n            if(left.length%2 === 0) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n\n        /**\n         *  Draws a text string at the specified coordinates, filling the string's characters with the current foreground color\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillText\n         *\n         * @param {string} text A string specifying the text string to render into the context. The text is rendered using the settings specified by {@link font}.\n         * @param {number} x    The x -coordinate of the point at which to begin drawing the text, in pixels.\n         * @param {number} y    The y-coordinate of the point at which to begin drawing the text, in pixels.\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        fillText(text, x ,y) { processTextPath(this, text, x,y, true, this.textAlign, this.textBaseline);  }\n\n        /**\n         * Draws the outlines of the characters of a specified text string at the given (x, y) position.\n         *\n         * @param {string} text The text to draw using the current {@link font} values.\n         * @param {number} x    The x axis of the coordinate for the text starting point.\n         * @param {number} y    The y axis of the coordinate for the text starting point.\n         *\n         * @returns {void}\n         *\n         * @memberof Context\n         */\n        strokeText(text, x ,y) { processTextPath(this, text, x,y, false, this.textAlign, this.textBaseline);  }\n\n\n\n    }\n\n    /**\n     * Returns the decimal portion of a given floating point number\n     *\n     * @param {number} v The number to return the declimal fration of\n     * @example\n     * console.log(fract(12.35))\n     * // Prints out 0.34999999999999964\n     *\n     * @returns {number}\n     */\n    function fract(v) {  return v-Math.floor(v);   }\n\n    /**\n     * Convert a path of points to an array of lines\n     *\n     * @param {Array} path List of sub-paths\n     *\n     * @returns {Array<Line>}\n     */\n    function pathToLines(path) {\n        const lines = [];\n        let curr = null;\n\n        path.forEach(function(cmd) {\n            if(cmd[0] === PATH_COMMAND.MOVE) {\n                curr = cmd[1];\n            }\n            if(cmd[0] === PATH_COMMAND.LINE) {\n                const pt = cmd[1];\n                lines.push(new Line(curr, pt));\n                curr = pt;\n            }\n            if(cmd[0] === PATH_COMMAND.QUADRATIC_CURVE) {\n                const pts = [curr, cmd[1], cmd[2]];\n                for(let t=0; t<1; t+=0.1) {\n                    let pt = calcQuadraticAtT(pts,t);\n                    lines.push(new Line(curr, pt));\n                    curr = pt;\n                }\n            }\n            if(cmd[0] === PATH_COMMAND.BEZIER_CURVE) {\n                const pts = [curr, cmd[1], cmd[2], cmd[3]];\n                bezierToLines(pts,10).forEach(pt => {\n                    lines.push(new Line(curr,pt));\n                    curr = pt;\n                });\n            }\n        });\n        return lines;\n    }\n\n    function flatten_path(A) {\n        let B = [];\n        let curr = null;\n        A.forEach(cmd => {\n            if(cmd[0] === PATH_COMMAND.MOVE) {\n                curr = cmd[1];\n                // console.log(\"move\",curr)\n                return B.push([PATH_COMMAND.MOVE, new Point(curr.x,curr.y)])\n            }\n            if(cmd[0] === PATH_COMMAND.LINE) {\n                curr = cmd[1];\n                // console.log(\"line\",curr)\n                return B.push([PATH_COMMAND.LINE, new Point(curr.x,curr.y)])\n            }\n            if(cmd[0] === PATH_COMMAND.BEZIER_CURVE) {\n                const pts = [curr, cmd[1], cmd[2], cmd[3]];\n                let pts2 = bezierToLines(pts,10);\n                for(let i=1; i<pts2.length; i+=2) {\n                    B.push([PATH_COMMAND.LINE,new Point(pts2[i].x,pts2[i].y)]);\n                }\n                curr = cmd[3];\n            }\n        });\n        return B\n    }\n\n    function path_to_stroked_path(path, w) {\n        //split the path into sub-paths based on the MOVE command\n        let subs = [];\n        let curr_sub = [];\n        path.forEach(pth => {\n            if(pth[0] === PATH_COMMAND.MOVE) {\n                if(curr_sub.length > 0) subs.push(curr_sub);\n                curr_sub = [];\n            }\n            curr_sub.push(pth);\n        });\n        if(curr_sub.length > 0) subs.push(curr_sub);\n\n        // warn if there's missing MOVEs\n        subs.forEach(sub => {\n            if(sub[0][0] !== PATH_COMMAND.MOVE) console.warn(\"missing a starting move command!\");\n        });\n\n        // stroke each sub-path\n        let fsubs = subs.map(sub => sub_path_to_stroked_sub_path(sub,w));\n        // flatten back into a single string of commands\n        let final_path = [];\n        fsubs.forEach(sub => sub.forEach(cmd => final_path.push(cmd)));\n        return final_path\n    }\n    function sub_path_to_stroked_sub_path(path, w) {\n        let curr = null;\n        let outside = [];\n        let inside = [];\n        let path_start = 0;\n\n        function project(A,B,scale) {\n            if(A.equals(B)) console.log(\"same points!\",A,B);\n            let delta_unit = A.subtract(B).unit();\n            let C_unit = delta_unit.rotate(toRad(90));\n            let D_unit = delta_unit.rotate(toRad(-90));\n            // console.log(C_unit, D_unit)\n            return [\n                C_unit.scale(scale).add(B),\n                D_unit.scale(scale).add(B)\n            ]\n        }\n\n\n        let prev_cmd = null;\n\n        function normalize_angle(turn) {\n            if(turn < -Math.PI) return turn + Math.PI*2\n            if(turn > +Math.PI) return turn - Math.PI*2\n            return turn\n        }\n\n        path.forEach(function(cmd,i) {\n            // console.log(\"converting\",cmd)\n            if(cmd[0] === PATH_COMMAND.MOVE) {\n                curr = cmd[1];\n                prev_cmd = cmd;\n                path_start = curr.clone();\n                outside.push([PATH_COMMAND.MOVE,path_start.clone()]);\n            }\n\n            if(cmd[0] === PATH_COMMAND.LINE) {\n                const A = curr;\n                const B = cmd[1];\n                if(A.equals(B)) return console.log(\"can't project the same paths\",i,cmd,A,B)\n                // console.log(i,\"====\",B)\n                let next = path[i+1];\n                //if first\n                if(prev_cmd[0] === PATH_COMMAND.MOVE) {\n                    // console.log(\"doing the first\")\n                    let pts1 = project(B,A,w);\n                    outside.push([PATH_COMMAND.LINE, pts1[1]]);\n                    inside.push([PATH_COMMAND.LINE,pts1[0]]);\n                }\n                prev_cmd = cmd;\n                // if last\n                if(!next) {\n                    // console.log(\"doing last\")\n                    let pts1 = project(A,B,w);\n                    outside.push([PATH_COMMAND.LINE, pts1[0]]);\n                    inside.push([PATH_COMMAND.LINE, pts1[1]]);\n                    return\n                }\n                const C = next[1];\n                if(C.equals(B)) return console.log(\"can't project the same paths\",i,cmd,A,B)\n                // console.log(i,A,B,C)\n                // console.log(\"next\",next)\n                let BA = A.subtract(B);\n                let BC = C.subtract(B);\n                // console.log(i,'B',B,'BA',BA,'BC',BC)\n                let BA_angle = Math.atan2(BA.y,BA.x);\n                let BC_angle = Math.atan2(BC.y,BC.x);\n                // console.log(\"angles\",toDeg(turn))\n                let turn = normalize_angle(BC_angle-BA_angle);\n\n                let pts1 = project(A,B,w);\n                let pts2 = project(C,B,w);\n                // console.log(i,'B',pts1)\n                // console.log(i,'B',pts2)\n                if(turn < 0) {\n                    //if turning right\n                    //outside is normal\n                    outside.push([PATH_COMMAND.LINE, pts1[0]]);\n                    outside.push([PATH_COMMAND.LINE, pts2[1]]);\n                    //adjust inside\n                    let h = w/Math.cos((Math.PI+turn)/2);\n                    let C_unit = A.subtract(B).unit().rotate(turn/2).scale(h).add(B);\n                    inside.push([PATH_COMMAND.LINE,C_unit]);\n\n                } else {\n                    //if turning left\n                    //adjust outside\n                    let h = w/Math.cos(-(Math.PI-turn)/2);\n                    let C_unit = C.subtract(B).unit().rotate(-turn/2).scale(h).add(B);\n                    outside.push([PATH_COMMAND.LINE,C_unit]);\n                    //inside is normal\n                    inside.push([PATH_COMMAND.LINE, pts1[1]]);\n                    inside.push([PATH_COMMAND.LINE, pts2[0]]);\n                }\n                curr = B;\n            }\n        });\n\n        inside.reverse();\n        let final = [].concat(outside).concat(inside);\n        // console.log(\"path_to_stroked_path output\")\n        // console.log('outside',outside)\n        // console.log('inside',inside)\n        final.push([PATH_COMMAND.LINE, path_start]);\n        // console.log(\"final\")\n        // console.log(final)\n        return final\n    }\n\n    /**\n     * Calculate Quadratic\n     *\n     * @param {number} p\n     * @param {number} t\n     *\n     * @ignore\n     *\n     * @returns {Point}\n     */\n    function calcQuadraticAtT(p, t) {\n        const x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\n        const y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\n        return new Point(x, y);\n    }\n\n    function bezierToLines(curve, THRESHOLD) {\n        function recurse(curve) {\n            if(flatness(curve) < THRESHOLD) return [curve[0],curve[3]]\n            const split = splitCurveAtT(curve,0.5);\n            return recurse(split[0]).concat(recurse(split[1]))\n        }\n        return recurse(curve)\n    }\n\n    function splitCurveAtT(p,t, debug) {\n        let p1 = p[0];\n        let p2 = p[1];\n        let p3 = p[2];\n        let p4 = p[3];\n\n        let p12 = midpoint(p1,p2,t);\n        let p23 = midpoint(p2,p3,t);\n        let p34 = midpoint(p4,p3,t);\n\n\n        let p123 = midpoint(p12,p23,t);\n        let p234 = midpoint(p23, p34,t);\n        let p1234 = { x: (p234.x-p123.x)*t+p123.x, y: (p234.y-p123.y)*t+p123.y};\n\n        return [[p1, p12, p123, p1234],[p1234,p234,p34,p4]]\n    }\n\n    function flatness(curve) {\n        const pointA = curve[0];\n        const controlPointA = curve[1];\n        const controlPointB = curve[2];\n        const pointB = curve[3];\n        let ux = Math.pow( 3 * controlPointA.x - 2 * pointA.x - pointB.x, 2 );\n        let uy = Math.pow( 3 * controlPointA.y - 2 * pointA.y - pointB.y, 2 );\n        let vx = Math.pow( 3 * controlPointB.x - 2 * pointB.x - pointA.x, 2 );\n        let vy = Math.pow( 3 * controlPointB.y - 2 * pointB.y - pointA.y, 2 );\n        if( ux < vx )\n            ux = vx;\n        if( uy < vy )\n            uy = vy;\n        return ux + uy;\n    }\n\n    function midpoint(p1,p2,t) {\n        return { x: (p2.x-p1.x)*t+p1.x, y: (p2.y-p1.y)*t+p1.y}\n    }\n\n    /**\n     * Calculate Minimum Bounds\n     *\n     * @param {Array} lines\n     *\n     * @ignore\n     *\n     * @returns {{x: Number.MAX_VALUE, y: Number.MAX_VALUE, x2: Number.MIN_VALUE, y2: Number.MIN_VALUE}}\n     */\n    function calcMinimumBounds(lines) {\n        const bounds = {\n            x: Number.MAX_VALUE,\n            y: Number.MAX_VALUE,\n            x2: Number.MIN_VALUE,\n            y2: Number.MIN_VALUE\n        };\n\n        function checkPoint(pt) {\n            bounds.x  = Math.min(bounds.x,pt.x);\n            bounds.y  = Math.min(bounds.y,pt.y);\n            bounds.x2 = Math.max(bounds.x2,pt.x);\n            bounds.y2 = Math.max(bounds.y2,pt.y);\n        }\n        lines.forEach(function(line) {\n            checkPoint(line.start);\n            checkPoint(line.end);\n        });\n        return bounds;\n    }\n\n\n    /**\n     * Calculate Sorted Intersections\n     *\n     * Adopted from http://alienryderflex.com/polygon\n     *\n     * @see http://alienryderflex.com/polygon\n     *\n     * @param {Array} lines An {@link Array} of Line\n     * @param {number} y\n     *\n     * @ignore\n     *\n     * @returns {Array}\n     */\n    function calcSortedIntersections(lines,y) {\n        const xlist = [];\n        for(let i=0; i<lines.length; i++) {\n            const A = lines[i].start;\n            const B = lines[i].end;\n            if(A.y<y && B.y>=y || B.y<y && A.y>=y) {\n                const xval = A.x + (y - A.y) / (B.y - A.y) * (B.x - A.x);\n                xlist.push(xval);\n            }\n        }\n        return xlist.sort(function(a,b) {  return a-b; });\n    }\n\n    /**\n     * The Bitmap class is used for direct pixel manipulation(for example setting a pixel colour,\n     * transparency etc). It also provides a factory method for creating new instances of\n     * {@link Context}\n     *\n     * @class Bitmap\n     */\n    class Bitmap {\n\n        /**\n         * Creates an instance of Bitmap.\n         * @param {number} w      Width\n         * @param {number} h      Height\n         * @param {any}   options Currently unused\n         * @memberof Bitmap\n         */\n        constructor(w,h, options) {\n\n            /**\n             * @type {number}\n             */\n            this.width = Math.floor(w);\n\n            /**\n             * @type {number}\n             */\n            this.height = Math.floor(h);\n\n            /**\n             * @type {ArrayBuffer}\n             */\n            this.data = Buffer.alloc(w*h*4);\n\n            const fillval = NAMED_COLORS.transparent;\n            for(let j=0; j<h; j++) {\n                for (let i = 0; i < w; i++) {\n                    this.setPixelRGBA(i, j, fillval);\n                }\n            }\n\n        }\n\n        /**\n         * Calculate Index\n         *\n         * @param {number} x X position\n         * @param {number} y Y position\n         *\n         * @returns {number}\n         *\n         * @memberof Bitmap\n         */\n        calculateIndex (x,y) {\n            x = Math.floor(x);\n            y = Math.floor(y);\n            if (x<0 || y<0 || x >= this.width || y >= this.height) return 0;\n            return (this.width*y+x)*4;\n        }\n\n        /**\n         * Set the RGBA(Red, Green, Blue, Alpha) values on an individual pixel level\n         *\n         * @param {number} x    X axis position\n         * @param {number} y    Y axis position\n         * @param {number} rgba A hex representation of the RGBA value of the pixel. See {@link NAMED_COLORS} for examples\n         *\n         * @returns {void}\n         *\n         * @memberof Bitmap\n         */\n        setPixelRGBA(x,y,rgba) {\n            let i = this.calculateIndex(x, y);\n            const bytes = getBytesBigEndian(rgba);\n            this.data[i+0] = bytes[0];\n            this.data[i+1] = bytes[1];\n            this.data[i+2] = bytes[2];\n            this.data[i+3] = bytes[3];\n        }\n\n        /**\n         * Set the individual red, green, blue and alpha levels of an individual pixel\n         *\n         * @param {number} x X axis position\n         * @param {number} y Y axis position\n         * @param {number} r Red level\n         * @param {number} g Green level\n         * @param {number} b Blue level\n         * @param {number} a Alpha level\n         *\n         * @returns {void}\n         *\n         * @memberof Bitmap\n         */\n        setPixelRGBA_i(x,y,r,g,b,a) {\n            let i = this.calculateIndex(x, y);\n            this.data[i+0] = r;\n            this.data[i+1] = g;\n            this.data[i+2] = b;\n            this.data[i+3] = a;\n        }\n\n        /**\n         * Get the RGBA value of an individual pixel as a hexadecimal number(See {@link NAMED_COLORS} for examples)\n         *\n         * @param {number} x X axis potiion\n         * @param {number} y Y axis position\n         *\n         * @returns {number}\n         *\n         * @memberof Bitmap\n         */\n        getPixelRGBA(x,y) {\n            let i = this.calculateIndex(x, y);\n            return fromBytesBigEndian(\n                this.data[i+0],\n                this.data[i+1],\n                this.data[i+2],\n                this.data[i+3]);\n        }\n\n        /**\n         * Get Pixel RGBA Seperate\n         *\n         * @param {number} x X axis position\n         * @param {number} y Y axis position\n         *\n         * @ignore\n         *\n         * @returns {Array}\n         *\n         * @memberof Bitmap\n         */\n        getPixelRGBA_separate(x,y) {\n            const i = this.calculateIndex(x, y);\n            return this.data.slice(i,i+4);\n        }\n\n        /**\n         * {@link Context} factory. Creates a new {@link Context} instance object for the current bitmap object\n         *\n         * @returns {Context}\n         *\n         * @memberof Bitmap\n         */\n        getContext(type) {\n            return new Context(this);\n        }\n\n        _copySubBitmap(x,y,w,h) {\n            let dst = new Bitmap(w,h,{});\n            for(let i=0; i<w; i++) {\n                for(let j=0; j<h; j++) {\n                    let indexA = this.calculateIndex(x+i,y+j);\n                    let indexB = dst.calculateIndex(i,j);\n                    for(let k=0; k<4; k++) {\n                        dst.data[indexB+k] = this.data[indexA+k];\n                    }\n                }\n            }\n            return dst\n        }\n\n        _pasteSubBitmap(src,x,y) {\n            for(let i=0; i<src.width; i++) {\n                for(let j=0; j<src.height; j++) {\n                    let indexA = this.calculateIndex(x+i,y+j);\n                    let indexB = src.calculateIndex(i,j);\n                    for(let k=0; k<4; k++) {\n                        this.data[indexA+k] = src.data[indexB+k];\n                    }\n                }\n            }\n        }\n\n    }\n\n    var chunkstream = createCommonjsModule(function (module) {\n\n\n\n\n\n\n    var ChunkStream = module.exports = function() {\n      Stream__default['default'].call(this);\n\n      this._buffers = [];\n      this._buffered = 0;\n\n      this._reads = [];\n      this._paused = false;\n\n      this._encoding = 'utf8';\n      this.writable = true;\n    };\n    util__default['default'].inherits(ChunkStream, Stream__default['default']);\n\n\n    ChunkStream.prototype.read = function(length, callback) {\n\n      this._reads.push({\n        length: Math.abs(length),  // if length < 0 then at most this length\n        allowLess: length < 0,\n        func: callback\n      });\n\n      process.nextTick(function() {\n        this._process();\n\n        // its paused and there is not enought data then ask for more\n        if (this._paused && this._reads.length > 0) {\n          this._paused = false;\n\n          this.emit('drain');\n        }\n      }.bind(this));\n    };\n\n    ChunkStream.prototype.write = function(data, encoding) {\n\n      if (!this.writable) {\n        this.emit('error', new Error('Stream not writable'));\n        return false;\n      }\n\n      var dataBuffer;\n      if (Buffer.isBuffer(data)) {\n        dataBuffer = data;\n      }\n      else {\n        dataBuffer = new Buffer(data, encoding || this._encoding);\n      }\n\n      this._buffers.push(dataBuffer);\n      this._buffered += dataBuffer.length;\n\n      this._process();\n\n      // ok if there are no more read requests\n      if (this._reads && this._reads.length === 0) {\n        this._paused = true;\n      }\n\n      return this.writable && !this._paused;\n    };\n\n    ChunkStream.prototype.end = function(data, encoding) {\n\n      if (data) {\n        this.write(data, encoding);\n      }\n\n      this.writable = false;\n\n      // already destroyed\n      if (!this._buffers) {\n        return;\n      }\n\n      // enqueue or handle end\n      if (this._buffers.length === 0) {\n        this._end();\n      }\n      else {\n        this._buffers.push(null);\n        this._process();\n      }\n    };\n\n    ChunkStream.prototype.destroySoon = ChunkStream.prototype.end;\n\n    ChunkStream.prototype._end = function() {\n\n      if (this._reads.length > 0) {\n        this.emit('error',\n          new Error('There are some read requests waiting on finished stream')\n        );\n      }\n\n      this.destroy();\n    };\n\n    ChunkStream.prototype.destroy = function() {\n\n      if (!this._buffers) {\n        return;\n      }\n\n      this.writable = false;\n      this._reads = null;\n      this._buffers = null;\n\n      this.emit('close');\n    };\n\n    ChunkStream.prototype._processReadAllowingLess = function(read) {\n      // ok there is any data so that we can satisfy this request\n      this._reads.shift(); // == read\n\n      // first we need to peek into first buffer\n      var smallerBuf = this._buffers[0];\n\n      // ok there is more data than we need\n      if (smallerBuf.length > read.length) {\n\n        this._buffered -= read.length;\n        this._buffers[0] = smallerBuf.slice(read.length);\n\n        read.func.call(this, smallerBuf.slice(0, read.length));\n\n      }\n      else {\n        // ok this is less than maximum length so use it all\n        this._buffered -= smallerBuf.length;\n        this._buffers.shift(); // == smallerBuf\n\n        read.func.call(this, smallerBuf);\n      }\n    };\n\n    ChunkStream.prototype._processRead = function(read) {\n      this._reads.shift(); // == read\n\n      var pos = 0;\n      var count = 0;\n      var data = new Buffer(read.length);\n\n      // create buffer for all data\n      while (pos < read.length) {\n\n        var buf = this._buffers[count++];\n        var len = Math.min(buf.length, read.length - pos);\n\n        buf.copy(data, pos, 0, len);\n        pos += len;\n\n        // last buffer wasn't used all so just slice it and leave\n        if (len !== buf.length) {\n          this._buffers[--count] = buf.slice(len);\n        }\n      }\n\n      // remove all used buffers\n      if (count > 0) {\n        this._buffers.splice(0, count);\n      }\n\n      this._buffered -= read.length;\n\n      read.func.call(this, data);\n    };\n\n    ChunkStream.prototype._process = function() {\n\n      try {\n        // as long as there is any data and read requests\n        while (this._buffered > 0 && this._reads && this._reads.length > 0) {\n\n          var read = this._reads[0];\n\n          // read any data (but no more than length)\n          if (read.allowLess) {\n            this._processReadAllowingLess(read);\n\n          }\n          else if (this._buffered >= read.length) {\n            // ok we can meet some expectations\n\n            this._processRead(read);\n          }\n          else {\n            // not enought data to satisfy first request in queue\n            // so we need to wait for more\n            break;\n          }\n        }\n\n        if (this._buffers && this._buffers.length > 0 && this._buffers[0] === null) {\n          this._end();\n        }\n      }\n      catch (ex) {\n        this.emit('error', ex);\n      }\n    };\n    });\n\n    // Adam 7\n    //   0 1 2 3 4 5 6 7\n    // 0 x 6 4 6 x 6 4 6\n    // 1 7 7 7 7 7 7 7 7\n    // 2 5 6 5 6 5 6 5 6\n    // 3 7 7 7 7 7 7 7 7\n    // 4 3 6 4 6 3 6 4 6\n    // 5 7 7 7 7 7 7 7 7\n    // 6 5 6 5 6 5 6 5 6\n    // 7 7 7 7 7 7 7 7 7\n\n\n    var imagePasses = [\n      { // pass 1 - 1px\n        x: [0],\n        y: [0]\n      },\n      { // pass 2 - 1px\n        x: [4],\n        y: [0]\n      },\n      { // pass 3 - 2px\n        x: [0, 4],\n        y: [4]\n      },\n      { // pass 4 - 4px\n        x: [2, 6],\n        y: [0, 4]\n      },\n      { // pass 5 - 8px\n        x: [0, 2, 4, 6],\n        y: [2, 6]\n      },\n      { // pass 6 - 16px\n        x: [1, 3, 5, 7],\n        y: [0, 2, 4, 6]\n      },\n      { // pass 7 - 32px\n        x: [0, 1, 2, 3, 4, 5, 6, 7],\n        y: [1, 3, 5, 7]\n      }\n    ];\n\n    var getImagePasses = function(width, height) {\n      var images = [];\n      var xLeftOver = width % 8;\n      var yLeftOver = height % 8;\n      var xRepeats = (width - xLeftOver) / 8;\n      var yRepeats = (height - yLeftOver) / 8;\n      for (var i = 0; i < imagePasses.length; i++) {\n        var pass = imagePasses[i];\n        var passWidth = xRepeats * pass.x.length;\n        var passHeight = yRepeats * pass.y.length;\n        for (var j = 0; j < pass.x.length; j++) {\n          if (pass.x[j] < xLeftOver) {\n            passWidth++;\n          }\n          else {\n            break;\n          }\n        }\n        for (j = 0; j < pass.y.length; j++) {\n          if (pass.y[j] < yLeftOver) {\n            passHeight++;\n          }\n          else {\n            break;\n          }\n        }\n        if (passWidth > 0 && passHeight > 0) {\n          images.push({ width: passWidth, height: passHeight, index: i });\n        }\n      }\n      return images;\n    };\n\n    var getInterlaceIterator = function(width) {\n      return function(x, y, pass) {\n        var outerXLeftOver = x % imagePasses[pass].x.length;\n        var outerX = (((x - outerXLeftOver) / imagePasses[pass].x.length) * 8) + imagePasses[pass].x[outerXLeftOver];\n        var outerYLeftOver = y % imagePasses[pass].y.length;\n        var outerY = (((y - outerYLeftOver) / imagePasses[pass].y.length) * 8) + imagePasses[pass].y[outerYLeftOver];\n        return (outerX * 4) + (outerY * width * 4);\n      };\n    };\n\n    var interlace = {\n    \tgetImagePasses: getImagePasses,\n    \tgetInterlaceIterator: getInterlaceIterator\n    };\n\n    var paethPredictor = function paethPredictor(left, above, upLeft) {\r\n\r\n      var paeth = left + above - upLeft;\r\n      var pLeft = Math.abs(paeth - left);\r\n      var pAbove = Math.abs(paeth - above);\r\n      var pUpLeft = Math.abs(paeth - upLeft);\r\n\r\n      if (pLeft <= pAbove && pLeft <= pUpLeft) {\r\n        return left;\r\n      }\r\n      if (pAbove <= pUpLeft) {\r\n        return above;\r\n      }\r\n      return upLeft;\r\n    };\n\n    var filterParse = createCommonjsModule(function (module) {\n\n\n\n\n    function getByteWidth(width, bpp, depth) {\n      var byteWidth = width * bpp;\n      if (depth !== 8) {\n        byteWidth = Math.ceil(byteWidth / (8 / depth));\n      }\n      return byteWidth;\n    }\n\n    var Filter = module.exports = function(bitmapInfo, dependencies) {\n\n      var width = bitmapInfo.width;\n      var height = bitmapInfo.height;\n      var interlace$1 = bitmapInfo.interlace;\n      var bpp = bitmapInfo.bpp;\n      var depth = bitmapInfo.depth;\n\n      this.read = dependencies.read;\n      this.write = dependencies.write;\n      this.complete = dependencies.complete;\n\n      this._imageIndex = 0;\n      this._images = [];\n      if (interlace$1) {\n        var passes = interlace.getImagePasses(width, height);\n        for (var i = 0; i < passes.length; i++) {\n          this._images.push({\n            byteWidth: getByteWidth(passes[i].width, bpp, depth),\n            height: passes[i].height,\n            lineIndex: 0\n          });\n        }\n      }\n      else {\n        this._images.push({\n          byteWidth: getByteWidth(width, bpp, depth),\n          height: height,\n          lineIndex: 0\n        });\n      }\n\n      // when filtering the line we look at the pixel to the left\n      // the spec also says it is done on a byte level regardless of the number of pixels\n      // so if the depth is byte compatible (8 or 16) we subtract the bpp in order to compare back\n      // a pixel rather than just a different byte part. However if we are sub byte, we ignore.\n      if (depth === 8) {\n        this._xComparison = bpp;\n      }\n      else if (depth === 16) {\n        this._xComparison = bpp * 2;\n      }\n      else {\n        this._xComparison = 1;\n      }\n    };\n\n    Filter.prototype.start = function() {\n      this.read(this._images[this._imageIndex].byteWidth + 1, this._reverseFilterLine.bind(this));\n    };\n\n    Filter.prototype._unFilterType1 = function(rawData, unfilteredLine, byteWidth) {\n\n      var xComparison = this._xComparison;\n      var xBiggerThan = xComparison - 1;\n\n      for (var x = 0; x < byteWidth; x++) {\n        var rawByte = rawData[1 + x];\n        var f1Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n        unfilteredLine[x] = rawByte + f1Left;\n      }\n    };\n\n    Filter.prototype._unFilterType2 = function(rawData, unfilteredLine, byteWidth) {\n\n      var lastLine = this._lastLine;\n\n      for (var x = 0; x < byteWidth; x++) {\n        var rawByte = rawData[1 + x];\n        var f2Up = lastLine ? lastLine[x] : 0;\n        unfilteredLine[x] = rawByte + f2Up;\n      }\n    };\n\n    Filter.prototype._unFilterType3 = function(rawData, unfilteredLine, byteWidth) {\n\n      var xComparison = this._xComparison;\n      var xBiggerThan = xComparison - 1;\n      var lastLine = this._lastLine;\n\n      for (var x = 0; x < byteWidth; x++) {\n        var rawByte = rawData[1 + x];\n        var f3Up = lastLine ? lastLine[x] : 0;\n        var f3Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n        var f3Add = Math.floor((f3Left + f3Up) / 2);\n        unfilteredLine[x] = rawByte + f3Add;\n      }\n    };\n\n    Filter.prototype._unFilterType4 = function(rawData, unfilteredLine, byteWidth) {\n\n      var xComparison = this._xComparison;\n      var xBiggerThan = xComparison - 1;\n      var lastLine = this._lastLine;\n\n      for (var x = 0; x < byteWidth; x++) {\n        var rawByte = rawData[1 + x];\n        var f4Up = lastLine ? lastLine[x] : 0;\n        var f4Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n        var f4UpLeft = x > xBiggerThan && lastLine ? lastLine[x - xComparison] : 0;\n        var f4Add = paethPredictor(f4Left, f4Up, f4UpLeft);\n        unfilteredLine[x] = rawByte + f4Add;\n      }\n    };\n\n    Filter.prototype._reverseFilterLine = function(rawData) {\n\n      var filter = rawData[0];\n      var unfilteredLine;\n      var currentImage = this._images[this._imageIndex];\n      var byteWidth = currentImage.byteWidth;\n\n      if (filter === 0) {\n        unfilteredLine = rawData.slice(1, byteWidth + 1);\n      }\n      else {\n\n        unfilteredLine = new Buffer(byteWidth);\n\n        switch (filter) {\n          case 1:\n            this._unFilterType1(rawData, unfilteredLine, byteWidth);\n            break;\n          case 2:\n            this._unFilterType2(rawData, unfilteredLine, byteWidth);\n            break;\n          case 3:\n            this._unFilterType3(rawData, unfilteredLine, byteWidth);\n            break;\n          case 4:\n            this._unFilterType4(rawData, unfilteredLine, byteWidth);\n            break;\n          default:\n            throw new Error('Unrecognised filter type - ' + filter);\n        }\n      }\n\n      this.write(unfilteredLine);\n\n      currentImage.lineIndex++;\n      if (currentImage.lineIndex >= currentImage.height) {\n        this._lastLine = null;\n        this._imageIndex++;\n        currentImage = this._images[this._imageIndex];\n      }\n      else {\n        this._lastLine = unfilteredLine;\n      }\n\n      if (currentImage) {\n        // read, using the byte width that may be from the new current image\n        this.read(currentImage.byteWidth + 1, this._reverseFilterLine.bind(this));\n      }\n      else {\n        this._lastLine = null;\n        this.complete();\n      }\n    };\n    });\n\n    var filterParseAsync = createCommonjsModule(function (module) {\n\n\n\n\n\n\n    var FilterAsync = module.exports = function(bitmapInfo) {\n      chunkstream.call(this);\n\n      var buffers = [];\n      var that = this;\n      this._filter = new filterParse(bitmapInfo, {\n        read: this.read.bind(this),\n        write: function(buffer) {\n          buffers.push(buffer);\n        },\n        complete: function() {\n          that.emit('complete', Buffer.concat(buffers));\n        }\n      });\n\n      this._filter.start();\n    };\n    util__default['default'].inherits(FilterAsync, chunkstream);\n    });\n\n    var constants = {\n\n      PNG_SIGNATURE: [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a],\n\n      TYPE_IHDR: 0x49484452,\n      TYPE_IEND: 0x49454e44,\n      TYPE_IDAT: 0x49444154,\n      TYPE_PLTE: 0x504c5445,\n      TYPE_tRNS: 0x74524e53, // eslint-disable-line camelcase\n      TYPE_gAMA: 0x67414d41, // eslint-disable-line camelcase\n\n      // color-type bits\n      COLORTYPE_GRAYSCALE: 0,\n      COLORTYPE_PALETTE: 1,\n      COLORTYPE_COLOR: 2,\n      COLORTYPE_ALPHA: 4, // e.g. grayscale and alpha\n\n      // color-type combinations\n      COLORTYPE_PALETTE_COLOR: 3,\n      COLORTYPE_COLOR_ALPHA: 6,\n\n      COLORTYPE_TO_BPP_MAP: {\n        0: 1,\n        2: 3,\n        3: 1,\n        4: 2,\n        6: 4\n      },\n\n      GAMMA_DIVISION: 100000\n    };\n\n    var crc = createCommonjsModule(function (module) {\n\n    var crcTable = [];\n\n    (function() {\n      for (var i = 0; i < 256; i++) {\n        var currentCrc = i;\n        for (var j = 0; j < 8; j++) {\n          if (currentCrc & 1) {\n            currentCrc = 0xedb88320 ^ (currentCrc >>> 1);\n          }\n          else {\n            currentCrc = currentCrc >>> 1;\n          }\n        }\n        crcTable[i] = currentCrc;\n      }\n    }());\n\n    var CrcCalculator = module.exports = function() {\n      this._crc = -1;\n    };\n\n    CrcCalculator.prototype.write = function(data) {\n\n      for (var i = 0; i < data.length; i++) {\n        this._crc = crcTable[(this._crc ^ data[i]) & 0xff] ^ (this._crc >>> 8);\n      }\n      return true;\n    };\n\n    CrcCalculator.prototype.crc32 = function() {\n      return this._crc ^ -1;\n    };\n\n\n    CrcCalculator.crc32 = function(buf) {\n\n      var crc = -1;\n      for (var i = 0; i < buf.length; i++) {\n        crc = crcTable[(crc ^ buf[i]) & 0xff] ^ (crc >>> 8);\n      }\n      return crc ^ -1;\n    };\n    });\n\n    var parser = createCommonjsModule(function (module) {\n\n\n\n\n\n    var Parser = module.exports = function(options, dependencies) {\n\n      this._options = options;\n      options.checkCRC = options.checkCRC !== false;\n\n      this._hasIHDR = false;\n      this._hasIEND = false;\n\n      // input flags/metadata\n      this._palette = [];\n      this._colorType = 0;\n\n      this._chunks = {};\n      this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);\n      this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);\n      this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);\n      this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);\n      this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);\n      this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);\n\n      this.read = dependencies.read;\n      this.error = dependencies.error;\n      this.metadata = dependencies.metadata;\n      this.gamma = dependencies.gamma;\n      this.transColor = dependencies.transColor;\n      this.palette = dependencies.palette;\n      this.parsed = dependencies.parsed;\n      this.inflateData = dependencies.inflateData;\n      this.finished = dependencies.finished;\n    };\n\n    Parser.prototype.start = function() {\n      this.read(constants.PNG_SIGNATURE.length,\n        this._parseSignature.bind(this)\n      );\n    };\n\n    Parser.prototype._parseSignature = function(data) {\n\n      var signature = constants.PNG_SIGNATURE;\n\n      for (var i = 0; i < signature.length; i++) {\n        if (data[i] !== signature[i]) {\n          this.error(new Error('Invalid file signature'));\n          return;\n        }\n      }\n      this.read(8, this._parseChunkBegin.bind(this));\n    };\n\n    Parser.prototype._parseChunkBegin = function(data) {\n\n      // chunk content length\n      var length = data.readUInt32BE(0);\n\n      // chunk type\n      var type = data.readUInt32BE(4);\n      var name = '';\n      for (var i = 4; i < 8; i++) {\n        name += String.fromCharCode(data[i]);\n      }\n\n      //console.log('chunk ', name, length);\n\n      // chunk flags\n      var ancillary = Boolean(data[4] & 0x20); // or critical\n    //    priv = Boolean(data[5] & 0x20), // or public\n    //    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\n\n      if (!this._hasIHDR && type !== constants.TYPE_IHDR) {\n        this.error(new Error('Expected IHDR on beggining'));\n        return;\n      }\n\n      this._crc = new crc();\n      this._crc.write(new Buffer(name));\n\n      if (this._chunks[type]) {\n        return this._chunks[type](length);\n      }\n\n      if (!ancillary) {\n        this.error(new Error('Unsupported critical chunk type ' + name));\n        return;\n      }\n\n      this.read(length + 4, this._skipChunk.bind(this));\n    };\n\n    Parser.prototype._skipChunk = function(/*data*/) {\n      this.read(8, this._parseChunkBegin.bind(this));\n    };\n\n    Parser.prototype._handleChunkEnd = function() {\n      this.read(4, this._parseChunkEnd.bind(this));\n    };\n\n    Parser.prototype._parseChunkEnd = function(data) {\n\n      var fileCrc = data.readInt32BE(0);\n      var calcCrc = this._crc.crc32();\n\n      // check CRC\n      if (this._options.checkCRC && calcCrc !== fileCrc) {\n        this.error(new Error('Crc error - ' + fileCrc + ' - ' + calcCrc));\n        return;\n      }\n\n      if (!this._hasIEND) {\n        this.read(8, this._parseChunkBegin.bind(this));\n      }\n    };\n\n    Parser.prototype._handleIHDR = function(length) {\n      this.read(length, this._parseIHDR.bind(this));\n    };\n    Parser.prototype._parseIHDR = function(data) {\n\n      this._crc.write(data);\n\n      var width = data.readUInt32BE(0);\n      var height = data.readUInt32BE(4);\n      var depth = data[8];\n      var colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha\n      var compr = data[10];\n      var filter = data[11];\n      var interlace = data[12];\n\n      // console.log('    width', width, 'height', height,\n      //     'depth', depth, 'colorType', colorType,\n      //     'compr', compr, 'filter', filter, 'interlace', interlace\n      // );\n\n      if (depth !== 8 && depth !== 4 && depth !== 2 && depth !== 1 && depth !== 16) {\n        this.error(new Error('Unsupported bit depth ' + depth));\n        return;\n      }\n      if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {\n        this.error(new Error('Unsupported color type'));\n        return;\n      }\n      if (compr !== 0) {\n        this.error(new Error('Unsupported compression method'));\n        return;\n      }\n      if (filter !== 0) {\n        this.error(new Error('Unsupported filter method'));\n        return;\n      }\n      if (interlace !== 0 && interlace !== 1) {\n        this.error(new Error('Unsupported interlace method'));\n        return;\n      }\n\n      this._colorType = colorType;\n\n      var bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];\n\n      this._hasIHDR = true;\n\n      this.metadata({\n        width: width,\n        height: height,\n        depth: depth,\n        interlace: Boolean(interlace),\n        palette: Boolean(colorType & constants.COLORTYPE_PALETTE),\n        color: Boolean(colorType & constants.COLORTYPE_COLOR),\n        alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),\n        bpp: bpp,\n        colorType: colorType\n      });\n\n      this._handleChunkEnd();\n    };\n\n\n    Parser.prototype._handlePLTE = function(length) {\n      this.read(length, this._parsePLTE.bind(this));\n    };\n    Parser.prototype._parsePLTE = function(data) {\n\n      this._crc.write(data);\n\n      var entries = Math.floor(data.length / 3);\n      // console.log('Palette:', entries);\n\n      for (var i = 0; i < entries; i++) {\n        this._palette.push([\n          data[i * 3],\n          data[i * 3 + 1],\n          data[i * 3 + 2],\n          0xff\n        ]);\n      }\n\n      this.palette(this._palette);\n\n      this._handleChunkEnd();\n    };\n\n    Parser.prototype._handleTRNS = function(length) {\n      this.read(length, this._parseTRNS.bind(this));\n    };\n    Parser.prototype._parseTRNS = function(data) {\n\n      this._crc.write(data);\n\n      // palette\n      if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {\n        if (this._palette.length === 0) {\n          this.error(new Error('Transparency chunk must be after palette'));\n          return;\n        }\n        if (data.length > this._palette.length) {\n          this.error(new Error('More transparent colors than palette size'));\n          return;\n        }\n        for (var i = 0; i < data.length; i++) {\n          this._palette[i][3] = data[i];\n        }\n        this.palette(this._palette);\n      }\n\n      // for colorType 0 (grayscale) and 2 (rgb)\n      // there might be one gray/color defined as transparent\n      if (this._colorType === constants.COLORTYPE_GRAYSCALE) {\n        // grey, 2 bytes\n        this.transColor([data.readUInt16BE(0)]);\n      }\n      if (this._colorType === constants.COLORTYPE_COLOR) {\n        this.transColor([data.readUInt16BE(0), data.readUInt16BE(2), data.readUInt16BE(4)]);\n      }\n\n      this._handleChunkEnd();\n    };\n\n    Parser.prototype._handleGAMA = function(length) {\n      this.read(length, this._parseGAMA.bind(this));\n    };\n    Parser.prototype._parseGAMA = function(data) {\n\n      this._crc.write(data);\n      this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);\n\n      this._handleChunkEnd();\n    };\n\n    Parser.prototype._handleIDAT = function(length) {\n      this.read(-length, this._parseIDAT.bind(this, length));\n    };\n    Parser.prototype._parseIDAT = function(length, data) {\n\n      this._crc.write(data);\n\n      if (this._colorType === constants.COLORTYPE_PALETTE_COLOR && this._palette.length === 0) {\n        throw new Error('Expected palette not found');\n      }\n\n      this.inflateData(data);\n      var leftOverLength = length - data.length;\n\n      if (leftOverLength > 0) {\n        this._handleIDAT(leftOverLength);\n      }\n      else {\n        this._handleChunkEnd();\n      }\n    };\n\n    Parser.prototype._handleIEND = function(length) {\n      this.read(length, this._parseIEND.bind(this));\n    };\n    Parser.prototype._parseIEND = function(data) {\n\n      this._crc.write(data);\n\n      this._hasIEND = true;\n      this._handleChunkEnd();\n\n      if (this.finished) {\n        this.finished();\n      }\n    };\n    });\n\n    var pixelBppMap = {\n      1: { // L\n        0: 0,\n        1: 0,\n        2: 0,\n        3: 0xff\n      },\n      2: { // LA\n        0: 0,\n        1: 0,\n        2: 0,\n        3: 1\n      },\n      3: { // RGB\n        0: 0,\n        1: 1,\n        2: 2,\n        3: 0xff\n      },\n      4: { // RGBA\n        0: 0,\n        1: 1,\n        2: 2,\n        3: 3\n      }\n    };\n\n    function bitRetriever(data, depth) {\n\n      var leftOver = [];\n      var i = 0;\n\n      function split() {\n        if (i === data.length) {\n          throw new Error('Ran out of data');\n        }\n        var byte = data[i];\n        i++;\n        var byte8, byte7, byte6, byte5, byte4, byte3, byte2, byte1;\n        switch (depth) {\n          default:\n            throw new Error('unrecognised depth');\n          case 16:\n            byte2 = data[i];\n            i++;\n            leftOver.push(((byte << 8) + byte2));\n            break;\n          case 4:\n            byte2 = byte & 0x0f;\n            byte1 = byte >> 4;\n            leftOver.push(byte1, byte2);\n            break;\n          case 2:\n            byte4 = byte & 3;\n            byte3 = byte >> 2 & 3;\n            byte2 = byte >> 4 & 3;\n            byte1 = byte >> 6 & 3;\n            leftOver.push(byte1, byte2, byte3, byte4);\n            break;\n          case 1:\n            byte8 = byte & 1;\n            byte7 = byte >> 1 & 1;\n            byte6 = byte >> 2 & 1;\n            byte5 = byte >> 3 & 1;\n            byte4 = byte >> 4 & 1;\n            byte3 = byte >> 5 & 1;\n            byte2 = byte >> 6 & 1;\n            byte1 = byte >> 7 & 1;\n            leftOver.push(byte1, byte2, byte3, byte4, byte5, byte6, byte7, byte8);\n            break;\n        }\n      }\n\n      return {\n        get: function(count) {\n          while (leftOver.length < count) {\n            split();\n          }\n          var returner = leftOver.slice(0, count);\n          leftOver = leftOver.slice(count);\n          return returner;\n        },\n        resetAfterLine: function() {\n          leftOver.length = 0;\n        },\n        end: function() {\n          if (i !== data.length) {\n            throw new Error('extra data found');\n          }\n        }\n      };\n    }\n\n    function mapImage8Bit(image, pxData, getPxPos, bpp, data, rawPos) { // eslint-disable-line max-params\n      var imageWidth = image.width;\n      var imageHeight = image.height;\n      var imagePass = image.index;\n      for (var y = 0; y < imageHeight; y++) {\n        for (var x = 0; x < imageWidth; x++) {\n          var pxPos = getPxPos(x, y, imagePass);\n\n          for (var i = 0; i < 4; i++) {\n            var idx = pixelBppMap[bpp][i];\n            if (idx === 0xff) {\n              pxData[pxPos + i] = 0xff;\n            } else {\n              var dataPos = idx + rawPos;\n              if (dataPos === data.length) {\n                throw new Error('Ran out of data');\n              }\n              pxData[pxPos + i] = data[dataPos];\n            }\n          }\n          rawPos += bpp; //eslint-disable-line no-param-reassign\n        }\n      }\n      return rawPos;\n    }\n\n    function mapImageCustomBit(image, pxData, getPxPos, bpp, bits, maxBit) { // eslint-disable-line max-params\n      var imageWidth = image.width;\n      var imageHeight = image.height;\n      var imagePass = image.index;\n      for (var y = 0; y < imageHeight; y++) {\n        for (var x = 0; x < imageWidth; x++) {\n          var pixelData = bits.get(bpp);\n          var pxPos = getPxPos(x, y, imagePass);\n\n          for (var i = 0; i < 4; i++) {\n            var idx = pixelBppMap[bpp][i];\n            pxData[pxPos + i] = idx !== 0xff ? pixelData[idx] : maxBit;\n          }\n        }\n        bits.resetAfterLine();\n      }\n    }\n\n    var dataToBitMap = function(data, bitmapInfo) {\n\n      var width = bitmapInfo.width;\n      var height = bitmapInfo.height;\n      var depth = bitmapInfo.depth;\n      var bpp = bitmapInfo.bpp;\n      var interlace$1 = bitmapInfo.interlace;\n\n      if (depth !== 8) {\n        var bits = bitRetriever(data, depth);\n      }\n      var pxData;\n      if (depth <= 8) {\n        pxData = new Buffer(width * height * 4);\n      }\n      else {\n        pxData = new Uint16Array(width * height * 4);\n      }\n      var maxBit = Math.pow(2, depth) - 1;\n      var rawPos = 0;\n      var images;\n      var getPxPos;\n\n      if (interlace$1) {\n        images = interlace.getImagePasses(width, height);\n        getPxPos = interlace.getInterlaceIterator(width, height);\n      }\n      else {\n        var nonInterlacedPxPos = 0;\n        getPxPos = function() {\n          var returner = nonInterlacedPxPos;\n          nonInterlacedPxPos += 4;\n          return returner;\n        };\n        images = [{ width: width, height: height }];\n      }\n\n      for (var imageIndex = 0; imageIndex < images.length; imageIndex++) {\n        if (depth === 8) {\n          rawPos = mapImage8Bit(images[imageIndex], pxData, getPxPos, bpp, data, rawPos);\n        }\n        else {\n          mapImageCustomBit(images[imageIndex], pxData, getPxPos, bpp, bits, maxBit);\n        }\n      }\n      if (depth === 8) {\n        if (rawPos !== data.length) {\n          throw new Error('extra data found');\n        }\n      }\n      else {\n        bits.end();\n      }\n\n      return pxData;\n    };\n\n    var bitmapper = {\n    \tdataToBitMap: dataToBitMap\n    };\n\n    function dePalette(indata, outdata, width, height, palette) {\n      var pxPos = 0;\n      // use values from palette\n      for (var y = 0; y < height; y++) {\n        for (var x = 0; x < width; x++) {\n          var color = palette[indata[pxPos]];\n\n          if (!color) {\n            throw new Error('index ' + indata[pxPos] + ' not in palette');\n          }\n\n          for (var i = 0; i < 4; i++) {\n            outdata[pxPos + i] = color[i];\n          }\n          pxPos += 4;\n        }\n      }\n    }\n\n    function replaceTransparentColor(indata, outdata, width, height, transColor) {\n      var pxPos = 0;\n      for (var y = 0; y < height; y++) {\n        for (var x = 0; x < width; x++) {\n          var makeTrans = false;\n\n          if (transColor.length === 1) {\n            if (transColor[0] === indata[pxPos]) {\n              makeTrans = true;\n            }\n          }\n          else if (transColor[0] === indata[pxPos] && transColor[1] === indata[pxPos + 1] && transColor[2] === indata[pxPos + 2]) {\n            makeTrans = true;\n          }\n          if (makeTrans) {\n            for (var i = 0; i < 4; i++) {\n              outdata[pxPos + i] = 0;\n            }\n          }\n          pxPos += 4;\n        }\n      }\n    }\n\n    function scaleDepth(indata, outdata, width, height, depth) {\n      var maxOutSample = 255;\n      var maxInSample = Math.pow(2, depth) - 1;\n      var pxPos = 0;\n\n      for (var y = 0; y < height; y++) {\n        for (var x = 0; x < width; x++) {\n          for (var i = 0; i < 4; i++) {\n            outdata[pxPos + i] = Math.floor((indata[pxPos + i] * maxOutSample) / maxInSample + 0.5);\n          }\n          pxPos += 4;\n        }\n      }\n    }\n\n    var formatNormaliser = function(indata, imageData) {\n\n      var depth = imageData.depth;\n      var width = imageData.width;\n      var height = imageData.height;\n      var colorType = imageData.colorType;\n      var transColor = imageData.transColor;\n      var palette = imageData.palette;\n\n      var outdata = indata; // only different for 16 bits\n\n      if (colorType === 3) { // paletted\n        dePalette(indata, outdata, width, height, palette);\n      }\n      else {\n        if (transColor) {\n          replaceTransparentColor(indata, outdata, width, height, transColor);\n        }\n        // if it needs scaling\n        if (depth !== 8) {\n          // if we need to change the buffer size\n          if (depth === 16) {\n            outdata = new Buffer(width * height * 4);\n          }\n          scaleDepth(indata, outdata, width, height, depth);\n        }\n      }\n      return outdata;\n    };\n\n    var parserAsync = createCommonjsModule(function (module) {\n\n\n\n\n\n\n\n\n\n    var ParserAsync = module.exports = function(options) {\n      chunkstream.call(this);\n\n      this._parser = new parser(options, {\n        read: this.read.bind(this),\n        error: this._handleError.bind(this),\n        metadata: this._handleMetaData.bind(this),\n        gamma: this.emit.bind(this, 'gamma'),\n        palette: this._handlePalette.bind(this),\n        transColor: this._handleTransColor.bind(this),\n        finished: this._finished.bind(this),\n        inflateData: this._inflateData.bind(this)\n      });\n      this._options = options;\n      this.writable = true;\n\n      this._parser.start();\n    };\n    util__default['default'].inherits(ParserAsync, chunkstream);\n\n\n    ParserAsync.prototype._handleError = function(err) {\n\n      this.emit('error', err);\n\n      this.writable = false;\n\n      this.destroy();\n\n      if (this._inflate && this._inflate.destroy) {\n        this._inflate.destroy();\n      }\n\n      this.errord = true;\n    };\n\n    ParserAsync.prototype._inflateData = function(data) {\n      if (!this._inflate) {\n        if (this._bitmapInfo.interlace) {\n          this._inflate = zlib__default['default'].createInflate();\n\n          this._inflate.on('error', this.emit.bind(this, 'error'));\n          this._filter.on('complete', this._complete.bind(this));\n\n          this._inflate.pipe(this._filter);\n        } else {\n          var rowSize = ((this._bitmapInfo.width * this._bitmapInfo.bpp * this._bitmapInfo.depth + 7) >> 3) + 1;\n          var imageSize = rowSize * this._bitmapInfo.height;\n          var chunkSize = Math.max(imageSize, zlib__default['default'].Z_MIN_CHUNK);\n          \n          this._inflate = zlib__default['default'].createInflate({ chunkSize: chunkSize });\n          var leftToInflate = imageSize;\n\n          var emitError = this.emit.bind(this, 'error');\n          this._inflate.on('error', function(err) {\n            if (!leftToInflate) {\n              return;\n            }\n\n            emitError(err);\n          });\n          this._filter.on('complete', this._complete.bind(this));\n\n          var filterWrite = this._filter.write.bind(this._filter);\n          this._inflate.on('data', function(chunk) {\n            if (!leftToInflate) {\n              return;\n            }\n\n            if (chunk.length > leftToInflate) {\n              chunk = chunk.slice(0, leftToInflate);\n            }\n\n            leftToInflate -= chunk.length;\n\n            filterWrite(chunk);\n          });\n\n          this._inflate.on('end', this._filter.end.bind(this._filter));\n        }\n      }\n      this._inflate.write(data);\n    };\n\n    ParserAsync.prototype._handleMetaData = function(metaData) {\n\n      this.emit('metadata', metaData);\n\n      this._bitmapInfo = Object.create(metaData);\n\n      this._filter = new filterParseAsync(this._bitmapInfo);\n    };\n\n    ParserAsync.prototype._handleTransColor = function(transColor) {\n      this._bitmapInfo.transColor = transColor;\n    };\n\n    ParserAsync.prototype._handlePalette = function(palette) {\n      this._bitmapInfo.palette = palette;\n    };\n\n\n    ParserAsync.prototype._finished = function() {\n      if (this.errord) {\n        return;\n      }\n\n      if (!this._inflate) {\n        this.emit('error', 'No Inflate block');\n      }\n      else {\n        // no more data to inflate\n        this._inflate.end();\n      }\n      this.destroySoon();\n    };\n\n    ParserAsync.prototype._complete = function(filteredData) {\n\n      if (this.errord) {\n        return;\n      }\n\n      try {\n        var bitmapData = bitmapper.dataToBitMap(filteredData, this._bitmapInfo);\n\n        var normalisedBitmapData = formatNormaliser(bitmapData, this._bitmapInfo);\n        bitmapData = null;\n      }\n      catch (ex) {\n        this._handleError(ex);\n        return;\n      }\n\n      this.emit('parsed', normalisedBitmapData);\n    };\n    });\n\n    var bitpacker = function(dataIn, width, height, options) {\n      var outHasAlpha = [constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(options.colorType) !== -1;\n      if (options.colorType === options.inputColorType) {\n        var bigEndian = (function() {\n          var buffer = new ArrayBuffer(2);\n          new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n          // Int16Array uses the platform's endianness.\n          return new Int16Array(buffer)[0] !== 256;\n        })();\n        // If no need to convert to grayscale and alpha is present/absent in both, take a fast route\n         if (options.bitDepth === 8 || (options.bitDepth === 16 && bigEndian)){\n             return dataIn;\n        }\n      }\n\n      // map to a UInt16 array if data is 16bit, fix endianness below\n      var data = options.bitDepth !== 16 ? dataIn : new Uint16Array(dataIn.buffer);\n\n      var maxValue = 255;\n      var inBpp = constants.COLORTYPE_TO_BPP_MAP[options.inputColorType];\n      if (inBpp == 4 && !options.inputHasAlpha) inBpp = 3;\n      var outBpp = constants.COLORTYPE_TO_BPP_MAP[options.colorType];\n      if (options.bitDepth === 16) {\n        maxValue = 65535;\n        outBpp *= 2;\n      }\n      var outData = new Buffer(width * height * outBpp);\n\n      var inIndex = 0;\n      var outIndex = 0;\n\n      var bgColor = options.bgColor || {};\n      if (bgColor.red === undefined) {\n        bgColor.red = maxValue;\n      }\n      if (bgColor.green === undefined) {\n        bgColor.green = maxValue;\n      }\n      if (bgColor.blue === undefined) {\n        bgColor.blue = maxValue;\n      }\n\n      function getRGBA(data, inIndex) {\n        var red, green, blue, alpha = maxValue;\n        switch (options.inputColorType) {\n          case constants.COLORTYPE_COLOR_ALPHA:\n            alpha = data[inIndex + 3];\n            red = data[inIndex];\n            green = data[inIndex+1];\n            blue = data[inIndex+2];\n            break;\n          case constants.COLORTYPE_COLOR:\n            red = data[inIndex];\n            green = data[inIndex+1];\n            blue = data[inIndex+2];\n            break;\n          case constants.COLORTYPE_ALPHA:\n            alpha = data[inIndex + 1];\n            red = data[inIndex];\n            green = red;\n            blue = red;\n            break;\n          case constants.COLORTYPE_GRAYSCALE:\n            red = data[inIndex];\n            green = red;\n            blue = red;\n            break;\n          default:\n            throw new Error('input color type:' + options.inputColorType + ' is not supported at present');\n        }\n\n        if (options.inputHasAlpha) {\n          if (!outHasAlpha) {\n            alpha /= maxValue;\n            red = Math.min(Math.max(Math.round((1 - alpha) * bgColor.red + alpha * red), 0), maxValue);\n            green = Math.min(Math.max(Math.round((1 - alpha) * bgColor.green + alpha * green), 0), maxValue);\n            blue = Math.min(Math.max(Math.round((1 - alpha) * bgColor.blue + alpha * blue), 0), maxValue);\n          }\n        }\n        return {red: red, green: green, blue: blue, alpha: alpha};\n      }\n\n      for (var y = 0; y < height; y++) {\n        for (var x = 0; x < width; x++) {\n          var rgba = getRGBA(data, inIndex);\n\n          switch (options.colorType) {\n            case constants.COLORTYPE_COLOR_ALPHA:\n            case constants.COLORTYPE_COLOR:\n              if (options.bitDepth === 8) {\n                outData[outIndex] = rgba.red;\n                outData[outIndex + 1] = rgba.green;\n                outData[outIndex + 2] = rgba.blue;\n                if (outHasAlpha) {\n                  outData[outIndex + 3] = rgba.alpha;\n                }\n              } else {\n                outData.writeUInt16BE(rgba.red, outIndex);\n                outData.writeUInt16BE(rgba.green, outIndex + 2);\n                outData.writeUInt16BE(rgba.blue, outIndex + 4);\n                if (outHasAlpha) {\n                  outData.writeUInt16BE(rgba.alpha, outIndex + 6);\n                }\n              }\n              break;\n            case constants.COLORTYPE_ALPHA:\n            case constants.COLORTYPE_GRAYSCALE:\n              // Convert to grayscale and alpha\n              var grayscale = (rgba.red + rgba.green + rgba.blue) / 3;\n              if (options.bitDepth === 8) {\n                outData[outIndex] = grayscale;\n                if (outHasAlpha) {\n                  outData[outIndex + 1] = rgba.alpha;\n                }\n              } else {\n                outData.writeUInt16BE(grayscale, outIndex);\n                if (outHasAlpha) {\n                  outData.writeUInt16BE(rgba.alpha, outIndex + 2);\n                }\n              }\n              break;\n          }\n\n          inIndex += inBpp;\n          outIndex += outBpp;\n        }\n      }\n\n      return outData;\n    };\n\n    function filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\n      pxData.copy(rawData, rawPos, pxPos, pxPos + byteWidth);\n    }\n\n    function filterSumNone(pxData, pxPos, byteWidth) {\n\n      var sum = 0;\n      var length = pxPos + byteWidth;\n\n      for (var i = pxPos; i < length; i++) {\n        sum += Math.abs(pxData[i]);\n      }\n      return sum;\n    }\n\n    function filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n      for (var x = 0; x < byteWidth; x++) {\n\n        var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n        var val = pxData[pxPos + x] - left;\n\n        rawData[rawPos + x] = val;\n      }\n    }\n\n    function filterSumSub(pxData, pxPos, byteWidth, bpp) {\n\n      var sum = 0;\n      for (var x = 0; x < byteWidth; x++) {\n\n        var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n        var val = pxData[pxPos + x] - left;\n\n        sum += Math.abs(val);\n      }\n\n      return sum;\n    }\n\n    function filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\n\n      for (var x = 0; x < byteWidth; x++) {\n\n        var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n        var val = pxData[pxPos + x] - up;\n\n        rawData[rawPos + x] = val;\n      }\n    }\n\n    function filterSumUp(pxData, pxPos, byteWidth) {\n\n      var sum = 0;\n      var length = pxPos + byteWidth;\n      for (var x = pxPos; x < length; x++) {\n\n        var up = pxPos > 0 ? pxData[x - byteWidth] : 0;\n        var val = pxData[x] - up;\n\n        sum += Math.abs(val);\n      }\n\n      return sum;\n    }\n\n    function filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n      for (var x = 0; x < byteWidth; x++) {\n\n        var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n        var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n        var val = pxData[pxPos + x] - ((left + up) >> 1);\n\n        rawData[rawPos + x] = val;\n      }\n    }\n\n    function filterSumAvg(pxData, pxPos, byteWidth, bpp) {\n\n      var sum = 0;\n      for (var x = 0; x < byteWidth; x++) {\n\n        var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n        var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n        var val = pxData[pxPos + x] - ((left + up) >> 1);\n\n        sum += Math.abs(val);\n      }\n\n      return sum;\n    }\n\n    function filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n      for (var x = 0; x < byteWidth; x++) {\n\n        var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n        var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n        var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n        var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n        rawData[rawPos + x] = val;\n      }\n    }\n\n    function filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\n      var sum = 0;\n      for (var x = 0; x < byteWidth; x++) {\n\n        var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n        var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n        var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n        var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n        sum += Math.abs(val);\n      }\n\n      return sum;\n    }\n\n    var filters = {\n      0: filterNone,\n      1: filterSub,\n      2: filterUp,\n      3: filterAvg,\n      4: filterPaeth\n    };\n\n    var filterSums = {\n      0: filterSumNone,\n      1: filterSumSub,\n      2: filterSumUp,\n      3: filterSumAvg,\n      4: filterSumPaeth\n    };\n\n    var filterPack = function(pxData, width, height, options, bpp) {\n\n      var filterTypes;\n      if (!('filterType' in options) || options.filterType === -1) {\n        filterTypes = [0, 1, 2, 3, 4];\n      }\n      else if (typeof options.filterType === 'number') {\n        filterTypes = [options.filterType];\n      }\n      else {\n        throw new Error('unrecognised filter types');\n      }\n\n      if (options.bitDepth === 16) bpp *= 2;\n      var byteWidth = width * bpp;\n      var rawPos = 0;\n      var pxPos = 0;\n      var rawData = new Buffer((byteWidth + 1) * height);\n\n      var sel = filterTypes[0];\n\n      for (var y = 0; y < height; y++) {\n\n        if (filterTypes.length > 1) {\n          // find best filter for this line (with lowest sum of values)\n          var min = Infinity;\n\n          for (var i = 0; i < filterTypes.length; i++) {\n            var sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\n            if (sum < min) {\n              sel = filterTypes[i];\n              min = sum;\n            }\n          }\n        }\n\n        rawData[rawPos] = sel;\n        rawPos++;\n        filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\n        rawPos += byteWidth;\n        pxPos += byteWidth;\n      }\n      return rawData;\n    };\n\n    var packer = createCommonjsModule(function (module) {\n\n\n\n\n\n\n\n    var Packer = module.exports = function(options) {\n      this._options = options;\n\n      options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;\n      options.deflateLevel = options.deflateLevel != null ? options.deflateLevel : 9;\n      options.deflateStrategy = options.deflateStrategy != null ? options.deflateStrategy : 3;\n      options.inputHasAlpha = options.inputHasAlpha != null ? options.inputHasAlpha : true;\n      options.deflateFactory = options.deflateFactory || zlib__default['default'].createDeflate;\n      options.bitDepth = options.bitDepth || 8;\n      // This is outputColorType\n      options.colorType = (typeof options.colorType === 'number') ? options.colorType : constants.COLORTYPE_COLOR_ALPHA;\n      options.inputColorType = (typeof options.inputColorType === 'number') ? options.inputColorType : constants.COLORTYPE_COLOR_ALPHA;\n\n      if ([\n        constants.COLORTYPE_GRAYSCALE,\n        constants.COLORTYPE_COLOR,\n        constants.COLORTYPE_COLOR_ALPHA,\n        constants.COLORTYPE_ALPHA\n      ].indexOf(options.colorType) === -1) {\n        throw new Error('option color type:' + options.colorType + ' is not supported at present');\n      }\n      if ([\n        constants.COLORTYPE_GRAYSCALE,\n        constants.COLORTYPE_COLOR,\n        constants.COLORTYPE_COLOR_ALPHA,\n        constants.COLORTYPE_ALPHA\n      ].indexOf(options.inputColorType) === -1) {\n        throw new Error('option input color type:' + options.inputColorType + ' is not supported at present');\n      }\n      if (options.bitDepth !== 8 && options.bitDepth !== 16) {\n        throw new Error('option bit depth:' + options.bitDepth + ' is not supported at present');\n      }\n    };\n\n    Packer.prototype.getDeflateOptions = function() {\n      return {\n        chunkSize: this._options.deflateChunkSize,\n        level: this._options.deflateLevel,\n        strategy: this._options.deflateStrategy\n      };\n    };\n\n    Packer.prototype.createDeflate = function() {\n      return this._options.deflateFactory(this.getDeflateOptions());\n    };\n\n    Packer.prototype.filterData = function(data, width, height) {\n      // convert to correct format for filtering (e.g. right bpp and bit depth)\n      var packedData = bitpacker(data, width, height, this._options);\n\n      // filter pixel data\n      var bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\n      var filteredData = filterPack(packedData, width, height, this._options, bpp);\n      return filteredData;\n    };\n\n    Packer.prototype._packChunk = function(type, data) {\n\n      var len = (data ? data.length : 0);\n      var buf = new Buffer(len + 12);\n\n      buf.writeUInt32BE(len, 0);\n      buf.writeUInt32BE(type, 4);\n\n      if (data) {\n        data.copy(buf, 8);\n      }\n\n      buf.writeInt32BE(crc.crc32(buf.slice(4, buf.length - 4)), buf.length - 4);\n      return buf;\n    };\n\n    Packer.prototype.packGAMA = function(gamma) {\n      var buf = new Buffer(4);\n      buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);\n      return this._packChunk(constants.TYPE_gAMA, buf);\n    };\n\n    Packer.prototype.packIHDR = function(width, height) {\n\n      var buf = new Buffer(13);\n      buf.writeUInt32BE(width, 0);\n      buf.writeUInt32BE(height, 4);\n      buf[8] = this._options.bitDepth; // Bit depth\n      buf[9] = this._options.colorType; // colorType\n      buf[10] = 0; // compression\n      buf[11] = 0; // filter\n      buf[12] = 0; // interlace\n\n      return this._packChunk(constants.TYPE_IHDR, buf);\n    };\n\n    Packer.prototype.packIDAT = function(data) {\n      return this._packChunk(constants.TYPE_IDAT, data);\n    };\n\n    Packer.prototype.packIEND = function() {\n      return this._packChunk(constants.TYPE_IEND, null);\n    };\n    });\n\n    var packerAsync = createCommonjsModule(function (module) {\n\n\n\n\n\n\n    var PackerAsync = module.exports = function(opt) {\n      Stream__default['default'].call(this);\n\n      var options = opt || {};\n\n      this._packer = new packer(options);\n      this._deflate = this._packer.createDeflate();\n\n      this.readable = true;\n    };\n    util__default['default'].inherits(PackerAsync, Stream__default['default']);\n\n\n    PackerAsync.prototype.pack = function(data, width, height, gamma) {\n      // Signature\n      this.emit('data', new Buffer(constants.PNG_SIGNATURE));\n      this.emit('data', this._packer.packIHDR(width, height));\n\n      if (gamma) {\n        this.emit('data', this._packer.packGAMA(gamma));\n      }\n\n      var filteredData = this._packer.filterData(data, width, height);\n\n      // compress it\n      this._deflate.on('error', this.emit.bind(this, 'error'));\n\n      this._deflate.on('data', function(compressedData) {\n        this.emit('data', this._packer.packIDAT(compressedData));\n      }.bind(this));\n\n      this._deflate.on('end', function() {\n        this.emit('data', this._packer.packIEND());\n        this.emit('end');\n      }.bind(this));\n\n      this._deflate.end(filteredData);\n    };\n    });\n\n    var syncInflate = createCommonjsModule(function (module, exports) {\n\n    var assert = require$$0__default$1['default'].ok;\n\n\n\n    var kMaxLength = require$$1__default['default'].kMaxLength;\n\n    function Inflate(opts) {\n      if (!(this instanceof Inflate)) {\n        return new Inflate(opts);\n      }\n\n      if (opts && opts.chunkSize < zlib__default['default'].Z_MIN_CHUNK) {\n        opts.chunkSize = zlib__default['default'].Z_MIN_CHUNK;\n      }\n\n      zlib__default['default'].Inflate.call(this, opts);\n\n      if (opts && opts.maxLength != null) {\n        this._maxLength = opts.maxLength;\n      }\n    }\n\n    function createInflate(opts) {\n      return new Inflate(opts);\n    }\n\n    function _close(engine, callback) {\n      if (callback) {\n        process.nextTick(callback);\n      }\n\n      // Caller may invoke .close after a zlib error (which will null _handle).\n      if (!engine._handle) {\n        return;\n      }\n\n      engine._handle.close();\n      engine._handle = null;\n    }\n\n    Inflate.prototype._processChunk = function(chunk, flushFlag, asyncCb) {\n      if (typeof asyncCb === 'function') {\n        return zlib__default['default'].Inflate._processChunk.call(this, chunk, flushFlag, asyncCb);\n      }\n\n      var self = this;\n\n      var availInBefore = chunk && chunk.length;\n      var availOutBefore = this._chunkSize - this._offset;\n      var leftToInflate = this._maxLength;\n      var inOff = 0;\n\n      var buffers = [];\n      var nread = 0;\n\n      var error;\n      this.on('error', function(err) {\n        error = err;\n      });\n\n      function handleChunk(availInAfter, availOutAfter) {\n        if (self._hadError) {\n          return;\n        }\n\n        var have = availOutBefore - availOutAfter;\n        assert(have >= 0, 'have should not go down');\n\n        if (have > 0) {\n          var out = self._buffer.slice(self._offset, self._offset + have);\n          self._offset += have;\n\n          if (out.length > leftToInflate) {\n            out = out.slice(0, leftToInflate);\n          }\n\n          buffers.push(out);\n          nread += out.length;\n          leftToInflate -= out.length;\n\n          if (leftToInflate === 0) {\n            return false;\n          }\n        }\n\n        if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n          availOutBefore = self._chunkSize;\n          self._offset = 0;\n          self._buffer = Buffer.allocUnsafe(self._chunkSize);\n        }\n\n        if (availOutAfter === 0) {\n          inOff += (availInBefore - availInAfter);\n          availInBefore = availInAfter;\n\n          return true;\n        }\n\n        return false;\n      }\n\n      assert(this._handle, 'zlib binding closed');\n      do {\n        var res = this._handle.writeSync(flushFlag,\n                                         chunk, // in\n                                         inOff, // in_off\n                                         availInBefore, // in_len\n                                         this._buffer, // out\n                                         this._offset, //out_off\n                                         availOutBefore); // out_len\n      } while (!this._hadError && handleChunk(res[0], res[1]));\n\n      if (this._hadError) {\n        throw error;\n      }\n\n      if (nread >= kMaxLength) {\n        _close(this);\n        throw new RangeError('Cannot create final Buffer. It would be larger than 0x' + kMaxLength.toString(16) + ' bytes');\n      }\n\n      var buf = Buffer.concat(buffers, nread);\n      _close(this);\n\n      return buf;\n    };\n\n    util__default['default'].inherits(Inflate, zlib__default['default'].Inflate);\n\n    function zlibBufferSync(engine, buffer) {\n      if (typeof buffer === 'string') {\n        buffer = Buffer.from(buffer);\n      }\n      if (!(buffer instanceof Buffer)) {\n        throw new TypeError('Not a string or buffer');\n      }\n\n      var flushFlag = engine._finishFlushFlag;\n      if (flushFlag == null) {\n        flushFlag = zlib__default['default'].Z_FINISH;\n      }\n\n      return engine._processChunk(buffer, flushFlag);\n    }\n\n    function inflateSync(buffer, opts) {\n      return zlibBufferSync(new Inflate(opts), buffer);\n    }\n\n    module.exports = exports = inflateSync;\n    exports.Inflate = Inflate;\n    exports.createInflate = createInflate;\n    exports.inflateSync = inflateSync;\n    });\n\n    var syncReader = createCommonjsModule(function (module) {\n\n    var SyncReader = module.exports = function(buffer) {\n\n      this._buffer = buffer;\n      this._reads = [];\n    };\n\n    SyncReader.prototype.read = function(length, callback) {\n\n      this._reads.push({\n        length: Math.abs(length),  // if length < 0 then at most this length\n        allowLess: length < 0,\n        func: callback\n      });\n    };\n\n    SyncReader.prototype.process = function() {\n\n      // as long as there is any data and read requests\n      while (this._reads.length > 0 && this._buffer.length) {\n\n        var read = this._reads[0];\n\n        if (this._buffer.length && (this._buffer.length >= read.length || read.allowLess)) {\n\n          // ok there is any data so that we can satisfy this request\n          this._reads.shift(); // == read\n\n          var buf = this._buffer;\n\n          this._buffer = buf.slice(read.length);\n\n          read.func.call(this, buf.slice(0, read.length));\n\n        }\n        else {\n          break;\n        }\n\n      }\n\n      if (this._reads.length > 0) {\n        return new Error('There are some read requests waitng on finished stream');\n      }\n\n      if (this._buffer.length > 0) {\n        return new Error('unrecognised content at end of stream');\n      }\n\n    };\n    });\n\n    var process$1 = function(inBuffer, bitmapInfo) {\n\n      var outBuffers = [];\n      var reader = new syncReader(inBuffer);\n      var filter = new filterParse(bitmapInfo, {\n        read: reader.read.bind(reader),\n        write: function(bufferPart) {\n          outBuffers.push(bufferPart);\n        },\n        complete: function() {\n        }\n      });\n\n      filter.start();\n      reader.process();\n\n      return Buffer.concat(outBuffers);\n    };\n\n    var filterParseSync = {\n    \tprocess: process$1\n    };\n\n    var hasSyncZlib$1 = true;\n\n\n    if (!zlib__default['default'].deflateSync) {\n      hasSyncZlib$1 = false;\n    }\n\n\n\n\n\n\n\n    var parserSync = function(buffer, options) {\n\n      if (!hasSyncZlib$1) {\n        throw new Error('To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0');\n      }\n\n      var err;\n      function handleError(_err_) {\n        err = _err_;\n      }\n\n      var metaData;\n      function handleMetaData(_metaData_) {\n        metaData = _metaData_;\n      }\n\n      function handleTransColor(transColor) {\n        metaData.transColor = transColor;\n      }\n\n      function handlePalette(palette) {\n        metaData.palette = palette;\n      }\n\n      var gamma;\n      function handleGamma(_gamma_) {\n        gamma = _gamma_;\n      }\n\n      var inflateDataList = [];\n      function handleInflateData(inflatedData) {\n        inflateDataList.push(inflatedData);\n      }\n\n      var reader = new syncReader(buffer);\n\n      var parser$1 = new parser(options, {\n        read: reader.read.bind(reader),\n        error: handleError,\n        metadata: handleMetaData,\n        gamma: handleGamma,\n        palette: handlePalette,\n        transColor: handleTransColor,\n        inflateData: handleInflateData\n      });\n\n      parser$1.start();\n      reader.process();\n\n      if (err) {\n        throw err;\n      }\n\n      //join together the inflate datas\n      var inflateData = Buffer.concat(inflateDataList);\n      inflateDataList.length = 0;\n\n      var inflatedData;\n      if (metaData.interlace) {\n        inflatedData = zlib__default['default'].inflateSync(inflateData);\n      } else {\n        var rowSize = ((metaData.width * metaData.bpp * metaData.depth + 7) >> 3) + 1;\n        var imageSize = rowSize * metaData.height;\n        inflatedData = syncInflate(inflateData, { chunkSize: imageSize, maxLength: imageSize });\n      }\n      inflateData = null;\n\n      if (!inflatedData || !inflatedData.length) {\n        throw new Error('bad png - invalid inflate data response');\n      }\n\n      var unfilteredData = filterParseSync.process(inflatedData, metaData);\n      inflateData = null;\n\n      var bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);\n      unfilteredData = null;\n\n      var normalisedBitmapData = formatNormaliser(bitmapData, metaData);\n\n      metaData.data = normalisedBitmapData;\n      metaData.gamma = gamma || 0;\n\n      return metaData;\n    };\n\n    var hasSyncZlib = true;\n\n    if (!zlib__default['default'].deflateSync) {\n      hasSyncZlib = false;\n    }\n\n\n\n    var packerSync = function(metaData, opt) {\n\n      if (!hasSyncZlib) {\n        throw new Error('To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0');\n      }\n\n      var options = opt || {};\n\n      var packer$1 = new packer(options);\n\n      var chunks = [];\n\n      // Signature\n      chunks.push(new Buffer(constants.PNG_SIGNATURE));\n\n      // Header\n      chunks.push(packer$1.packIHDR(metaData.width, metaData.height));\n\n      if (metaData.gamma) {\n        chunks.push(packer$1.packGAMA(metaData.gamma));\n      }\n\n      var filteredData = packer$1.filterData(metaData.data, metaData.width, metaData.height);\n\n      // compress it\n      var compressedData = zlib__default['default'].deflateSync(filteredData, packer$1.getDeflateOptions());\n      filteredData = null;\n\n      if (!compressedData || !compressedData.length) {\n        throw new Error('bad png - invalid compressed data response');\n      }\n      chunks.push(packer$1.packIDAT(compressedData));\n\n      // End\n      chunks.push(packer$1.packIEND());\n\n      return Buffer.concat(chunks);\n    };\n\n    var read = function(buffer, options) {\n\n      return parserSync(buffer, options || {});\n    };\n\n    var write = function(png, options) {\n\n      return packerSync(png, options);\n    };\n\n    var pngSync = {\n    \tread: read,\n    \twrite: write\n    };\n\n    var png = createCommonjsModule(function (module, exports) {\n\n\n\n\n\n\n\n\n    var PNG = exports.PNG = function(options) {\n      Stream__default['default'].call(this);\n\n      options = options || {}; // eslint-disable-line no-param-reassign\n\n      // coerce pixel dimensions to integers (also coerces undefined -> 0):\n      this.width = options.width | 0;\n      this.height = options.height | 0;\n\n      this.data = this.width > 0 && this.height > 0 ?\n        new Buffer(4 * this.width * this.height) : null;\n\n      if (options.fill && this.data) {\n        this.data.fill(0);\n      }\n\n      this.gamma = 0;\n      this.readable = this.writable = true;\n\n      this._parser = new parserAsync(options);\n\n      this._parser.on('error', this.emit.bind(this, 'error'));\n      this._parser.on('close', this._handleClose.bind(this));\n      this._parser.on('metadata', this._metadata.bind(this));\n      this._parser.on('gamma', this._gamma.bind(this));\n      this._parser.on('parsed', function(data) {\n        this.data = data;\n        this.emit('parsed', data);\n      }.bind(this));\n\n      this._packer = new packerAsync(options);\n      this._packer.on('data', this.emit.bind(this, 'data'));\n      this._packer.on('end', this.emit.bind(this, 'end'));\n      this._parser.on('close', this._handleClose.bind(this));\n      this._packer.on('error', this.emit.bind(this, 'error'));\n\n    };\n    util__default['default'].inherits(PNG, Stream__default['default']);\n\n    PNG.sync = pngSync;\n\n    PNG.prototype.pack = function() {\n\n      if (!this.data || !this.data.length) {\n        this.emit('error', 'No data provided');\n        return this;\n      }\n\n      process.nextTick(function() {\n        this._packer.pack(this.data, this.width, this.height, this.gamma);\n      }.bind(this));\n\n      return this;\n    };\n\n\n    PNG.prototype.parse = function(data, callback) {\n\n      if (callback) {\n        var onParsed, onError;\n\n        onParsed = function(parsedData) {\n          this.removeListener('error', onError);\n\n          this.data = parsedData;\n          callback(null, this);\n        }.bind(this);\n\n        onError = function(err) {\n          this.removeListener('parsed', onParsed);\n\n          callback(err, null);\n        }.bind(this);\n\n        this.once('parsed', onParsed);\n        this.once('error', onError);\n      }\n\n      this.end(data);\n      return this;\n    };\n\n    PNG.prototype.write = function(data) {\n      this._parser.write(data);\n      return true;\n    };\n\n    PNG.prototype.end = function(data) {\n      this._parser.end(data);\n    };\n\n    PNG.prototype._metadata = function(metadata) {\n      this.width = metadata.width;\n      this.height = metadata.height;\n\n      this.emit('metadata', metadata);\n    };\n\n    PNG.prototype._gamma = function(gamma) {\n      this.gamma = gamma;\n    };\n\n    PNG.prototype._handleClose = function() {\n      if (!this._parser.writable && !this._packer.readable) {\n        this.emit('close');\n      }\n    };\n\n\n    PNG.bitblt = function(src, dst, srcX, srcY, width, height, deltaX, deltaY) { // eslint-disable-line max-params\n      // coerce pixel dimensions to integers (also coerces undefined -> 0):\n      /* eslint-disable no-param-reassign */\n      srcX |= 0;\n      srcY |= 0;\n      width |= 0;\n      height |= 0;\n      deltaX |= 0;\n      deltaY |= 0;\n      /* eslint-enable no-param-reassign */\n\n      if (srcX > src.width || srcY > src.height || srcX + width > src.width || srcY + height > src.height) {\n        throw new Error('bitblt reading outside image');\n      }\n\n      if (deltaX > dst.width || deltaY > dst.height || deltaX + width > dst.width || deltaY + height > dst.height) {\n        throw new Error('bitblt writing outside image');\n      }\n\n      for (var y = 0; y < height; y++) {\n        src.data.copy(dst.data,\n          ((deltaY + y) * dst.width + deltaX) << 2,\n          ((srcY + y) * src.width + srcX) << 2,\n          ((srcY + y) * src.width + srcX + width) << 2\n        );\n      }\n    };\n\n\n    PNG.prototype.bitblt = function(dst, srcX, srcY, width, height, deltaX, deltaY) { // eslint-disable-line max-params\n\n      PNG.bitblt(this, dst, srcX, srcY, width, height, deltaX, deltaY);\n      return this;\n    };\n\n    PNG.adjustGamma = function(src) {\n      if (src.gamma) {\n        for (var y = 0; y < src.height; y++) {\n          for (var x = 0; x < src.width; x++) {\n            var idx = (src.width * y + x) << 2;\n\n            for (var i = 0; i < 3; i++) {\n              var sample = src.data[idx + i] / 255;\n              sample = Math.pow(sample, 1 / 2.2 / src.gamma);\n              src.data[idx + i] = Math.round(sample * 255);\n            }\n          }\n        }\n        src.gamma = 0;\n      }\n    };\n\n    PNG.prototype.adjustGamma = function() {\n      PNG.adjustGamma(this);\n    };\n    });\n\n    /*\n      Copyright (c) 2008, Adobe Systems Incorporated\n      All rights reserved.\n\n      Redistribution and use in source and binary forms, with or without \n      modification, are permitted provided that the following conditions are\n      met:\n\n      * Redistributions of source code must retain the above copyright notice, \n        this list of conditions and the following disclaimer.\n      \n      * Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the \n        documentation and/or other materials provided with the distribution.\n      \n      * Neither the name of Adobe Systems Incorporated nor the names of its \n        contributors may be used to endorse or promote products derived from \n        this software without specific prior written permission.\n\n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n      IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n      THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n      PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \n      CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n      EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n      PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n      LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n      SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n    */\n\n    var encoder = createCommonjsModule(function (module) {\n\n    function JPEGEncoder(quality) {\n    \tvar ffloor = Math.floor;\n    \tvar YTable = new Array(64);\n    \tvar UVTable = new Array(64);\n    \tvar fdtbl_Y = new Array(64);\n    \tvar fdtbl_UV = new Array(64);\n    \tvar YDC_HT;\n    \tvar UVDC_HT;\n    \tvar YAC_HT;\n    \tvar UVAC_HT;\n    \t\n    \tvar bitcode = new Array(65535);\n    \tvar category = new Array(65535);\n    \tvar outputfDCTQuant = new Array(64);\n    \tvar DU = new Array(64);\n    \tvar byteout = [];\n    \tvar bytenew = 0;\n    \tvar bytepos = 7;\n    \t\n    \tvar YDU = new Array(64);\n    \tvar UDU = new Array(64);\n    \tvar VDU = new Array(64);\n    \tvar clt = new Array(256);\n    \tvar RGB_YUV_TABLE = new Array(2048);\n    \tvar currentQuality;\n    \t\n    \tvar ZigZag = [\n    \t\t\t 0, 1, 5, 6,14,15,27,28,\n    \t\t\t 2, 4, 7,13,16,26,29,42,\n    \t\t\t 3, 8,12,17,25,30,41,43,\n    \t\t\t 9,11,18,24,31,40,44,53,\n    \t\t\t10,19,23,32,39,45,52,54,\n    \t\t\t20,22,33,38,46,51,55,60,\n    \t\t\t21,34,37,47,50,56,59,61,\n    \t\t\t35,36,48,49,57,58,62,63\n    \t\t];\n    \t\n    \tvar std_dc_luminance_nrcodes = [0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0];\n    \tvar std_dc_luminance_values = [0,1,2,3,4,5,6,7,8,9,10,11];\n    \tvar std_ac_luminance_nrcodes = [0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,0x7d];\n    \tvar std_ac_luminance_values = [\n    \t\t\t0x01,0x02,0x03,0x00,0x04,0x11,0x05,0x12,\n    \t\t\t0x21,0x31,0x41,0x06,0x13,0x51,0x61,0x07,\n    \t\t\t0x22,0x71,0x14,0x32,0x81,0x91,0xa1,0x08,\n    \t\t\t0x23,0x42,0xb1,0xc1,0x15,0x52,0xd1,0xf0,\n    \t\t\t0x24,0x33,0x62,0x72,0x82,0x09,0x0a,0x16,\n    \t\t\t0x17,0x18,0x19,0x1a,0x25,0x26,0x27,0x28,\n    \t\t\t0x29,0x2a,0x34,0x35,0x36,0x37,0x38,0x39,\n    \t\t\t0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,\n    \t\t\t0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,\n    \t\t\t0x5a,0x63,0x64,0x65,0x66,0x67,0x68,0x69,\n    \t\t\t0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,\n    \t\t\t0x7a,0x83,0x84,0x85,0x86,0x87,0x88,0x89,\n    \t\t\t0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,\n    \t\t\t0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,\n    \t\t\t0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,\n    \t\t\t0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,\n    \t\t\t0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,\n    \t\t\t0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xe1,0xe2,\n    \t\t\t0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,\n    \t\t\t0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,\n    \t\t\t0xf9,0xfa\n    \t\t];\n    \t\n    \tvar std_dc_chrominance_nrcodes = [0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0];\n    \tvar std_dc_chrominance_values = [0,1,2,3,4,5,6,7,8,9,10,11];\n    \tvar std_ac_chrominance_nrcodes = [0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,0x77];\n    \tvar std_ac_chrominance_values = [\n    \t\t\t0x00,0x01,0x02,0x03,0x11,0x04,0x05,0x21,\n    \t\t\t0x31,0x06,0x12,0x41,0x51,0x07,0x61,0x71,\n    \t\t\t0x13,0x22,0x32,0x81,0x08,0x14,0x42,0x91,\n    \t\t\t0xa1,0xb1,0xc1,0x09,0x23,0x33,0x52,0xf0,\n    \t\t\t0x15,0x62,0x72,0xd1,0x0a,0x16,0x24,0x34,\n    \t\t\t0xe1,0x25,0xf1,0x17,0x18,0x19,0x1a,0x26,\n    \t\t\t0x27,0x28,0x29,0x2a,0x35,0x36,0x37,0x38,\n    \t\t\t0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,\n    \t\t\t0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,\n    \t\t\t0x59,0x5a,0x63,0x64,0x65,0x66,0x67,0x68,\n    \t\t\t0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,\n    \t\t\t0x79,0x7a,0x82,0x83,0x84,0x85,0x86,0x87,\n    \t\t\t0x88,0x89,0x8a,0x92,0x93,0x94,0x95,0x96,\n    \t\t\t0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,\n    \t\t\t0xa6,0xa7,0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,\n    \t\t\t0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xc2,0xc3,\n    \t\t\t0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xd2,\n    \t\t\t0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,\n    \t\t\t0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,\n    \t\t\t0xea,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,\n    \t\t\t0xf9,0xfa\n    \t\t];\n    \t\n    \tfunction initQuantTables(sf){\n    \t\t\tvar YQT = [\n    \t\t\t\t16, 11, 10, 16, 24, 40, 51, 61,\n    \t\t\t\t12, 12, 14, 19, 26, 58, 60, 55,\n    \t\t\t\t14, 13, 16, 24, 40, 57, 69, 56,\n    \t\t\t\t14, 17, 22, 29, 51, 87, 80, 62,\n    \t\t\t\t18, 22, 37, 56, 68,109,103, 77,\n    \t\t\t\t24, 35, 55, 64, 81,104,113, 92,\n    \t\t\t\t49, 64, 78, 87,103,121,120,101,\n    \t\t\t\t72, 92, 95, 98,112,100,103, 99\n    \t\t\t];\n    \t\t\t\n    \t\t\tfor (var i = 0; i < 64; i++) {\n    \t\t\t\tvar t = ffloor((YQT[i]*sf+50)/100);\n    \t\t\t\tif (t < 1) {\n    \t\t\t\t\tt = 1;\n    \t\t\t\t} else if (t > 255) {\n    \t\t\t\t\tt = 255;\n    \t\t\t\t}\n    \t\t\t\tYTable[ZigZag[i]] = t;\n    \t\t\t}\n    \t\t\tvar UVQT = [\n    \t\t\t\t17, 18, 24, 47, 99, 99, 99, 99,\n    \t\t\t\t18, 21, 26, 66, 99, 99, 99, 99,\n    \t\t\t\t24, 26, 56, 99, 99, 99, 99, 99,\n    \t\t\t\t47, 66, 99, 99, 99, 99, 99, 99,\n    \t\t\t\t99, 99, 99, 99, 99, 99, 99, 99,\n    \t\t\t\t99, 99, 99, 99, 99, 99, 99, 99,\n    \t\t\t\t99, 99, 99, 99, 99, 99, 99, 99,\n    \t\t\t\t99, 99, 99, 99, 99, 99, 99, 99\n    \t\t\t];\n    \t\t\tfor (var j = 0; j < 64; j++) {\n    \t\t\t\tvar u = ffloor((UVQT[j]*sf+50)/100);\n    \t\t\t\tif (u < 1) {\n    \t\t\t\t\tu = 1;\n    \t\t\t\t} else if (u > 255) {\n    \t\t\t\t\tu = 255;\n    \t\t\t\t}\n    \t\t\t\tUVTable[ZigZag[j]] = u;\n    \t\t\t}\n    \t\t\tvar aasf = [\n    \t\t\t\t1.0, 1.387039845, 1.306562965, 1.175875602,\n    \t\t\t\t1.0, 0.785694958, 0.541196100, 0.275899379\n    \t\t\t];\n    \t\t\tvar k = 0;\n    \t\t\tfor (var row = 0; row < 8; row++)\n    \t\t\t{\n    \t\t\t\tfor (var col = 0; col < 8; col++)\n    \t\t\t\t{\n    \t\t\t\t\tfdtbl_Y[k]  = (1.0 / (YTable [ZigZag[k]] * aasf[row] * aasf[col] * 8.0));\n    \t\t\t\t\tfdtbl_UV[k] = (1.0 / (UVTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0));\n    \t\t\t\t\tk++;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\t\n    \t\tfunction computeHuffmanTbl(nrcodes, std_table){\n    \t\t\tvar codevalue = 0;\n    \t\t\tvar pos_in_table = 0;\n    \t\t\tvar HT = new Array();\n    \t\t\tfor (var k = 1; k <= 16; k++) {\n    \t\t\t\tfor (var j = 1; j <= nrcodes[k]; j++) {\n    \t\t\t\t\tHT[std_table[pos_in_table]] = [];\n    \t\t\t\t\tHT[std_table[pos_in_table]][0] = codevalue;\n    \t\t\t\t\tHT[std_table[pos_in_table]][1] = k;\n    \t\t\t\t\tpos_in_table++;\n    \t\t\t\t\tcodevalue++;\n    \t\t\t\t}\n    \t\t\t\tcodevalue*=2;\n    \t\t\t}\n    \t\t\treturn HT;\n    \t\t}\n    \t\t\n    \t\tfunction initHuffmanTbl()\n    \t\t{\n    \t\t\tYDC_HT = computeHuffmanTbl(std_dc_luminance_nrcodes,std_dc_luminance_values);\n    \t\t\tUVDC_HT = computeHuffmanTbl(std_dc_chrominance_nrcodes,std_dc_chrominance_values);\n    \t\t\tYAC_HT = computeHuffmanTbl(std_ac_luminance_nrcodes,std_ac_luminance_values);\n    \t\t\tUVAC_HT = computeHuffmanTbl(std_ac_chrominance_nrcodes,std_ac_chrominance_values);\n    \t\t}\n    \t\n    \t\tfunction initCategoryNumber()\n    \t\t{\n    \t\t\tvar nrlower = 1;\n    \t\t\tvar nrupper = 2;\n    \t\t\tfor (var cat = 1; cat <= 15; cat++) {\n    \t\t\t\t//Positive numbers\n    \t\t\t\tfor (var nr = nrlower; nr<nrupper; nr++) {\n    \t\t\t\t\tcategory[32767+nr] = cat;\n    \t\t\t\t\tbitcode[32767+nr] = [];\n    \t\t\t\t\tbitcode[32767+nr][1] = cat;\n    \t\t\t\t\tbitcode[32767+nr][0] = nr;\n    \t\t\t\t}\n    \t\t\t\t//Negative numbers\n    \t\t\t\tfor (var nrneg =-(nrupper-1); nrneg<=-nrlower; nrneg++) {\n    \t\t\t\t\tcategory[32767+nrneg] = cat;\n    \t\t\t\t\tbitcode[32767+nrneg] = [];\n    \t\t\t\t\tbitcode[32767+nrneg][1] = cat;\n    \t\t\t\t\tbitcode[32767+nrneg][0] = nrupper-1+nrneg;\n    \t\t\t\t}\n    \t\t\t\tnrlower <<= 1;\n    \t\t\t\tnrupper <<= 1;\n    \t\t\t}\n    \t\t}\n    \t\t\n    \t\tfunction initRGBYUVTable() {\n    \t\t\tfor(var i = 0; i < 256;i++) {\n    \t\t\t\tRGB_YUV_TABLE[i]      \t\t=  19595 * i;\n    \t\t\t\tRGB_YUV_TABLE[(i+ 256)>>0] \t=  38470 * i;\n    \t\t\t\tRGB_YUV_TABLE[(i+ 512)>>0] \t=   7471 * i + 0x8000;\n    \t\t\t\tRGB_YUV_TABLE[(i+ 768)>>0] \t= -11059 * i;\n    \t\t\t\tRGB_YUV_TABLE[(i+1024)>>0] \t= -21709 * i;\n    \t\t\t\tRGB_YUV_TABLE[(i+1280)>>0] \t=  32768 * i + 0x807FFF;\n    \t\t\t\tRGB_YUV_TABLE[(i+1536)>>0] \t= -27439 * i;\n    \t\t\t\tRGB_YUV_TABLE[(i+1792)>>0] \t= - 5329 * i;\n    \t\t\t}\n    \t\t}\n    \t\t\n    \t\t// IO functions\n    \t\tfunction writeBits(bs)\n    \t\t{\n    \t\t\tvar value = bs[0];\n    \t\t\tvar posval = bs[1]-1;\n    \t\t\twhile ( posval >= 0 ) {\n    \t\t\t\tif (value & (1 << posval) ) {\n    \t\t\t\t\tbytenew |= (1 << bytepos);\n    \t\t\t\t}\n    \t\t\t\tposval--;\n    \t\t\t\tbytepos--;\n    \t\t\t\tif (bytepos < 0) {\n    \t\t\t\t\tif (bytenew == 0xFF) {\n    \t\t\t\t\t\twriteByte(0xFF);\n    \t\t\t\t\t\twriteByte(0);\n    \t\t\t\t\t}\n    \t\t\t\t\telse {\n    \t\t\t\t\t\twriteByte(bytenew);\n    \t\t\t\t\t}\n    \t\t\t\t\tbytepos=7;\n    \t\t\t\t\tbytenew=0;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\n    \t\tfunction writeByte(value)\n    \t\t{\n    \t\t\t//byteout.push(clt[value]); // write char directly instead of converting later\n          byteout.push(value);\n    \t\t}\n    \t\n    \t\tfunction writeWord(value)\n    \t\t{\n    \t\t\twriteByte((value>>8)&0xFF);\n    \t\t\twriteByte((value   )&0xFF);\n    \t\t}\n    \t\t\n    \t\t// DCT & quantization core\n    \t\tfunction fDCTQuant(data, fdtbl)\n    \t\t{\n    \t\t\tvar d0, d1, d2, d3, d4, d5, d6, d7;\n    \t\t\t/* Pass 1: process rows. */\n    \t\t\tvar dataOff=0;\n    \t\t\tvar i;\n    \t\t\tvar I8 = 8;\n    \t\t\tvar I64 = 64;\n    \t\t\tfor (i=0; i<I8; ++i)\n    \t\t\t{\n    \t\t\t\td0 = data[dataOff];\n    \t\t\t\td1 = data[dataOff+1];\n    \t\t\t\td2 = data[dataOff+2];\n    \t\t\t\td3 = data[dataOff+3];\n    \t\t\t\td4 = data[dataOff+4];\n    \t\t\t\td5 = data[dataOff+5];\n    \t\t\t\td6 = data[dataOff+6];\n    \t\t\t\td7 = data[dataOff+7];\n    \t\t\t\t\n    \t\t\t\tvar tmp0 = d0 + d7;\n    \t\t\t\tvar tmp7 = d0 - d7;\n    \t\t\t\tvar tmp1 = d1 + d6;\n    \t\t\t\tvar tmp6 = d1 - d6;\n    \t\t\t\tvar tmp2 = d2 + d5;\n    \t\t\t\tvar tmp5 = d2 - d5;\n    \t\t\t\tvar tmp3 = d3 + d4;\n    \t\t\t\tvar tmp4 = d3 - d4;\n    \t\n    \t\t\t\t/* Even part */\n    \t\t\t\tvar tmp10 = tmp0 + tmp3;\t/* phase 2 */\n    \t\t\t\tvar tmp13 = tmp0 - tmp3;\n    \t\t\t\tvar tmp11 = tmp1 + tmp2;\n    \t\t\t\tvar tmp12 = tmp1 - tmp2;\n    \t\n    \t\t\t\tdata[dataOff] = tmp10 + tmp11; /* phase 3 */\n    \t\t\t\tdata[dataOff+4] = tmp10 - tmp11;\n    \t\n    \t\t\t\tvar z1 = (tmp12 + tmp13) * 0.707106781; /* c4 */\n    \t\t\t\tdata[dataOff+2] = tmp13 + z1; /* phase 5 */\n    \t\t\t\tdata[dataOff+6] = tmp13 - z1;\n    \t\n    \t\t\t\t/* Odd part */\n    \t\t\t\ttmp10 = tmp4 + tmp5; /* phase 2 */\n    \t\t\t\ttmp11 = tmp5 + tmp6;\n    \t\t\t\ttmp12 = tmp6 + tmp7;\n    \t\n    \t\t\t\t/* The rotator is modified from fig 4-8 to avoid extra negations. */\n    \t\t\t\tvar z5 = (tmp10 - tmp12) * 0.382683433; /* c6 */\n    \t\t\t\tvar z2 = 0.541196100 * tmp10 + z5; /* c2-c6 */\n    \t\t\t\tvar z4 = 1.306562965 * tmp12 + z5; /* c2+c6 */\n    \t\t\t\tvar z3 = tmp11 * 0.707106781; /* c4 */\n    \t\n    \t\t\t\tvar z11 = tmp7 + z3;\t/* phase 5 */\n    \t\t\t\tvar z13 = tmp7 - z3;\n    \t\n    \t\t\t\tdata[dataOff+5] = z13 + z2;\t/* phase 6 */\n    \t\t\t\tdata[dataOff+3] = z13 - z2;\n    \t\t\t\tdata[dataOff+1] = z11 + z4;\n    \t\t\t\tdata[dataOff+7] = z11 - z4;\n    \t\n    \t\t\t\tdataOff += 8; /* advance pointer to next row */\n    \t\t\t}\n    \t\n    \t\t\t/* Pass 2: process columns. */\n    \t\t\tdataOff = 0;\n    \t\t\tfor (i=0; i<I8; ++i)\n    \t\t\t{\n    \t\t\t\td0 = data[dataOff];\n    \t\t\t\td1 = data[dataOff + 8];\n    \t\t\t\td2 = data[dataOff + 16];\n    \t\t\t\td3 = data[dataOff + 24];\n    \t\t\t\td4 = data[dataOff + 32];\n    \t\t\t\td5 = data[dataOff + 40];\n    \t\t\t\td6 = data[dataOff + 48];\n    \t\t\t\td7 = data[dataOff + 56];\n    \t\t\t\t\n    \t\t\t\tvar tmp0p2 = d0 + d7;\n    \t\t\t\tvar tmp7p2 = d0 - d7;\n    \t\t\t\tvar tmp1p2 = d1 + d6;\n    \t\t\t\tvar tmp6p2 = d1 - d6;\n    \t\t\t\tvar tmp2p2 = d2 + d5;\n    \t\t\t\tvar tmp5p2 = d2 - d5;\n    \t\t\t\tvar tmp3p2 = d3 + d4;\n    \t\t\t\tvar tmp4p2 = d3 - d4;\n    \t\n    \t\t\t\t/* Even part */\n    \t\t\t\tvar tmp10p2 = tmp0p2 + tmp3p2;\t/* phase 2 */\n    \t\t\t\tvar tmp13p2 = tmp0p2 - tmp3p2;\n    \t\t\t\tvar tmp11p2 = tmp1p2 + tmp2p2;\n    \t\t\t\tvar tmp12p2 = tmp1p2 - tmp2p2;\n    \t\n    \t\t\t\tdata[dataOff] = tmp10p2 + tmp11p2; /* phase 3 */\n    \t\t\t\tdata[dataOff+32] = tmp10p2 - tmp11p2;\n    \t\n    \t\t\t\tvar z1p2 = (tmp12p2 + tmp13p2) * 0.707106781; /* c4 */\n    \t\t\t\tdata[dataOff+16] = tmp13p2 + z1p2; /* phase 5 */\n    \t\t\t\tdata[dataOff+48] = tmp13p2 - z1p2;\n    \t\n    \t\t\t\t/* Odd part */\n    \t\t\t\ttmp10p2 = tmp4p2 + tmp5p2; /* phase 2 */\n    \t\t\t\ttmp11p2 = tmp5p2 + tmp6p2;\n    \t\t\t\ttmp12p2 = tmp6p2 + tmp7p2;\n    \t\n    \t\t\t\t/* The rotator is modified from fig 4-8 to avoid extra negations. */\n    \t\t\t\tvar z5p2 = (tmp10p2 - tmp12p2) * 0.382683433; /* c6 */\n    \t\t\t\tvar z2p2 = 0.541196100 * tmp10p2 + z5p2; /* c2-c6 */\n    \t\t\t\tvar z4p2 = 1.306562965 * tmp12p2 + z5p2; /* c2+c6 */\n    \t\t\t\tvar z3p2 = tmp11p2 * 0.707106781; /* c4 */\n    \t\n    \t\t\t\tvar z11p2 = tmp7p2 + z3p2;\t/* phase 5 */\n    \t\t\t\tvar z13p2 = tmp7p2 - z3p2;\n    \t\n    \t\t\t\tdata[dataOff+40] = z13p2 + z2p2; /* phase 6 */\n    \t\t\t\tdata[dataOff+24] = z13p2 - z2p2;\n    \t\t\t\tdata[dataOff+ 8] = z11p2 + z4p2;\n    \t\t\t\tdata[dataOff+56] = z11p2 - z4p2;\n    \t\n    \t\t\t\tdataOff++; /* advance pointer to next column */\n    \t\t\t}\n    \t\n    \t\t\t// Quantize/descale the coefficients\n    \t\t\tvar fDCTQuant;\n    \t\t\tfor (i=0; i<I64; ++i)\n    \t\t\t{\n    \t\t\t\t// Apply the quantization and scaling factor & Round to nearest integer\n    \t\t\t\tfDCTQuant = data[i]*fdtbl[i];\n    \t\t\t\toutputfDCTQuant[i] = (fDCTQuant > 0.0) ? ((fDCTQuant + 0.5)|0) : ((fDCTQuant - 0.5)|0);\n    \t\t\t\t//outputfDCTQuant[i] = fround(fDCTQuant);\n\n    \t\t\t}\n    \t\t\treturn outputfDCTQuant;\n    \t\t}\n    \t\t\n    \t\tfunction writeAPP0()\n    \t\t{\n    \t\t\twriteWord(0xFFE0); // marker\n    \t\t\twriteWord(16); // length\n    \t\t\twriteByte(0x4A); // J\n    \t\t\twriteByte(0x46); // F\n    \t\t\twriteByte(0x49); // I\n    \t\t\twriteByte(0x46); // F\n    \t\t\twriteByte(0); // = \"JFIF\",'\\0'\n    \t\t\twriteByte(1); // versionhi\n    \t\t\twriteByte(1); // versionlo\n    \t\t\twriteByte(0); // xyunits\n    \t\t\twriteWord(1); // xdensity\n    \t\t\twriteWord(1); // ydensity\n    \t\t\twriteByte(0); // thumbnwidth\n    \t\t\twriteByte(0); // thumbnheight\n    \t\t}\n\n    \t\tfunction writeAPP1(exifBuffer) {\n    \t\t\tif (!exifBuffer) return;\n\n    \t\t\twriteWord(0xFFE1); // APP1 marker\n\n    \t\t\tif (exifBuffer[0] === 0x45 &&\n    \t\t\t\t\texifBuffer[1] === 0x78 &&\n    \t\t\t\t\texifBuffer[2] === 0x69 &&\n    \t\t\t\t\texifBuffer[3] === 0x66) {\n    \t\t\t\t// Buffer already starts with EXIF, just use it directly\n    \t\t\t\twriteWord(exifBuffer.length + 2); // length is buffer + length itself!\n    \t\t\t} else {\n    \t\t\t\t// Buffer doesn't start with EXIF, write it for them\n    \t\t\t\twriteWord(exifBuffer.length + 5 + 2); // length is buffer + EXIF\\0 + length itself!\n    \t\t\t\twriteByte(0x45); // E\n    \t\t\t\twriteByte(0x78); // X\n    \t\t\t\twriteByte(0x69); // I\n    \t\t\t\twriteByte(0x66); // F\n    \t\t\t\twriteByte(0); // = \"EXIF\",'\\0'\n    \t\t\t}\n\n    \t\t\tfor (var i = 0; i < exifBuffer.length; i++) {\n    \t\t\t\twriteByte(exifBuffer[i]);\n    \t\t\t}\n    \t\t}\n\n    \t\tfunction writeSOF0(width, height)\n    \t\t{\n    \t\t\twriteWord(0xFFC0); // marker\n    \t\t\twriteWord(17);   // length, truecolor YUV JPG\n    \t\t\twriteByte(8);    // precision\n    \t\t\twriteWord(height);\n    \t\t\twriteWord(width);\n    \t\t\twriteByte(3);    // nrofcomponents\n    \t\t\twriteByte(1);    // IdY\n    \t\t\twriteByte(0x11); // HVY\n    \t\t\twriteByte(0);    // QTY\n    \t\t\twriteByte(2);    // IdU\n    \t\t\twriteByte(0x11); // HVU\n    \t\t\twriteByte(1);    // QTU\n    \t\t\twriteByte(3);    // IdV\n    \t\t\twriteByte(0x11); // HVV\n    \t\t\twriteByte(1);    // QTV\n    \t\t}\n    \t\n    \t\tfunction writeDQT()\n    \t\t{\n    \t\t\twriteWord(0xFFDB); // marker\n    \t\t\twriteWord(132);\t   // length\n    \t\t\twriteByte(0);\n    \t\t\tfor (var i=0; i<64; i++) {\n    \t\t\t\twriteByte(YTable[i]);\n    \t\t\t}\n    \t\t\twriteByte(1);\n    \t\t\tfor (var j=0; j<64; j++) {\n    \t\t\t\twriteByte(UVTable[j]);\n    \t\t\t}\n    \t\t}\n    \t\n    \t\tfunction writeDHT()\n    \t\t{\n    \t\t\twriteWord(0xFFC4); // marker\n    \t\t\twriteWord(0x01A2); // length\n    \t\n    \t\t\twriteByte(0); // HTYDCinfo\n    \t\t\tfor (var i=0; i<16; i++) {\n    \t\t\t\twriteByte(std_dc_luminance_nrcodes[i+1]);\n    \t\t\t}\n    \t\t\tfor (var j=0; j<=11; j++) {\n    \t\t\t\twriteByte(std_dc_luminance_values[j]);\n    \t\t\t}\n    \t\n    \t\t\twriteByte(0x10); // HTYACinfo\n    \t\t\tfor (var k=0; k<16; k++) {\n    \t\t\t\twriteByte(std_ac_luminance_nrcodes[k+1]);\n    \t\t\t}\n    \t\t\tfor (var l=0; l<=161; l++) {\n    \t\t\t\twriteByte(std_ac_luminance_values[l]);\n    \t\t\t}\n    \t\n    \t\t\twriteByte(1); // HTUDCinfo\n    \t\t\tfor (var m=0; m<16; m++) {\n    \t\t\t\twriteByte(std_dc_chrominance_nrcodes[m+1]);\n    \t\t\t}\n    \t\t\tfor (var n=0; n<=11; n++) {\n    \t\t\t\twriteByte(std_dc_chrominance_values[n]);\n    \t\t\t}\n    \t\n    \t\t\twriteByte(0x11); // HTUACinfo\n    \t\t\tfor (var o=0; o<16; o++) {\n    \t\t\t\twriteByte(std_ac_chrominance_nrcodes[o+1]);\n    \t\t\t}\n    \t\t\tfor (var p=0; p<=161; p++) {\n    \t\t\t\twriteByte(std_ac_chrominance_values[p]);\n    \t\t\t}\n    \t\t}\n    \t\n    \t\tfunction writeSOS()\n    \t\t{\n    \t\t\twriteWord(0xFFDA); // marker\n    \t\t\twriteWord(12); // length\n    \t\t\twriteByte(3); // nrofcomponents\n    \t\t\twriteByte(1); // IdY\n    \t\t\twriteByte(0); // HTY\n    \t\t\twriteByte(2); // IdU\n    \t\t\twriteByte(0x11); // HTU\n    \t\t\twriteByte(3); // IdV\n    \t\t\twriteByte(0x11); // HTV\n    \t\t\twriteByte(0); // Ss\n    \t\t\twriteByte(0x3f); // Se\n    \t\t\twriteByte(0); // Bf\n    \t\t}\n    \t\t\n    \t\tfunction processDU(CDU, fdtbl, DC, HTDC, HTAC){\n    \t\t\tvar EOB = HTAC[0x00];\n    \t\t\tvar M16zeroes = HTAC[0xF0];\n    \t\t\tvar pos;\n    \t\t\tvar I16 = 16;\n    \t\t\tvar I63 = 63;\n    \t\t\tvar I64 = 64;\n    \t\t\tvar DU_DCT = fDCTQuant(CDU, fdtbl);\n    \t\t\t//ZigZag reorder\n    \t\t\tfor (var j=0;j<I64;++j) {\n    \t\t\t\tDU[ZigZag[j]]=DU_DCT[j];\n    \t\t\t}\n    \t\t\tvar Diff = DU[0] - DC; DC = DU[0];\n    \t\t\t//Encode DC\n    \t\t\tif (Diff==0) {\n    \t\t\t\twriteBits(HTDC[0]); // Diff might be 0\n    \t\t\t} else {\n    \t\t\t\tpos = 32767+Diff;\n    \t\t\t\twriteBits(HTDC[category[pos]]);\n    \t\t\t\twriteBits(bitcode[pos]);\n    \t\t\t}\n    \t\t\t//Encode ACs\n    \t\t\tvar end0pos = 63; // was const... which is crazy\n    \t\t\tfor (; (end0pos>0)&&(DU[end0pos]==0); end0pos--) {}\t\t\t//end0pos = first element in reverse order !=0\n    \t\t\tif ( end0pos == 0) {\n    \t\t\t\twriteBits(EOB);\n    \t\t\t\treturn DC;\n    \t\t\t}\n    \t\t\tvar i = 1;\n    \t\t\tvar lng;\n    \t\t\twhile ( i <= end0pos ) {\n    \t\t\t\tvar startpos = i;\n    \t\t\t\tfor (; (DU[i]==0) && (i<=end0pos); ++i) {}\n    \t\t\t\tvar nrzeroes = i-startpos;\n    \t\t\t\tif ( nrzeroes >= I16 ) {\n    \t\t\t\t\tlng = nrzeroes>>4;\n    \t\t\t\t\tfor (var nrmarker=1; nrmarker <= lng; ++nrmarker)\n    \t\t\t\t\t\twriteBits(M16zeroes);\n    \t\t\t\t\tnrzeroes = nrzeroes&0xF;\n    \t\t\t\t}\n    \t\t\t\tpos = 32767+DU[i];\n    \t\t\t\twriteBits(HTAC[(nrzeroes<<4)+category[pos]]);\n    \t\t\t\twriteBits(bitcode[pos]);\n    \t\t\t\ti++;\n    \t\t\t}\n    \t\t\tif ( end0pos != I63 ) {\n    \t\t\t\twriteBits(EOB);\n    \t\t\t}\n    \t\t\treturn DC;\n    \t\t}\n\n    \t\tfunction initCharLookupTable(){\n    \t\t\tvar sfcc = String.fromCharCode;\n    \t\t\tfor(var i=0; i < 256; i++){ ///// ACHTUNG // 255\n    \t\t\t\tclt[i] = sfcc(i);\n    \t\t\t}\n    \t\t}\n    \t\t\n    \t\tthis.encode = function(image,quality) // image data object\n    \t\t{\n    \t\t\tnew Date().getTime();\n    \t\t\t\n    \t\t\tif(quality) setQuality(quality);\n    \t\t\t\n    \t\t\t// Initialize bit writer\n    \t\t\tbyteout = new Array();\n    \t\t\tbytenew=0;\n    \t\t\tbytepos=7;\n    \t\n    \t\t\t// Add JPEG headers\n    \t\t\twriteWord(0xFFD8); // SOI\n    \t\t\twriteAPP0();\n    \t\t\twriteAPP1(image.exifBuffer);\n    \t\t\twriteDQT();\n    \t\t\twriteSOF0(image.width,image.height);\n    \t\t\twriteDHT();\n    \t\t\twriteSOS();\n\n    \t\n    \t\t\t// Encode 8x8 macroblocks\n    \t\t\tvar DCY=0;\n    \t\t\tvar DCU=0;\n    \t\t\tvar DCV=0;\n    \t\t\t\n    \t\t\tbytenew=0;\n    \t\t\tbytepos=7;\n    \t\t\t\n    \t\t\t\n    \t\t\tthis.encode.displayName = \"_encode_\";\n\n    \t\t\tvar imageData = image.data;\n    \t\t\tvar width = image.width;\n    \t\t\tvar height = image.height;\n\n    \t\t\tvar quadWidth = width*4;\n    \t\t\t\n    \t\t\tvar x, y = 0;\n    \t\t\tvar r, g, b;\n    \t\t\tvar start,p, col,row,pos;\n    \t\t\twhile(y < height){\n    \t\t\t\tx = 0;\n    \t\t\t\twhile(x < quadWidth){\n    \t\t\t\tstart = quadWidth * y + x;\n    \t\t\t\tp = start;\n    \t\t\t\tcol = -1;\n    \t\t\t\trow = 0;\n    \t\t\t\t\n    \t\t\t\tfor(pos=0; pos < 64; pos++){\n    \t\t\t\t\trow = pos >> 3;// /8\n    \t\t\t\t\tcol = ( pos & 7 ) * 4; // %8\n    \t\t\t\t\tp = start + ( row * quadWidth ) + col;\t\t\n    \t\t\t\t\t\n    \t\t\t\t\tif(y+row >= height){ // padding bottom\n    \t\t\t\t\t\tp-= (quadWidth*(y+1+row-height));\n    \t\t\t\t\t}\n\n    \t\t\t\t\tif(x+col >= quadWidth){ // padding right\t\n    \t\t\t\t\t\tp-= ((x+col) - quadWidth +4);\n    \t\t\t\t\t}\n    \t\t\t\t\t\n    \t\t\t\t\tr = imageData[ p++ ];\n    \t\t\t\t\tg = imageData[ p++ ];\n    \t\t\t\t\tb = imageData[ p++ ];\n    \t\t\t\t\t\n    \t\t\t\t\t\n    \t\t\t\t\t/* // calculate YUV values dynamically\n    \t\t\t\t\tYDU[pos]=((( 0.29900)*r+( 0.58700)*g+( 0.11400)*b))-128; //-0x80\n    \t\t\t\t\tUDU[pos]=(((-0.16874)*r+(-0.33126)*g+( 0.50000)*b));\n    \t\t\t\t\tVDU[pos]=((( 0.50000)*r+(-0.41869)*g+(-0.08131)*b));\n    \t\t\t\t\t*/\n    \t\t\t\t\t\n    \t\t\t\t\t// use lookup table (slightly faster)\n    \t\t\t\t\tYDU[pos] = ((RGB_YUV_TABLE[r]             + RGB_YUV_TABLE[(g +  256)>>0] + RGB_YUV_TABLE[(b +  512)>>0]) >> 16)-128;\n    \t\t\t\t\tUDU[pos] = ((RGB_YUV_TABLE[(r +  768)>>0] + RGB_YUV_TABLE[(g + 1024)>>0] + RGB_YUV_TABLE[(b + 1280)>>0]) >> 16)-128;\n    \t\t\t\t\tVDU[pos] = ((RGB_YUV_TABLE[(r + 1280)>>0] + RGB_YUV_TABLE[(g + 1536)>>0] + RGB_YUV_TABLE[(b + 1792)>>0]) >> 16)-128;\n\n    \t\t\t\t}\n    \t\t\t\t\n    \t\t\t\tDCY = processDU(YDU, fdtbl_Y, DCY, YDC_HT, YAC_HT);\n    \t\t\t\tDCU = processDU(UDU, fdtbl_UV, DCU, UVDC_HT, UVAC_HT);\n    \t\t\t\tDCV = processDU(VDU, fdtbl_UV, DCV, UVDC_HT, UVAC_HT);\n    \t\t\t\tx+=32;\n    \t\t\t\t}\n    \t\t\t\ty+=8;\n    \t\t\t}\n    \t\t\t\n    \t\t\t\n    \t\t\t////////////////////////////////////////////////////////////////\n    \t\n    \t\t\t// Do the bit alignment of the EOI marker\n    \t\t\tif ( bytepos >= 0 ) {\n    \t\t\t\tvar fillbits = [];\n    \t\t\t\tfillbits[1] = bytepos+1;\n    \t\t\t\tfillbits[0] = (1<<(bytepos+1))-1;\n    \t\t\t\twriteBits(fillbits);\n    \t\t\t}\n    \t\n    \t\t\twriteWord(0xFFD9); //EOI\n          return new Buffer(byteout);\n    \t};\n    \t\n    \tfunction setQuality(quality){\n    \t\tif (quality <= 0) {\n    \t\t\tquality = 1;\n    \t\t}\n    \t\tif (quality > 100) {\n    \t\t\tquality = 100;\n    \t\t}\n    \t\t\n    \t\tif(currentQuality == quality) return // don't recalc if unchanged\n    \t\t\n    \t\tvar sf = 0;\n    \t\tif (quality < 50) {\n    \t\t\tsf = Math.floor(5000 / quality);\n    \t\t} else {\n    \t\t\tsf = Math.floor(200 - quality*2);\n    \t\t}\n    \t\t\n    \t\tinitQuantTables(sf);\n    \t\tcurrentQuality = quality;\n    \t\t//console.log('Quality set to: '+quality +'%');\n    \t}\n    \t\n    \tfunction init(){\n    \t\tvar time_start = new Date().getTime();\n    \t\tif(!quality) quality = 50;\n    \t\t// Create tables\n    \t\tinitCharLookupTable();\n    \t\tinitHuffmanTbl();\n    \t\tinitCategoryNumber();\n    \t\tinitRGBYUVTable();\n    \t\t\n    \t\tsetQuality(quality);\n    \t\tnew Date().getTime() - time_start;\n        \t//console.log('Initialization '+ duration + 'ms');\n    \t}\n    \t\n    \tinit();\n    \t\n    }\n    {\n    \tmodule.exports = encode;\n    }\n\n    function encode(imgData, qu) {\n      if (typeof qu === 'undefined') qu = 50;\n      var encoder = new JPEGEncoder(qu);\n    \tvar data = encoder.encode(imgData, qu);\n      return {\n        data: data,\n        width: imgData.width,\n        height: imgData.height\n      };\n    }\n    });\n\n    /* -*- tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /\n    /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n\n    var decoder = createCommonjsModule(function (module) {\n    /*\n       Copyright 2011 notmasteryet\n\n       Licensed under the Apache License, Version 2.0 (the \"License\");\n       you may not use this file except in compliance with the License.\n       You may obtain a copy of the License at\n\n           http://www.apache.org/licenses/LICENSE-2.0\n\n       Unless required by applicable law or agreed to in writing, software\n       distributed under the License is distributed on an \"AS IS\" BASIS,\n       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n       See the License for the specific language governing permissions and\n       limitations under the License.\n    */\n\n    // - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n    //   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n    // - The JFIF specification can be found in the JPEG File Interchange Format\n    //   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n    // - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters\n    //   in PostScript Level 2, Technical Note #5116\n    //   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n\n    var JpegImage = (function jpegImage() {\n      var dctZigZag = new Int32Array([\n         0,\n         1,  8,\n        16,  9,  2,\n         3, 10, 17, 24,\n        32, 25, 18, 11, 4,\n         5, 12, 19, 26, 33, 40,\n        48, 41, 34, 27, 20, 13,  6,\n         7, 14, 21, 28, 35, 42, 49, 56,\n        57, 50, 43, 36, 29, 22, 15,\n        23, 30, 37, 44, 51, 58,\n        59, 52, 45, 38, 31,\n        39, 46, 53, 60,\n        61, 54, 47,\n        55, 62,\n        63\n      ]);\n\n      var dctCos1  =  4017;   // cos(pi/16)\n      var dctSin1  =   799;   // sin(pi/16)\n      var dctCos3  =  3406;   // cos(3*pi/16)\n      var dctSin3  =  2276;   // sin(3*pi/16)\n      var dctCos6  =  1567;   // cos(6*pi/16)\n      var dctSin6  =  3784;   // sin(6*pi/16)\n      var dctSqrt2 =  5793;   // sqrt(2)\n      var dctSqrt1d2 = 2896;  // sqrt(2) / 2\n\n      function constructor() {\n      }\n\n      function buildHuffmanTable(codeLengths, values) {\n        var k = 0, code = [], i, j, length = 16;\n        while (length > 0 && !codeLengths[length - 1])\n          length--;\n        code.push({children: [], index: 0});\n        var p = code[0], q;\n        for (i = 0; i < length; i++) {\n          for (j = 0; j < codeLengths[i]; j++) {\n            p = code.pop();\n            p.children[p.index] = values[k];\n            while (p.index > 0) {\n              if (code.length === 0)\n                throw new Error('Could not recreate Huffman Table');\n              p = code.pop();\n            }\n            p.index++;\n            code.push(p);\n            while (code.length <= i) {\n              code.push(q = {children: [], index: 0});\n              p.children[p.index] = q.children;\n              p = q;\n            }\n            k++;\n          }\n          if (i + 1 < length) {\n            // p here points to last code\n            code.push(q = {children: [], index: 0});\n            p.children[p.index] = q.children;\n            p = q;\n          }\n        }\n        return code[0].children;\n      }\n\n      function decodeScan(data, offset,\n                          frame, components, resetInterval,\n                          spectralStart, spectralEnd,\n                          successivePrev, successive, opts) {\n        frame.precision;\n        frame.samplesPerLine;\n        frame.scanLines;\n        var mcusPerLine = frame.mcusPerLine;\n        var progressive = frame.progressive;\n        frame.maxH; frame.maxV;\n\n        var startOffset = offset, bitsData = 0, bitsCount = 0;\n        function readBit() {\n          if (bitsCount > 0) {\n            bitsCount--;\n            return (bitsData >> bitsCount) & 1;\n          }\n          bitsData = data[offset++];\n          if (bitsData == 0xFF) {\n            var nextByte = data[offset++];\n            if (nextByte) {\n              throw new Error(\"unexpected marker: \" + ((bitsData << 8) | nextByte).toString(16));\n            }\n            // unstuff 0\n          }\n          bitsCount = 7;\n          return bitsData >>> 7;\n        }\n        function decodeHuffman(tree) {\n          var node = tree, bit;\n          while ((bit = readBit()) !== null) {\n            node = node[bit];\n            if (typeof node === 'number')\n              return node;\n            if (typeof node !== 'object')\n              throw new Error(\"invalid huffman sequence\");\n          }\n          return null;\n        }\n        function receive(length) {\n          var n = 0;\n          while (length > 0) {\n            var bit = readBit();\n            if (bit === null) return;\n            n = (n << 1) | bit;\n            length--;\n          }\n          return n;\n        }\n        function receiveAndExtend(length) {\n          var n = receive(length);\n          if (n >= 1 << (length - 1))\n            return n;\n          return n + (-1 << length) + 1;\n        }\n        function decodeBaseline(component, zz) {\n          var t = decodeHuffman(component.huffmanTableDC);\n          var diff = t === 0 ? 0 : receiveAndExtend(t);\n          zz[0]= (component.pred += diff);\n          var k = 1;\n          while (k < 64) {\n            var rs = decodeHuffman(component.huffmanTableAC);\n            var s = rs & 15, r = rs >> 4;\n            if (s === 0) {\n              if (r < 15)\n                break;\n              k += 16;\n              continue;\n            }\n            k += r;\n            var z = dctZigZag[k];\n            zz[z] = receiveAndExtend(s);\n            k++;\n          }\n        }\n        function decodeDCFirst(component, zz) {\n          var t = decodeHuffman(component.huffmanTableDC);\n          var diff = t === 0 ? 0 : (receiveAndExtend(t) << successive);\n          zz[0] = (component.pred += diff);\n        }\n        function decodeDCSuccessive(component, zz) {\n          zz[0] |= readBit() << successive;\n        }\n        var eobrun = 0;\n        function decodeACFirst(component, zz) {\n          if (eobrun > 0) {\n            eobrun--;\n            return;\n          }\n          var k = spectralStart, e = spectralEnd;\n          while (k <= e) {\n            var rs = decodeHuffman(component.huffmanTableAC);\n            var s = rs & 15, r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r) - 1;\n                break;\n              }\n              k += 16;\n              continue;\n            }\n            k += r;\n            var z = dctZigZag[k];\n            zz[z] = receiveAndExtend(s) * (1 << successive);\n            k++;\n          }\n        }\n        var successiveACState = 0, successiveACNextValue;\n        function decodeACSuccessive(component, zz) {\n          var k = spectralStart, e = spectralEnd, r = 0;\n          while (k <= e) {\n            var z = dctZigZag[k];\n            var direction = zz[z] < 0 ? -1 : 1;\n            switch (successiveACState) {\n            case 0: // initial state\n              var rs = decodeHuffman(component.huffmanTableAC);\n              var s = rs & 15, r = rs >> 4;\n              if (s === 0) {\n                if (r < 15) {\n                  eobrun = receive(r) + (1 << r);\n                  successiveACState = 4;\n                } else {\n                  r = 16;\n                  successiveACState = 1;\n                }\n              } else {\n                if (s !== 1)\n                  throw new Error(\"invalid ACn encoding\");\n                successiveACNextValue = receiveAndExtend(s);\n                successiveACState = r ? 2 : 3;\n              }\n              continue;\n            case 1: // skipping r zero items\n            case 2:\n              if (zz[z])\n                zz[z] += (readBit() << successive) * direction;\n              else {\n                r--;\n                if (r === 0)\n                  successiveACState = successiveACState == 2 ? 3 : 0;\n              }\n              break;\n            case 3: // set value for a zero item\n              if (zz[z])\n                zz[z] += (readBit() << successive) * direction;\n              else {\n                zz[z] = successiveACNextValue << successive;\n                successiveACState = 0;\n              }\n              break;\n            case 4: // eob\n              if (zz[z])\n                zz[z] += (readBit() << successive) * direction;\n              break;\n            }\n            k++;\n          }\n          if (successiveACState === 4) {\n            eobrun--;\n            if (eobrun === 0)\n              successiveACState = 0;\n          }\n        }\n        function decodeMcu(component, decode, mcu, row, col) {\n          var mcuRow = (mcu / mcusPerLine) | 0;\n          var mcuCol = mcu % mcusPerLine;\n          var blockRow = mcuRow * component.v + row;\n          var blockCol = mcuCol * component.h + col;\n          // If the block is missing and we're in tolerant mode, just skip it.\n          if (component.blocks[blockRow] === undefined && opts.tolerantDecoding)\n            return;\n          decode(component, component.blocks[blockRow][blockCol]);\n        }\n        function decodeBlock(component, decode, mcu) {\n          var blockRow = (mcu / component.blocksPerLine) | 0;\n          var blockCol = mcu % component.blocksPerLine;\n          // If the block is missing and we're in tolerant mode, just skip it.\n          if (component.blocks[blockRow] === undefined && opts.tolerantDecoding)\n            return;\n          decode(component, component.blocks[blockRow][blockCol]);\n        }\n\n        var componentsLength = components.length;\n        var component, i, j, k, n;\n        var decodeFn;\n        if (progressive) {\n          if (spectralStart === 0)\n            decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n          else\n            decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n        } else {\n          decodeFn = decodeBaseline;\n        }\n\n        var mcu = 0, marker;\n        var mcuExpected;\n        if (componentsLength == 1) {\n          mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n        } else {\n          mcuExpected = mcusPerLine * frame.mcusPerColumn;\n        }\n        if (!resetInterval) resetInterval = mcuExpected;\n\n        var h, v;\n        while (mcu < mcuExpected) {\n          // reset interval stuff\n          for (i = 0; i < componentsLength; i++)\n            components[i].pred = 0;\n          eobrun = 0;\n\n          if (componentsLength == 1) {\n            component = components[0];\n            for (n = 0; n < resetInterval; n++) {\n              decodeBlock(component, decodeFn, mcu);\n              mcu++;\n            }\n          } else {\n            for (n = 0; n < resetInterval; n++) {\n              for (i = 0; i < componentsLength; i++) {\n                component = components[i];\n                h = component.h;\n                v = component.v;\n                for (j = 0; j < v; j++) {\n                  for (k = 0; k < h; k++) {\n                    decodeMcu(component, decodeFn, mcu, j, k);\n                  }\n                }\n              }\n              mcu++;\n\n              // If we've reached our expected MCU's, stop decoding\n              if (mcu === mcuExpected) break;\n            }\n          }\n\n          if (mcu === mcuExpected) {\n            // Skip trailing bytes at the end of the scan - until we reach the next marker\n            do {\n              if (data[offset] === 0xFF) {\n                if (data[offset + 1] !== 0x00) {\n                  break;\n                }\n              }\n              offset += 1;\n            } while (offset < data.length - 2);\n          }\n\n          // find marker\n          bitsCount = 0;\n          marker = (data[offset] << 8) | data[offset + 1];\n          if (marker < 0xFF00) {\n            throw new Error(\"marker was not found\");\n          }\n\n          if (marker >= 0xFFD0 && marker <= 0xFFD7) { // RSTx\n            offset += 2;\n          }\n          else\n            break;\n        }\n\n        return offset - startOffset;\n      }\n\n      function buildComponentData(frame, component) {\n        var lines = [];\n        var blocksPerLine = component.blocksPerLine;\n        var blocksPerColumn = component.blocksPerColumn;\n        var samplesPerLine = blocksPerLine << 3;\n        // Only 1 used per invocation of this function and garbage collected after invocation, so no need to account for its memory footprint.\n        var R = new Int32Array(64), r = new Uint8Array(64);\n\n        // A port of poppler's IDCT method which in turn is taken from:\n        //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n        //   \"Practical Fast 1-D DCT Algorithms with 11 Multiplications\",\n        //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n        //   988-991.\n        function quantizeAndInverse(zz, dataOut, dataIn) {\n          var qt = component.quantizationTable;\n          var v0, v1, v2, v3, v4, v5, v6, v7, t;\n          var p = dataIn;\n          var i;\n\n          // dequant\n          for (i = 0; i < 64; i++)\n            p[i] = zz[i] * qt[i];\n\n          // inverse DCT on rows\n          for (i = 0; i < 8; ++i) {\n            var row = 8 * i;\n\n            // check for all-zero AC coefficients\n            if (p[1 + row] == 0 && p[2 + row] == 0 && p[3 + row] == 0 &&\n                p[4 + row] == 0 && p[5 + row] == 0 && p[6 + row] == 0 &&\n                p[7 + row] == 0) {\n              t = (dctSqrt2 * p[0 + row] + 512) >> 10;\n              p[0 + row] = t;\n              p[1 + row] = t;\n              p[2 + row] = t;\n              p[3 + row] = t;\n              p[4 + row] = t;\n              p[5 + row] = t;\n              p[6 + row] = t;\n              p[7 + row] = t;\n              continue;\n            }\n\n            // stage 4\n            v0 = (dctSqrt2 * p[0 + row] + 128) >> 8;\n            v1 = (dctSqrt2 * p[4 + row] + 128) >> 8;\n            v2 = p[2 + row];\n            v3 = p[6 + row];\n            v4 = (dctSqrt1d2 * (p[1 + row] - p[7 + row]) + 128) >> 8;\n            v7 = (dctSqrt1d2 * (p[1 + row] + p[7 + row]) + 128) >> 8;\n            v5 = p[3 + row] << 4;\n            v6 = p[5 + row] << 4;\n\n            // stage 3\n            t = (v0 - v1+ 1) >> 1;\n            v0 = (v0 + v1 + 1) >> 1;\n            v1 = t;\n            t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n            v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n            v3 = t;\n            t = (v4 - v6 + 1) >> 1;\n            v4 = (v4 + v6 + 1) >> 1;\n            v6 = t;\n            t = (v7 + v5 + 1) >> 1;\n            v5 = (v7 - v5 + 1) >> 1;\n            v7 = t;\n\n            // stage 2\n            t = (v0 - v3 + 1) >> 1;\n            v0 = (v0 + v3 + 1) >> 1;\n            v3 = t;\n            t = (v1 - v2 + 1) >> 1;\n            v1 = (v1 + v2 + 1) >> 1;\n            v2 = t;\n            t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n            v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n            v7 = t;\n            t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n            v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n            v6 = t;\n\n            // stage 1\n            p[0 + row] = v0 + v7;\n            p[7 + row] = v0 - v7;\n            p[1 + row] = v1 + v6;\n            p[6 + row] = v1 - v6;\n            p[2 + row] = v2 + v5;\n            p[5 + row] = v2 - v5;\n            p[3 + row] = v3 + v4;\n            p[4 + row] = v3 - v4;\n          }\n\n          // inverse DCT on columns\n          for (i = 0; i < 8; ++i) {\n            var col = i;\n\n            // check for all-zero AC coefficients\n            if (p[1*8 + col] == 0 && p[2*8 + col] == 0 && p[3*8 + col] == 0 &&\n                p[4*8 + col] == 0 && p[5*8 + col] == 0 && p[6*8 + col] == 0 &&\n                p[7*8 + col] == 0) {\n              t = (dctSqrt2 * dataIn[i+0] + 8192) >> 14;\n              p[0*8 + col] = t;\n              p[1*8 + col] = t;\n              p[2*8 + col] = t;\n              p[3*8 + col] = t;\n              p[4*8 + col] = t;\n              p[5*8 + col] = t;\n              p[6*8 + col] = t;\n              p[7*8 + col] = t;\n              continue;\n            }\n\n            // stage 4\n            v0 = (dctSqrt2 * p[0*8 + col] + 2048) >> 12;\n            v1 = (dctSqrt2 * p[4*8 + col] + 2048) >> 12;\n            v2 = p[2*8 + col];\n            v3 = p[6*8 + col];\n            v4 = (dctSqrt1d2 * (p[1*8 + col] - p[7*8 + col]) + 2048) >> 12;\n            v7 = (dctSqrt1d2 * (p[1*8 + col] + p[7*8 + col]) + 2048) >> 12;\n            v5 = p[3*8 + col];\n            v6 = p[5*8 + col];\n\n            // stage 3\n            t = (v0 - v1 + 1) >> 1;\n            v0 = (v0 + v1 + 1) >> 1;\n            v1 = t;\n            t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n            v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n            v3 = t;\n            t = (v4 - v6 + 1) >> 1;\n            v4 = (v4 + v6 + 1) >> 1;\n            v6 = t;\n            t = (v7 + v5 + 1) >> 1;\n            v5 = (v7 - v5 + 1) >> 1;\n            v7 = t;\n\n            // stage 2\n            t = (v0 - v3 + 1) >> 1;\n            v0 = (v0 + v3 + 1) >> 1;\n            v3 = t;\n            t = (v1 - v2 + 1) >> 1;\n            v1 = (v1 + v2 + 1) >> 1;\n            v2 = t;\n            t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n            v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n            v7 = t;\n            t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n            v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n            v6 = t;\n\n            // stage 1\n            p[0*8 + col] = v0 + v7;\n            p[7*8 + col] = v0 - v7;\n            p[1*8 + col] = v1 + v6;\n            p[6*8 + col] = v1 - v6;\n            p[2*8 + col] = v2 + v5;\n            p[5*8 + col] = v2 - v5;\n            p[3*8 + col] = v3 + v4;\n            p[4*8 + col] = v3 - v4;\n          }\n\n          // convert to 8-bit integers\n          for (i = 0; i < 64; ++i) {\n            var sample = 128 + ((p[i] + 8) >> 4);\n            dataOut[i] = sample < 0 ? 0 : sample > 0xFF ? 0xFF : sample;\n          }\n        }\n\n        requestMemoryAllocation(samplesPerLine * blocksPerColumn * 8);\n\n        var i, j;\n        for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n          var scanLine = blockRow << 3;\n          for (i = 0; i < 8; i++)\n            lines.push(new Uint8Array(samplesPerLine));\n          for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n            quantizeAndInverse(component.blocks[blockRow][blockCol], r, R);\n\n            var offset = 0, sample = blockCol << 3;\n            for (j = 0; j < 8; j++) {\n              var line = lines[scanLine + j];\n              for (i = 0; i < 8; i++)\n                line[sample + i] = r[offset++];\n            }\n          }\n        }\n        return lines;\n      }\n\n      function clampTo8bit(a) {\n        return a < 0 ? 0 : a > 255 ? 255 : a;\n      }\n\n      constructor.prototype = {\n        load: function load(path) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", path, true);\n          xhr.responseType = \"arraybuffer\";\n          xhr.onload = (function() {\n            // TODO catch parse error\n            var data = new Uint8Array(xhr.response || xhr.mozResponseArrayBuffer);\n            this.parse(data);\n            if (this.onload)\n              this.onload();\n          }).bind(this);\n          xhr.send(null);\n        },\n        parse: function parse(data) {\n          var maxResolutionInPixels = this.opts.maxResolutionInMP * 1000 * 1000;\n          var offset = 0; data.length;\n          function readUint16() {\n            var value = (data[offset] << 8) | data[offset + 1];\n            offset += 2;\n            return value;\n          }\n          function readDataBlock() {\n            var length = readUint16();\n            var array = data.subarray(offset, offset + length - 2);\n            offset += array.length;\n            return array;\n          }\n          function prepareComponents(frame) {\n            var maxH = 0, maxV = 0;\n            var component, componentId;\n            for (componentId in frame.components) {\n              if (frame.components.hasOwnProperty(componentId)) {\n                component = frame.components[componentId];\n                if (maxH < component.h) maxH = component.h;\n                if (maxV < component.v) maxV = component.v;\n              }\n            }\n            var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / maxH);\n            var mcusPerColumn = Math.ceil(frame.scanLines / 8 / maxV);\n            for (componentId in frame.components) {\n              if (frame.components.hasOwnProperty(componentId)) {\n                component = frame.components[componentId];\n                var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / maxH);\n                var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines  / 8) * component.v / maxV);\n                var blocksPerLineForMcu = mcusPerLine * component.h;\n                var blocksPerColumnForMcu = mcusPerColumn * component.v;\n                var blocksToAllocate = blocksPerColumnForMcu * blocksPerLineForMcu;\n                var blocks = [];\n\n                // Each block is a Int32Array of length 64 (4 x 64 = 256 bytes)\n                requestMemoryAllocation(blocksToAllocate * 256);\n\n                for (var i = 0; i < blocksPerColumnForMcu; i++) {\n                  var row = [];\n                  for (var j = 0; j < blocksPerLineForMcu; j++)\n                    row.push(new Int32Array(64));\n                  blocks.push(row);\n                }\n                component.blocksPerLine = blocksPerLine;\n                component.blocksPerColumn = blocksPerColumn;\n                component.blocks = blocks;\n              }\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            frame.mcusPerLine = mcusPerLine;\n            frame.mcusPerColumn = mcusPerColumn;\n          }\n          var jfif = null;\n          var adobe = null;\n          var frame, resetInterval;\n          var quantizationTables = [], frames = [];\n          var huffmanTablesAC = [], huffmanTablesDC = [];\n          var fileMarker = readUint16();\n          this.comments = [];\n          if (fileMarker != 0xFFD8) { // SOI (Start of Image)\n            throw new Error(\"SOI not found\");\n          }\n\n          fileMarker = readUint16();\n          while (fileMarker != 0xFFD9) { // EOI (End of image)\n            var i, j;\n            switch(fileMarker) {\n              case 0xFF00: break;\n              case 0xFFE0: // APP0 (Application Specific)\n              case 0xFFE1: // APP1\n              case 0xFFE2: // APP2\n              case 0xFFE3: // APP3\n              case 0xFFE4: // APP4\n              case 0xFFE5: // APP5\n              case 0xFFE6: // APP6\n              case 0xFFE7: // APP7\n              case 0xFFE8: // APP8\n              case 0xFFE9: // APP9\n              case 0xFFEA: // APP10\n              case 0xFFEB: // APP11\n              case 0xFFEC: // APP12\n              case 0xFFED: // APP13\n              case 0xFFEE: // APP14\n              case 0xFFEF: // APP15\n              case 0xFFFE: // COM (Comment)\n                var appData = readDataBlock();\n\n                if (fileMarker === 0xFFFE) {\n                  var comment = String.fromCharCode.apply(null, appData);\n                  this.comments.push(comment);\n                }\n\n                if (fileMarker === 0xFFE0) {\n                  if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 &&\n                    appData[3] === 0x46 && appData[4] === 0) { // 'JFIF\\x00'\n                    jfif = {\n                      version: { major: appData[5], minor: appData[6] },\n                      densityUnits: appData[7],\n                      xDensity: (appData[8] << 8) | appData[9],\n                      yDensity: (appData[10] << 8) | appData[11],\n                      thumbWidth: appData[12],\n                      thumbHeight: appData[13],\n                      thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                    };\n                  }\n                }\n                // TODO APP1 - Exif\n                if (fileMarker === 0xFFE1) {\n                  if (appData[0] === 0x45 &&\n                    appData[1] === 0x78 &&\n                    appData[2] === 0x69 &&\n                    appData[3] === 0x66 &&\n                    appData[4] === 0) { // 'EXIF\\x00'\n                    this.exifBuffer = appData.subarray(5, appData.length);\n                  }\n                }\n\n                if (fileMarker === 0xFFEE) {\n                  if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F &&\n                    appData[3] === 0x62 && appData[4] === 0x65 && appData[5] === 0) { // 'Adobe\\x00'\n                    adobe = {\n                      version: appData[6],\n                      flags0: (appData[7] << 8) | appData[8],\n                      flags1: (appData[9] << 8) | appData[10],\n                      transformCode: appData[11]\n                    };\n                  }\n                }\n                break;\n\n              case 0xFFDB: // DQT (Define Quantization Tables)\n                var quantizationTablesLength = readUint16();\n                var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n                while (offset < quantizationTablesEnd) {\n                  var quantizationTableSpec = data[offset++];\n                  requestMemoryAllocation(64 * 4);\n                  var tableData = new Int32Array(64);\n                  if ((quantizationTableSpec >> 4) === 0) { // 8 bit values\n                    for (j = 0; j < 64; j++) {\n                      var z = dctZigZag[j];\n                      tableData[z] = data[offset++];\n                    }\n                  } else if ((quantizationTableSpec >> 4) === 1) { //16 bit\n                    for (j = 0; j < 64; j++) {\n                      var z = dctZigZag[j];\n                      tableData[z] = readUint16();\n                    }\n                  } else\n                    throw new Error(\"DQT: invalid table spec\");\n                  quantizationTables[quantizationTableSpec & 15] = tableData;\n                }\n                break;\n\n              case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)\n              case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)\n              case 0xFFC2: // SOF2 (Start of Frame, Progressive DCT)\n                readUint16(); // skip data length\n                frame = {};\n                frame.extended = (fileMarker === 0xFFC1);\n                frame.progressive = (fileMarker === 0xFFC2);\n                frame.precision = data[offset++];\n                frame.scanLines = readUint16();\n                frame.samplesPerLine = readUint16();\n                frame.components = {};\n                frame.componentsOrder = [];\n\n                var pixelsInFrame = frame.scanLines * frame.samplesPerLine;\n                if (pixelsInFrame > maxResolutionInPixels) {\n                  var exceededAmount = Math.ceil((pixelsInFrame - maxResolutionInPixels) / 1e6);\n                  throw new Error(`maxResolutionInMP limit exceeded by ${exceededAmount}MP`);\n                }\n\n                var componentsCount = data[offset++], componentId;\n                for (i = 0; i < componentsCount; i++) {\n                  componentId = data[offset];\n                  var h = data[offset + 1] >> 4;\n                  var v = data[offset + 1] & 15;\n                  var qId = data[offset + 2];\n                  frame.componentsOrder.push(componentId);\n                  frame.components[componentId] = {\n                    h: h,\n                    v: v,\n                    quantizationIdx: qId\n                  };\n                  offset += 3;\n                }\n                prepareComponents(frame);\n                frames.push(frame);\n                break;\n\n              case 0xFFC4: // DHT (Define Huffman Tables)\n                var huffmanLength = readUint16();\n                for (i = 2; i < huffmanLength;) {\n                  var huffmanTableSpec = data[offset++];\n                  var codeLengths = new Uint8Array(16);\n                  var codeLengthSum = 0;\n                  for (j = 0; j < 16; j++, offset++) {\n                    codeLengthSum += (codeLengths[j] = data[offset]);\n                  }\n                  requestMemoryAllocation(16 + codeLengthSum);\n                  var huffmanValues = new Uint8Array(codeLengthSum);\n                  for (j = 0; j < codeLengthSum; j++, offset++)\n                    huffmanValues[j] = data[offset];\n                  i += 17 + codeLengthSum;\n\n                  ((huffmanTableSpec >> 4) === 0 ?\n                    huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] =\n                    buildHuffmanTable(codeLengths, huffmanValues);\n                }\n                break;\n\n              case 0xFFDD: // DRI (Define Restart Interval)\n                readUint16(); // skip data length\n                resetInterval = readUint16();\n                break;\n\n              case 0xFFDA: // SOS (Start of Scan)\n                readUint16();\n                var selectorsCount = data[offset++];\n                var components = [], component;\n                for (i = 0; i < selectorsCount; i++) {\n                  component = frame.components[data[offset++]];\n                  var tableSpec = data[offset++];\n                  component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n                  component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n                  components.push(component);\n                }\n                var spectralStart = data[offset++];\n                var spectralEnd = data[offset++];\n                var successiveApproximation = data[offset++];\n                var processed = decodeScan(data, offset,\n                  frame, components, resetInterval,\n                  spectralStart, spectralEnd,\n                  successiveApproximation >> 4, successiveApproximation & 15, this.opts);\n                offset += processed;\n                break;\n\n              case 0xFFFF: // Fill bytes\n                if (data[offset] !== 0xFF) { // Avoid skipping a valid marker.\n                  offset--;\n                }\n                break;\n\n              default:\n                if (data[offset - 3] == 0xFF &&\n                    data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n                  // could be incorrect encoding -- last 0xFF byte of the previous\n                  // block was eaten by the encoder\n                  offset -= 3;\n                  break;\n                }\n                throw new Error(\"unknown JPEG marker \" + fileMarker.toString(16));\n            }\n            fileMarker = readUint16();\n          }\n          if (frames.length != 1)\n            throw new Error(\"only single frame JPEGs supported\");\n\n          // set each frame's components quantization table\n          for (var i = 0; i < frames.length; i++) {\n            var cp = frames[i].components;\n            for (var j in cp) {\n              cp[j].quantizationTable = quantizationTables[cp[j].quantizationIdx];\n              delete cp[j].quantizationIdx;\n            }\n          }\n\n          this.width = frame.samplesPerLine;\n          this.height = frame.scanLines;\n          this.jfif = jfif;\n          this.adobe = adobe;\n          this.components = [];\n          for (var i = 0; i < frame.componentsOrder.length; i++) {\n            var component = frame.components[frame.componentsOrder[i]];\n            this.components.push({\n              lines: buildComponentData(frame, component),\n              scaleX: component.h / frame.maxH,\n              scaleY: component.v / frame.maxV\n            });\n          }\n        },\n        getData: function getData(width, height) {\n          var scaleX = this.width / width, scaleY = this.height / height;\n\n          var component1, component2, component3, component4;\n          var component1Line, component2Line, component3Line, component4Line;\n          var x, y;\n          var offset = 0;\n          var Y, Cb, Cr, K, C, M, Ye, R, G, B;\n          var colorTransform;\n          var dataLength = width * height * this.components.length;\n          requestMemoryAllocation(dataLength);\n          var data = new Uint8Array(dataLength);\n          switch (this.components.length) {\n            case 1:\n              component1 = this.components[0];\n              for (y = 0; y < height; y++) {\n                component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n                for (x = 0; x < width; x++) {\n                  Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n\n                  data[offset++] = Y;\n                }\n              }\n              break;\n            case 2:\n              // PDF might compress two component data in custom colorspace\n              component1 = this.components[0];\n              component2 = this.components[1];\n              for (y = 0; y < height; y++) {\n                component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n                component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n                for (x = 0; x < width; x++) {\n                  Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n                  data[offset++] = Y;\n                  Y = component2Line[0 | (x * component2.scaleX * scaleX)];\n                  data[offset++] = Y;\n                }\n              }\n              break;\n            case 3:\n              // The default transform for three components is true\n              colorTransform = true;\n              // The adobe transform marker overrides any previous setting\n              if (this.adobe && this.adobe.transformCode)\n                colorTransform = true;\n              else if (typeof this.opts.colorTransform !== 'undefined')\n                colorTransform = !!this.opts.colorTransform;\n\n              component1 = this.components[0];\n              component2 = this.components[1];\n              component3 = this.components[2];\n              for (y = 0; y < height; y++) {\n                component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n                component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n                component3Line = component3.lines[0 | (y * component3.scaleY * scaleY)];\n                for (x = 0; x < width; x++) {\n                  if (!colorTransform) {\n                    R = component1Line[0 | (x * component1.scaleX * scaleX)];\n                    G = component2Line[0 | (x * component2.scaleX * scaleX)];\n                    B = component3Line[0 | (x * component3.scaleX * scaleX)];\n                  } else {\n                    Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n                    Cb = component2Line[0 | (x * component2.scaleX * scaleX)];\n                    Cr = component3Line[0 | (x * component3.scaleX * scaleX)];\n\n                    R = clampTo8bit(Y + 1.402 * (Cr - 128));\n                    G = clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));\n                    B = clampTo8bit(Y + 1.772 * (Cb - 128));\n                  }\n\n                  data[offset++] = R;\n                  data[offset++] = G;\n                  data[offset++] = B;\n                }\n              }\n              break;\n            case 4:\n              if (!this.adobe)\n                throw new Error('Unsupported color mode (4 components)');\n              // The default transform for four components is false\n              colorTransform = false;\n              // The adobe transform marker overrides any previous setting\n              if (this.adobe && this.adobe.transformCode)\n                colorTransform = true;\n              else if (typeof this.opts.colorTransform !== 'undefined')\n                colorTransform = !!this.opts.colorTransform;\n\n              component1 = this.components[0];\n              component2 = this.components[1];\n              component3 = this.components[2];\n              component4 = this.components[3];\n              for (y = 0; y < height; y++) {\n                component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n                component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n                component3Line = component3.lines[0 | (y * component3.scaleY * scaleY)];\n                component4Line = component4.lines[0 | (y * component4.scaleY * scaleY)];\n                for (x = 0; x < width; x++) {\n                  if (!colorTransform) {\n                    C = component1Line[0 | (x * component1.scaleX * scaleX)];\n                    M = component2Line[0 | (x * component2.scaleX * scaleX)];\n                    Ye = component3Line[0 | (x * component3.scaleX * scaleX)];\n                    K = component4Line[0 | (x * component4.scaleX * scaleX)];\n                  } else {\n                    Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n                    Cb = component2Line[0 | (x * component2.scaleX * scaleX)];\n                    Cr = component3Line[0 | (x * component3.scaleX * scaleX)];\n                    K = component4Line[0 | (x * component4.scaleX * scaleX)];\n\n                    C = 255 - clampTo8bit(Y + 1.402 * (Cr - 128));\n                    M = 255 - clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));\n                    Ye = 255 - clampTo8bit(Y + 1.772 * (Cb - 128));\n                  }\n                  data[offset++] = 255-C;\n                  data[offset++] = 255-M;\n                  data[offset++] = 255-Ye;\n                  data[offset++] = 255-K;\n                }\n              }\n              break;\n            default:\n              throw new Error('Unsupported color mode');\n          }\n          return data;\n        },\n        copyToImageData: function copyToImageData(imageData, formatAsRGBA) {\n          var width = imageData.width, height = imageData.height;\n          var imageDataArray = imageData.data;\n          var data = this.getData(width, height);\n          var i = 0, j = 0, x, y;\n          var Y, K, C, M, R, G, B;\n          switch (this.components.length) {\n            case 1:\n              for (y = 0; y < height; y++) {\n                for (x = 0; x < width; x++) {\n                  Y = data[i++];\n\n                  imageDataArray[j++] = Y;\n                  imageDataArray[j++] = Y;\n                  imageDataArray[j++] = Y;\n                  if (formatAsRGBA) {\n                    imageDataArray[j++] = 255;\n                  }\n                }\n              }\n              break;\n            case 3:\n              for (y = 0; y < height; y++) {\n                for (x = 0; x < width; x++) {\n                  R = data[i++];\n                  G = data[i++];\n                  B = data[i++];\n\n                  imageDataArray[j++] = R;\n                  imageDataArray[j++] = G;\n                  imageDataArray[j++] = B;\n                  if (formatAsRGBA) {\n                    imageDataArray[j++] = 255;\n                  }\n                }\n              }\n              break;\n            case 4:\n              for (y = 0; y < height; y++) {\n                for (x = 0; x < width; x++) {\n                  C = data[i++];\n                  M = data[i++];\n                  Y = data[i++];\n                  K = data[i++];\n\n                  R = 255 - clampTo8bit(C * (1 - K / 255) + K);\n                  G = 255 - clampTo8bit(M * (1 - K / 255) + K);\n                  B = 255 - clampTo8bit(Y * (1 - K / 255) + K);\n\n                  imageDataArray[j++] = R;\n                  imageDataArray[j++] = G;\n                  imageDataArray[j++] = B;\n                  if (formatAsRGBA) {\n                    imageDataArray[j++] = 255;\n                  }\n                }\n              }\n              break;\n            default:\n              throw new Error('Unsupported color mode');\n          }\n        }\n      };\n\n\n      // We cap the amount of memory used by jpeg-js to avoid unexpected OOMs from untrusted content.\n      var totalBytesAllocated = 0;\n      var maxMemoryUsageBytes = 0;\n      function requestMemoryAllocation(increaseAmount = 0) {\n        var totalMemoryImpactBytes = totalBytesAllocated + increaseAmount;\n        if (totalMemoryImpactBytes > maxMemoryUsageBytes) {\n          var exceededAmount = Math.ceil((totalMemoryImpactBytes - maxMemoryUsageBytes) / 1024 / 1024);\n          throw new Error(`maxMemoryUsageInMB limit exceeded by at least ${exceededAmount}MB`);\n        }\n\n        totalBytesAllocated = totalMemoryImpactBytes;\n      }\n\n      constructor.resetMaxMemoryUsage = function (maxMemoryUsageBytes_) {\n        totalBytesAllocated = 0;\n        maxMemoryUsageBytes = maxMemoryUsageBytes_;\n      };\n\n      constructor.getBytesAllocated = function () {\n        return totalBytesAllocated;\n      };\n\n      constructor.requestMemoryAllocation = requestMemoryAllocation;\n\n      return constructor;\n    })();\n\n    {\n    \tmodule.exports = decode;\n    }\n\n    function decode(jpegData, userOpts = {}) {\n      var defaultOpts = {\n        // \"undefined\" means \"Choose whether to transform colors based on the image\u2019s color model.\"\n        colorTransform: undefined,\n        useTArray: false,\n        formatAsRGBA: true,\n        tolerantDecoding: true,\n        maxResolutionInMP: 100, // Don't decode more than 100 megapixels\n        maxMemoryUsageInMB: 512, // Don't decode if memory footprint is more than 512MB\n      };\n\n      var opts = {...defaultOpts, ...userOpts};\n      var arr = new Uint8Array(jpegData);\n      var decoder = new JpegImage();\n      decoder.opts = opts;\n      // If this constructor ever supports async decoding this will need to be done differently.\n      // Until then, treating as singleton limit is fine.\n      JpegImage.resetMaxMemoryUsage(opts.maxMemoryUsageInMB * 1024 * 1024);\n      decoder.parse(arr);\n\n      var channels = (opts.formatAsRGBA) ? 4 : 3;\n      var bytesNeeded = decoder.width * decoder.height * channels;\n      try {\n        JpegImage.requestMemoryAllocation(bytesNeeded);\n        var image = {\n          width: decoder.width,\n          height: decoder.height,\n          exifBuffer: decoder.exifBuffer,\n          data: opts.useTArray ?\n            new Uint8Array(bytesNeeded) :\n            new Buffer(bytesNeeded)\n        };\n        if(decoder.comments.length > 0) {\n          image[\"comments\"] = decoder.comments;\n        }\n      } catch (err){\n        if (err instanceof RangeError){\n          throw new Error(\"Could not allocate enough memory for the image. \" +\n                          \"Required: \" + bytesNeeded);\n        } else {\n          throw err;\n        }\n      }\n\n      decoder.copyToImageData(image, opts.formatAsRGBA);\n\n      return image;\n    }\n    });\n\n    var jpegJs = {\n      encode: encoder,\n      decode: decoder\n    };\n\n    function make (w,h,options) {\n        return new Bitmap(w,h,options)\n    }\n\n    /**\n     * Encode the PNG image to output stream\n     *\n     * @param {Bitmap} bitmap    An instance of {@link Bitmap} to be encoded to PNG, `bitmap.data` must be a buffer of raw PNG data\n     * @param {Stream} outstream The stream to write the PNG file to\n     *\n     * @returns {Promise<void>}\n     */\n    function encodePNGToStream(bitmap, outstream) {\n        return new Promise((res,rej)=>{\n            if(!bitmap.hasOwnProperty('data') || !bitmap.hasOwnProperty('width') || !bitmap.hasOwnProperty('height')) {\n                return rej(new TypeError('Invalid bitmap image provided'));\n            }\n\n            const png$1 = new png.PNG({\n                width: bitmap.width,\n                height: bitmap.height\n            });\n\n            for(let i=0; i<bitmap.width; i++) {\n                for(let j=0; j<bitmap.height; j++) {\n                    const rgba = bitmap.getPixelRGBA(i, j);\n                    const n = (j * bitmap.width + i) * 4;\n                    const bytes = getBytesBigEndian(rgba);\n                    for(let k=0; k<4; k++) {\n                        png$1.data[n+k] = bytes[k];\n                    }\n                }\n            }\n\n            png$1\n                .on('error', (err) => { rej(err); })\n                .pack()\n                .pipe(outstream)\n                .on('finish', () => { res(); })\n                .on('error', (err) => { rej(err); });\n        });\n    }\n\n\n    /**\n     * Decode PNG From Stream\n     *\n     * Decode a PNG file from an incoming readable stream\n     *\n     * @param {Stream} instream A readable stream containing raw PNG data\n     *\n     * @returns {Promise<Bitmap>}\n     */\n    function decodePNGFromStream(instream) {\n        return new Promise((res,rej)=>{\n            instream.pipe(new png.PNG())\n                .on(\"parsed\", function() {\n                    const bitmap = new Bitmap(this.width, this.height,{});\n                    for(let i=0; i<bitmap.data.length; i++) {\n                        bitmap.data[i] = this.data[i];\n                    }\n                    res(bitmap);\n                }).on(\"error\", function(err) {\n                rej(err);\n            });\n        })\n    }\n\n    /**\n     * Encode JPEG To Stream\n     *\n     * Encode the JPEG image to output stream\n     *\n     * @param {Bitmap} img       An instance of {@link Bitmap} to be encoded to JPEG, `img.data` must be a buffer of raw JPEG data\n     * @param {Stream} outstream The stream to write the raw JPEG buffer to\n     * @param {Int} Number between 0 and 100 setting the JPEG quality\n     * @returns {Promise<void>}\n     */\n    function encodeJPEGToStream(img, outstream, quality) {\n        quality = quality || 90;\n        return new Promise((res,rej)=> {\n            if(!img.hasOwnProperty('data') || !img.hasOwnProperty('width') || !img.hasOwnProperty('height')) {\n                return rej(new TypeError('Invalid bitmap image provided'));\n            }\n            const data = {\n                data: img.data,\n                width: img.width,\n                height: img.height\n            };\n            outstream.on('error', (err) => rej(err));\n            outstream.write(jpegJs.encode(data, quality).data, () => {\n                outstream.end();\n                res();\n            });\n        });\n    }\n\n    /**\n     * Decode JPEG From Stream\n     *\n     * Decode a JPEG image from an incoming stream of data\n     *\n     * @param {Stream} data A readable stream to decode JPEG data from\n     *\n     * @returns {Promise<Bitmap>}\n     */\n    function decodeJPEGFromStream(data) {\n        return new Promise((res,rej)=>{\n            try {\n                const chunks = [];\n                data.on('data', chunk => chunks.push(chunk));\n                data.on('end',() => {\n                    const buf = Buffer.concat(chunks);\n                    let rawImageData = null;\n                    try {\n                        rawImageData = jpegJs.decode(buf);\n                    } catch(err) {\n                        rej(err);\n                        return\n                    }\n                    const bitmap = new Bitmap(rawImageData.width, rawImageData.height,{});\n                    for (let x_axis = 0; x_axis < rawImageData.width; x_axis++) {\n                        for (let y_axis = 0; y_axis < rawImageData.height; y_axis++) {\n                            const n = (y_axis * rawImageData.width + x_axis) * 4;\n                            bitmap.setPixelRGBA_i(x_axis, y_axis,\n                                rawImageData.data[n + 0],\n                                rawImageData.data[n + 1],\n                                rawImageData.data[n + 2],\n                                rawImageData.data[n + 3]\n                            );\n                        }\n                    }\n                    res(bitmap);\n                });\n                data.on(\"error\", (err) => {\n                    rej(err);\n                });\n            } catch (e) {\n                console.log(e);\n                rej(e);\n            }\n        })\n    }\n\n    exports.debug_list_of_fonts = debug_list_of_fonts;\n    exports.decodeJPEGFromStream = decodeJPEGFromStream;\n    exports.decodePNGFromStream = decodePNGFromStream;\n    exports.encodeJPEGToStream = encodeJPEGToStream;\n    exports.encodePNGToStream = encodePNGToStream;\n    exports.make = make;\n    exports.measureText = measureText;\n    exports.processTextPath = processTextPath;\n    exports.registerFont = registerFont;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "/**\n * Fuse.js v6.6.2 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2022 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  Object.defineProperty(subClass, \"prototype\", {\n    value: Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    }),\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction isArray(value) {\n  return !Array.isArray ? getTag(value) === '[object Array]' : Array.isArray(value);\n} // Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\n\nvar INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction isNumber(value) {\n  return typeof value === 'number';\n} // Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\n\nfunction isBoolean(value) {\n  return value === true || value === false || isObjectLike(value) && getTag(value) == '[object Boolean]';\n}\nfunction isObject(value) {\n  return _typeof(value) === 'object';\n} // Checks if `value` is object-like.\n\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null;\n}\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\nfunction isBlank(value) {\n  return !value.trim().length;\n} // Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\n\nfunction getTag(value) {\n  return value == null ? value === undefined ? '[object Undefined]' : '[object Null]' : Object.prototype.toString.call(value);\n}\n\nvar EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\nvar INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\nvar LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = function LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key) {\n  return \"Invalid value for key \".concat(key);\n};\nvar PATTERN_LENGTH_TOO_LARGE = function PATTERN_LENGTH_TOO_LARGE(max) {\n  return \"Pattern length exceeds max of \".concat(max, \".\");\n};\nvar MISSING_KEY_PROPERTY = function MISSING_KEY_PROPERTY(name) {\n  return \"Missing \".concat(name, \" property in key\");\n};\nvar INVALID_KEY_WEIGHT_VALUE = function INVALID_KEY_WEIGHT_VALUE(key) {\n  return \"Property 'weight' in key '\".concat(key, \"' must be a positive integer\");\n};\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar KeyStore = /*#__PURE__*/function () {\n  function KeyStore(keys) {\n    var _this = this;\n\n    _classCallCheck(this, KeyStore);\n\n    this._keys = [];\n    this._keyMap = {};\n    var totalWeight = 0;\n    keys.forEach(function (key) {\n      var obj = createKey(key);\n      totalWeight += obj.weight;\n\n      _this._keys.push(obj);\n\n      _this._keyMap[obj.id] = obj;\n      totalWeight += obj.weight;\n    }); // Normalize weights so that their sum is equal to 1\n\n    this._keys.forEach(function (key) {\n      key.weight /= totalWeight;\n    });\n  }\n\n  _createClass(KeyStore, [{\n    key: \"get\",\n    value: function get(keyId) {\n      return this._keyMap[keyId];\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return this._keys;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return JSON.stringify(this._keys);\n    }\n  }]);\n\n  return KeyStore;\n}();\nfunction createKey(key) {\n  var path = null;\n  var id = null;\n  var src = null;\n  var weight = 1;\n  var getFn = null;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'));\n    }\n\n    var name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name));\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n    getFn = key.getFn;\n  }\n\n  return {\n    path: path,\n    id: id,\n    weight: weight,\n    src: src,\n    getFn: getFn\n  };\n}\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.');\n}\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key;\n}\n\nfunction get(obj, path) {\n  var list = [];\n  var arr = false;\n\n  var deepGet = function deepGet(obj, path, index) {\n    if (!isDefined(obj)) {\n      return;\n    }\n\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      var key = path[index];\n      var value = obj[key];\n\n      if (!isDefined(value)) {\n        return;\n      } // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n\n\n      if (index === path.length - 1 && (isString(value) || isNumber(value) || isBoolean(value))) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true; // Search each item in the array.\n\n        for (var i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  }; // Backwards compatibility (since path used to be a string)\n\n\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n  return arr ? list : list[0];\n}\n\nvar MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\nvar BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: function sortFn(a, b) {\n    return a.score === b.score ? a.idx < b.idx ? -1 : 1 : a.score < b.score ? -1 : 1;\n  }\n};\nvar FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\nvar AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\nvar Config = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, BasicOptions), MatchOptions), FuzzyOptions), AdvancedOptions);\n\nvar SPACE = /[^ ]+/g; // Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\n\nfunction norm() {\n  var weight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var mantissa = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  var cache = new Map();\n  var m = Math.pow(10, mantissa);\n  return {\n    get: function get(value) {\n      var numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens);\n      } // Default function is 1/sqrt(x), weight makes that variable\n\n\n      var norm = 1 / Math.pow(numTokens, 0.5 * weight); // In place of `toFixed(mantissa)`, for faster computation\n\n      var n = parseFloat(Math.round(norm * m) / m);\n      cache.set(numTokens, n);\n      return n;\n    },\n    clear: function clear() {\n      cache.clear();\n    }\n  };\n}\n\nvar FuseIndex = /*#__PURE__*/function () {\n  function FuseIndex() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$getFn = _ref.getFn,\n        getFn = _ref$getFn === void 0 ? Config.getFn : _ref$getFn,\n        _ref$fieldNormWeight = _ref.fieldNormWeight,\n        fieldNormWeight = _ref$fieldNormWeight === void 0 ? Config.fieldNormWeight : _ref$fieldNormWeight;\n\n    _classCallCheck(this, FuseIndex);\n\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n    this.setIndexRecords();\n  }\n\n  _createClass(FuseIndex, [{\n    key: \"setSources\",\n    value: function setSources() {\n      var docs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.docs = docs;\n    }\n  }, {\n    key: \"setIndexRecords\",\n    value: function setIndexRecords() {\n      var records = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.records = records;\n    }\n  }, {\n    key: \"setKeys\",\n    value: function setKeys() {\n      var _this = this;\n\n      var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.keys = keys;\n      this._keysMap = {};\n      keys.forEach(function (key, idx) {\n        _this._keysMap[key.id] = idx;\n      });\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      var _this2 = this;\n\n      if (this.isCreated || !this.docs.length) {\n        return;\n      }\n\n      this.isCreated = true; // List is Array<String>\n\n      if (isString(this.docs[0])) {\n        this.docs.forEach(function (doc, docIndex) {\n          _this2._addString(doc, docIndex);\n        });\n      } else {\n        // List is Array<Object>\n        this.docs.forEach(function (doc, docIndex) {\n          _this2._addObject(doc, docIndex);\n        });\n      }\n\n      this.norm.clear();\n    } // Adds a doc to the end of the index\n\n  }, {\n    key: \"add\",\n    value: function add(doc) {\n      var idx = this.size();\n\n      if (isString(doc)) {\n        this._addString(doc, idx);\n      } else {\n        this._addObject(doc, idx);\n      }\n    } // Removes the doc at the specified index of the index\n\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(idx) {\n      this.records.splice(idx, 1); // Change ref index of every subsquent doc\n\n      for (var i = idx, len = this.size(); i < len; i += 1) {\n        this.records[i].i -= 1;\n      }\n    }\n  }, {\n    key: \"getValueForItemAtKeyId\",\n    value: function getValueForItemAtKeyId(item, keyId) {\n      return item[this._keysMap[keyId]];\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.records.length;\n    }\n  }, {\n    key: \"_addString\",\n    value: function _addString(doc, docIndex) {\n      if (!isDefined(doc) || isBlank(doc)) {\n        return;\n      }\n\n      var record = {\n        v: doc,\n        i: docIndex,\n        n: this.norm.get(doc)\n      };\n      this.records.push(record);\n    }\n  }, {\n    key: \"_addObject\",\n    value: function _addObject(doc, docIndex) {\n      var _this3 = this;\n\n      var record = {\n        i: docIndex,\n        $: {}\n      }; // Iterate over every key (i.e, path), and fetch the value at that key\n\n      this.keys.forEach(function (key, keyIndex) {\n        var value = key.getFn ? key.getFn(doc) : _this3.getFn(doc, key.path);\n\n        if (!isDefined(value)) {\n          return;\n        }\n\n        if (isArray(value)) {\n          (function () {\n            var subRecords = [];\n            var stack = [{\n              nestedArrIndex: -1,\n              value: value\n            }];\n\n            while (stack.length) {\n              var _stack$pop = stack.pop(),\n                  nestedArrIndex = _stack$pop.nestedArrIndex,\n                  _value = _stack$pop.value;\n\n              if (!isDefined(_value)) {\n                continue;\n              }\n\n              if (isString(_value) && !isBlank(_value)) {\n                var subRecord = {\n                  v: _value,\n                  i: nestedArrIndex,\n                  n: _this3.norm.get(_value)\n                };\n                subRecords.push(subRecord);\n              } else if (isArray(_value)) {\n                _value.forEach(function (item, k) {\n                  stack.push({\n                    nestedArrIndex: k,\n                    value: item\n                  });\n                });\n              } else ;\n            }\n\n            record.$[keyIndex] = subRecords;\n          })();\n        } else if (isString(value) && !isBlank(value)) {\n          var subRecord = {\n            v: value,\n            n: _this3.norm.get(value)\n          };\n          record.$[keyIndex] = subRecord;\n        }\n      });\n      this.records.push(record);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        keys: this.keys,\n        records: this.records\n      };\n    }\n  }]);\n\n  return FuseIndex;\n}();\nfunction createIndex(keys, docs) {\n  var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref2$getFn = _ref2.getFn,\n      getFn = _ref2$getFn === void 0 ? Config.getFn : _ref2$getFn,\n      _ref2$fieldNormWeight = _ref2.fieldNormWeight,\n      fieldNormWeight = _ref2$fieldNormWeight === void 0 ? Config.fieldNormWeight : _ref2$fieldNormWeight;\n\n  var myIndex = new FuseIndex({\n    getFn: getFn,\n    fieldNormWeight: fieldNormWeight\n  });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex;\n}\nfunction parseIndex(data) {\n  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref3$getFn = _ref3.getFn,\n      getFn = _ref3$getFn === void 0 ? Config.getFn : _ref3$getFn,\n      _ref3$fieldNormWeight = _ref3.fieldNormWeight,\n      fieldNormWeight = _ref3$fieldNormWeight === void 0 ? Config.fieldNormWeight : _ref3$fieldNormWeight;\n\n  var keys = data.keys,\n      records = data.records;\n  var myIndex = new FuseIndex({\n    getFn: getFn,\n    fieldNormWeight: fieldNormWeight\n  });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex;\n}\n\nfunction computeScore$1(pattern) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$errors = _ref.errors,\n      errors = _ref$errors === void 0 ? 0 : _ref$errors,\n      _ref$currentLocation = _ref.currentLocation,\n      currentLocation = _ref$currentLocation === void 0 ? 0 : _ref$currentLocation,\n      _ref$expectedLocation = _ref.expectedLocation,\n      expectedLocation = _ref$expectedLocation === void 0 ? 0 : _ref$expectedLocation,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === void 0 ? Config.distance : _ref$distance,\n      _ref$ignoreLocation = _ref.ignoreLocation,\n      ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;\n\n  var accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy;\n  }\n\n  var proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy;\n  }\n\n  return accuracy + proximity / distance;\n}\n\nfunction convertMaskToIndices() {\n  var matchmask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var minMatchCharLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Config.minMatchCharLength;\n  var indices = [];\n  var start = -1;\n  var end = -1;\n  var i = 0;\n\n  for (var len = matchmask.length; i < len; i += 1) {\n    var match = matchmask[i];\n\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n\n      start = -1;\n    }\n  } // (i-1 - start) + 1 => i - start\n\n\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices;\n}\n\n// Machine word size\nvar MAX_BITS = 32;\n\nfunction search(text, pattern, patternAlphabet) {\n  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref$location = _ref.location,\n      location = _ref$location === void 0 ? Config.location : _ref$location,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === void 0 ? Config.distance : _ref$distance,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold,\n      _ref$findAllMatches = _ref.findAllMatches,\n      findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches,\n      _ref$minMatchCharLeng = _ref.minMatchCharLength,\n      minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng,\n      _ref$includeMatches = _ref.includeMatches,\n      includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,\n      _ref$ignoreLocation = _ref.ignoreLocation,\n      ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;\n\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS));\n  }\n\n  var patternLen = pattern.length; // Set starting location at beginning text and initialize the alphabet.\n\n  var textLen = text.length; // Handle the case when location > text.length\n\n  var expectedLocation = Math.max(0, Math.min(location, textLen)); // Highest score beyond which we give up.\n\n  var currentThreshold = threshold; // Is there a nearby exact match? (speedup)\n\n  var bestLocation = expectedLocation; // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n\n  var computeMatches = minMatchCharLength > 1 || includeMatches; // A mask of the matches, used for building the indices\n\n  var matchMask = computeMatches ? Array(textLen) : [];\n  var index; // Get all exact matches, here for speed up\n\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    var score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation: expectedLocation,\n      distance: distance,\n      ignoreLocation: ignoreLocation\n    });\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      var i = 0;\n\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  } // Reset the best location\n\n\n  bestLocation = -1;\n  var lastBitArr = [];\n  var finalScore = 1;\n  var binMax = patternLen + textLen;\n  var mask = 1 << patternLen - 1;\n\n  for (var _i = 0; _i < patternLen; _i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    var binMin = 0;\n    var binMid = binMax;\n\n    while (binMin < binMid) {\n      var _score2 = computeScore$1(pattern, {\n        errors: _i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation: expectedLocation,\n        distance: distance,\n        ignoreLocation: ignoreLocation\n      });\n\n      if (_score2 <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    } // Use the result from this iteration as the maximum for the next.\n\n\n    binMax = binMid;\n    var start = Math.max(1, expectedLocation - binMid + 1);\n    var finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen; // Initialize the bit array\n\n    var bitArr = Array(finish + 2);\n    bitArr[finish + 1] = (1 << _i) - 1;\n\n    for (var j = finish; j >= start; j -= 1) {\n      var currentLocation = j - 1;\n      var charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      } // First pass: exact match\n\n\n      bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch; // Subsequent passes: fuzzy match\n\n      if (_i) {\n        bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: _i,\n          currentLocation: currentLocation,\n          expectedLocation: expectedLocation,\n          distance: distance,\n          ignoreLocation: ignoreLocation\n        }); // This match will almost certainly be better than any existing match.\n        // But check anyway.\n\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation; // Already passed `loc`, downhill from here on in.\n\n          if (bestLocation <= expectedLocation) {\n            break;\n          } // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n\n\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    } // No hope for a (better) match at greater error levels.\n\n\n    var _score = computeScore$1(pattern, {\n      errors: _i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation: expectedLocation,\n      distance: distance,\n      ignoreLocation: ignoreLocation\n    });\n\n    if (_score > currentThreshold) {\n      break;\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  var result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    var indices = convertMaskToIndices(matchMask, minMatchCharLength);\n\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result;\n}\n\nfunction createPatternAlphabet(pattern) {\n  var mask = {};\n\n  for (var i = 0, len = pattern.length; i < len; i += 1) {\n    var _char = pattern.charAt(i);\n\n    mask[_char] = (mask[_char] || 0) | 1 << len - i - 1;\n  }\n\n  return mask;\n}\n\nvar BitapSearch = /*#__PURE__*/function () {\n  function BitapSearch(pattern) {\n    var _this = this;\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$location = _ref.location,\n        location = _ref$location === void 0 ? Config.location : _ref$location,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === void 0 ? Config.distance : _ref$distance,\n        _ref$includeMatches = _ref.includeMatches,\n        includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng,\n        _ref$isCaseSensitive = _ref.isCaseSensitive,\n        isCaseSensitive = _ref$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref$isCaseSensitive,\n        _ref$ignoreLocation = _ref.ignoreLocation,\n        ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;\n\n    _classCallCheck(this, BitapSearch);\n\n    this.options = {\n      location: location,\n      threshold: threshold,\n      distance: distance,\n      includeMatches: includeMatches,\n      findAllMatches: findAllMatches,\n      minMatchCharLength: minMatchCharLength,\n      isCaseSensitive: isCaseSensitive,\n      ignoreLocation: ignoreLocation\n    };\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return;\n    }\n\n    var addChunk = function addChunk(pattern, startIndex) {\n      _this.chunks.push({\n        pattern: pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex: startIndex\n      });\n    };\n\n    var len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      var i = 0;\n      var remainder = len % MAX_BITS;\n      var end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        var startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  _createClass(BitapSearch, [{\n    key: \"searchIn\",\n    value: function searchIn(text) {\n      var _this$options = this.options,\n          isCaseSensitive = _this$options.isCaseSensitive,\n          includeMatches = _this$options.includeMatches;\n\n      if (!isCaseSensitive) {\n        text = text.toLowerCase();\n      } // Exact match\n\n\n      if (this.pattern === text) {\n        var _result = {\n          isMatch: true,\n          score: 0\n        };\n\n        if (includeMatches) {\n          _result.indices = [[0, text.length - 1]];\n        }\n\n        return _result;\n      } // Otherwise, use Bitap algorithm\n\n\n      var _this$options2 = this.options,\n          location = _this$options2.location,\n          distance = _this$options2.distance,\n          threshold = _this$options2.threshold,\n          findAllMatches = _this$options2.findAllMatches,\n          minMatchCharLength = _this$options2.minMatchCharLength,\n          ignoreLocation = _this$options2.ignoreLocation;\n      var allIndices = [];\n      var totalScore = 0;\n      var hasMatches = false;\n      this.chunks.forEach(function (_ref2) {\n        var pattern = _ref2.pattern,\n            alphabet = _ref2.alphabet,\n            startIndex = _ref2.startIndex;\n\n        var _search = search(text, pattern, alphabet, {\n          location: location + startIndex,\n          distance: distance,\n          threshold: threshold,\n          findAllMatches: findAllMatches,\n          minMatchCharLength: minMatchCharLength,\n          includeMatches: includeMatches,\n          ignoreLocation: ignoreLocation\n        }),\n            isMatch = _search.isMatch,\n            score = _search.score,\n            indices = _search.indices;\n\n        if (isMatch) {\n          hasMatches = true;\n        }\n\n        totalScore += score;\n\n        if (isMatch && indices) {\n          allIndices = [].concat(_toConsumableArray(allIndices), _toConsumableArray(indices));\n        }\n      });\n      var result = {\n        isMatch: hasMatches,\n        score: hasMatches ? totalScore / this.chunks.length : 1\n      };\n\n      if (hasMatches && includeMatches) {\n        result.indices = allIndices;\n      }\n\n      return result;\n    }\n  }]);\n\n  return BitapSearch;\n}();\n\nvar BaseMatch = /*#__PURE__*/function () {\n  function BaseMatch(pattern) {\n    _classCallCheck(this, BaseMatch);\n\n    this.pattern = pattern;\n  }\n\n  _createClass(BaseMatch, [{\n    key: \"search\",\n    value: function\n      /*text*/\n    search() {}\n  }], [{\n    key: \"isMultiMatch\",\n    value: function isMultiMatch(pattern) {\n      return getMatch(pattern, this.multiRegex);\n    }\n  }, {\n    key: \"isSingleMatch\",\n    value: function isSingleMatch(pattern) {\n      return getMatch(pattern, this.singleRegex);\n    }\n  }]);\n\n  return BaseMatch;\n}();\n\nfunction getMatch(pattern, exp) {\n  var matches = pattern.match(exp);\n  return matches ? matches[1] : null;\n}\n\nvar ExactMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(ExactMatch, _BaseMatch);\n\n  var _super = _createSuper(ExactMatch);\n\n  function ExactMatch(pattern) {\n    _classCallCheck(this, ExactMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(ExactMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var isMatch = text === this.pattern;\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, this.pattern.length - 1]\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'exact';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^=\"(.*)\"$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^=(.*)$/;\n    }\n  }]);\n\n  return ExactMatch;\n}(BaseMatch);\n\nvar InverseExactMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(InverseExactMatch, _BaseMatch);\n\n  var _super = _createSuper(InverseExactMatch);\n\n  function InverseExactMatch(pattern) {\n    _classCallCheck(this, InverseExactMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(InverseExactMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var index = text.indexOf(this.pattern);\n      var isMatch = index === -1;\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, text.length - 1]\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'inverse-exact';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^!\"(.*)\"$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^!(.*)$/;\n    }\n  }]);\n\n  return InverseExactMatch;\n}(BaseMatch);\n\nvar PrefixExactMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(PrefixExactMatch, _BaseMatch);\n\n  var _super = _createSuper(PrefixExactMatch);\n\n  function PrefixExactMatch(pattern) {\n    _classCallCheck(this, PrefixExactMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(PrefixExactMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var isMatch = text.startsWith(this.pattern);\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, this.pattern.length - 1]\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'prefix-exact';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^\\^\"(.*)\"$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^\\^(.*)$/;\n    }\n  }]);\n\n  return PrefixExactMatch;\n}(BaseMatch);\n\nvar InversePrefixExactMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(InversePrefixExactMatch, _BaseMatch);\n\n  var _super = _createSuper(InversePrefixExactMatch);\n\n  function InversePrefixExactMatch(pattern) {\n    _classCallCheck(this, InversePrefixExactMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(InversePrefixExactMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var isMatch = !text.startsWith(this.pattern);\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, text.length - 1]\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'inverse-prefix-exact';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^!\\^\"(.*)\"$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^!\\^(.*)$/;\n    }\n  }]);\n\n  return InversePrefixExactMatch;\n}(BaseMatch);\n\nvar SuffixExactMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(SuffixExactMatch, _BaseMatch);\n\n  var _super = _createSuper(SuffixExactMatch);\n\n  function SuffixExactMatch(pattern) {\n    _classCallCheck(this, SuffixExactMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(SuffixExactMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var isMatch = text.endsWith(this.pattern);\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [text.length - this.pattern.length, text.length - 1]\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'suffix-exact';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^\"(.*)\"\\$$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^(.*)\\$$/;\n    }\n  }]);\n\n  return SuffixExactMatch;\n}(BaseMatch);\n\nvar InverseSuffixExactMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(InverseSuffixExactMatch, _BaseMatch);\n\n  var _super = _createSuper(InverseSuffixExactMatch);\n\n  function InverseSuffixExactMatch(pattern) {\n    _classCallCheck(this, InverseSuffixExactMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(InverseSuffixExactMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var isMatch = !text.endsWith(this.pattern);\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, text.length - 1]\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'inverse-suffix-exact';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^!\"(.*)\"\\$$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^!(.*)\\$$/;\n    }\n  }]);\n\n  return InverseSuffixExactMatch;\n}(BaseMatch);\n\nvar FuzzyMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(FuzzyMatch, _BaseMatch);\n\n  var _super = _createSuper(FuzzyMatch);\n\n  function FuzzyMatch(pattern) {\n    var _this;\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$location = _ref.location,\n        location = _ref$location === void 0 ? Config.location : _ref$location,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === void 0 ? Config.distance : _ref$distance,\n        _ref$includeMatches = _ref.includeMatches,\n        includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng,\n        _ref$isCaseSensitive = _ref.isCaseSensitive,\n        isCaseSensitive = _ref$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref$isCaseSensitive,\n        _ref$ignoreLocation = _ref.ignoreLocation,\n        ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;\n\n    _classCallCheck(this, FuzzyMatch);\n\n    _this = _super.call(this, pattern);\n    _this._bitapSearch = new BitapSearch(pattern, {\n      location: location,\n      threshold: threshold,\n      distance: distance,\n      includeMatches: includeMatches,\n      findAllMatches: findAllMatches,\n      minMatchCharLength: minMatchCharLength,\n      isCaseSensitive: isCaseSensitive,\n      ignoreLocation: ignoreLocation\n    });\n    return _this;\n  }\n\n  _createClass(FuzzyMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      return this._bitapSearch.searchIn(text);\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'fuzzy';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^\"(.*)\"$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^(.*)$/;\n    }\n  }]);\n\n  return FuzzyMatch;\n}(BaseMatch);\n\nvar IncludeMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(IncludeMatch, _BaseMatch);\n\n  var _super = _createSuper(IncludeMatch);\n\n  function IncludeMatch(pattern) {\n    _classCallCheck(this, IncludeMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(IncludeMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var location = 0;\n      var index;\n      var indices = [];\n      var patternLen = this.pattern.length; // Get all exact matches\n\n      while ((index = text.indexOf(this.pattern, location)) > -1) {\n        location = index + patternLen;\n        indices.push([index, location - 1]);\n      }\n\n      var isMatch = !!indices.length;\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: indices\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'include';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^'\"(.*)\"$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^'(.*)$/;\n    }\n  }]);\n\n  return IncludeMatch;\n}(BaseMatch);\n\nvar searchers = [ExactMatch, IncludeMatch, PrefixExactMatch, InversePrefixExactMatch, InverseSuffixExactMatch, SuffixExactMatch, InverseExactMatch, FuzzyMatch];\nvar searchersLen = searchers.length; // Regex to split by spaces, but keep anything in quotes together\n\nvar SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nvar OR_TOKEN = '|'; // Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\n\nfunction parseQuery(pattern) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return pattern.split(OR_TOKEN).map(function (item) {\n    var query = item.trim().split(SPACE_RE).filter(function (item) {\n      return item && !!item.trim();\n    });\n    var results = [];\n\n    for (var i = 0, len = query.length; i < len; i += 1) {\n      var queryItem = query[i]; // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n\n      var found = false;\n      var idx = -1;\n\n      while (!found && ++idx < searchersLen) {\n        var searcher = searchers[idx];\n        var token = searcher.isMultiMatch(queryItem);\n\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue;\n      } // 2. Handle single query matches (i.e, once that are *not* quoted)\n\n\n      idx = -1;\n\n      while (++idx < searchersLen) {\n        var _searcher = searchers[idx];\n\n        var _token = _searcher.isSingleMatch(queryItem);\n\n        if (_token) {\n          results.push(new _searcher(_token, options));\n          break;\n        }\n      }\n    }\n\n    return results;\n  });\n}\n\n// to a singl match\n\nvar MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\n\nvar ExtendedSearch = /*#__PURE__*/function () {\n  function ExtendedSearch(pattern) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$isCaseSensitive = _ref.isCaseSensitive,\n        isCaseSensitive = _ref$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref$isCaseSensitive,\n        _ref$includeMatches = _ref.includeMatches,\n        includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng,\n        _ref$ignoreLocation = _ref.ignoreLocation,\n        ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches,\n        _ref$location = _ref.location,\n        location = _ref$location === void 0 ? Config.location : _ref$location,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === void 0 ? Config.distance : _ref$distance;\n\n    _classCallCheck(this, ExtendedSearch);\n\n    this.query = null;\n    this.options = {\n      isCaseSensitive: isCaseSensitive,\n      includeMatches: includeMatches,\n      minMatchCharLength: minMatchCharLength,\n      findAllMatches: findAllMatches,\n      ignoreLocation: ignoreLocation,\n      location: location,\n      threshold: threshold,\n      distance: distance\n    };\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  _createClass(ExtendedSearch, [{\n    key: \"searchIn\",\n    value: function searchIn(text) {\n      var query = this.query;\n\n      if (!query) {\n        return {\n          isMatch: false,\n          score: 1\n        };\n      }\n\n      var _this$options = this.options,\n          includeMatches = _this$options.includeMatches,\n          isCaseSensitive = _this$options.isCaseSensitive;\n      text = isCaseSensitive ? text : text.toLowerCase();\n      var numMatches = 0;\n      var allIndices = [];\n      var totalScore = 0; // ORs\n\n      for (var i = 0, qLen = query.length; i < qLen; i += 1) {\n        var searchers = query[i]; // Reset indices\n\n        allIndices.length = 0;\n        numMatches = 0; // ANDs\n\n        for (var j = 0, pLen = searchers.length; j < pLen; j += 1) {\n          var searcher = searchers[j];\n\n          var _searcher$search = searcher.search(text),\n              isMatch = _searcher$search.isMatch,\n              indices = _searcher$search.indices,\n              score = _searcher$search.score;\n\n          if (isMatch) {\n            numMatches += 1;\n            totalScore += score;\n\n            if (includeMatches) {\n              var type = searcher.constructor.type;\n\n              if (MultiMatchSet.has(type)) {\n                allIndices = [].concat(_toConsumableArray(allIndices), _toConsumableArray(indices));\n              } else {\n                allIndices.push(indices);\n              }\n            }\n          } else {\n            totalScore = 0;\n            numMatches = 0;\n            allIndices.length = 0;\n            break;\n          }\n        } // OR condition, so if TRUE, return\n\n\n        if (numMatches) {\n          var result = {\n            isMatch: true,\n            score: totalScore / numMatches\n          };\n\n          if (includeMatches) {\n            result.indices = allIndices;\n          }\n\n          return result;\n        }\n      } // Nothing was matched\n\n\n      return {\n        isMatch: false,\n        score: 1\n      };\n    }\n  }], [{\n    key: \"condition\",\n    value: function condition(_, options) {\n      return options.useExtendedSearch;\n    }\n  }]);\n\n  return ExtendedSearch;\n}();\n\nvar registeredSearchers = [];\nfunction register() {\n  registeredSearchers.push.apply(registeredSearchers, arguments);\n}\nfunction createSearcher(pattern, options) {\n  for (var i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    var searcherClass = registeredSearchers[i];\n\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options);\n    }\n  }\n\n  return new BitapSearch(pattern, options);\n}\n\nvar LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\nvar KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nvar isExpression = function isExpression(query) {\n  return !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n};\n\nvar isPath = function isPath(query) {\n  return !!query[KeyType.PATH];\n};\n\nvar isLeaf = function isLeaf(query) {\n  return !isArray(query) && isObject(query) && !isExpression(query);\n};\n\nvar convertToExplicit = function convertToExplicit(query) {\n  return _defineProperty({}, LogicalOperator.AND, Object.keys(query).map(function (key) {\n    return _defineProperty({}, key, query[key]);\n  }));\n}; // When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\n\n\nfunction parse(query, options) {\n  var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref3$auto = _ref3.auto,\n      auto = _ref3$auto === void 0 ? true : _ref3$auto;\n\n  var next = function next(query) {\n    var keys = Object.keys(query);\n    var isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query));\n    }\n\n    if (isLeaf(query)) {\n      var key = isQueryPath ? query[KeyType.PATH] : keys[0];\n      var pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key));\n      }\n\n      var obj = {\n        keyId: createKeyId(key),\n        pattern: pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj;\n    }\n\n    var node = {\n      children: [],\n      operator: keys[0]\n    };\n    keys.forEach(function (key) {\n      var value = query[key];\n\n      if (isArray(value)) {\n        value.forEach(function (item) {\n          node.children.push(next(item));\n        });\n      }\n    });\n    return node;\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query);\n}\n\nfunction computeScore(results, _ref) {\n  var _ref$ignoreFieldNorm = _ref.ignoreFieldNorm,\n      ignoreFieldNorm = _ref$ignoreFieldNorm === void 0 ? Config.ignoreFieldNorm : _ref$ignoreFieldNorm;\n  results.forEach(function (result) {\n    var totalScore = 1;\n    result.matches.forEach(function (_ref2) {\n      var key = _ref2.key,\n          norm = _ref2.norm,\n          score = _ref2.score;\n      var weight = key ? key.weight : null;\n      totalScore *= Math.pow(score === 0 && weight ? Number.EPSILON : score, (weight || 1) * (ignoreFieldNorm ? 1 : norm));\n    });\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  var matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return;\n  }\n\n  matches.forEach(function (match) {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return;\n    }\n\n    var indices = match.indices,\n        value = match.value;\n    var obj = {\n      indices: indices,\n      value: value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(results, docs) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$includeMatches = _ref.includeMatches,\n      includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,\n      _ref$includeScore = _ref.includeScore,\n      includeScore = _ref$includeScore === void 0 ? Config.includeScore : _ref$includeScore;\n\n  var transformers = [];\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n  return results.map(function (result) {\n    var idx = result.idx;\n    var data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach(function (transformer) {\n        transformer(result, data);\n      });\n    }\n\n    return data;\n  });\n}\n\nvar Fuse$1 = /*#__PURE__*/function () {\n  function Fuse(docs) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, Fuse);\n\n    this.options = _objectSpread2(_objectSpread2({}, Config), options);\n\n    if (this.options.useExtendedSearch && !true) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE);\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n    this.setCollection(docs, index);\n  }\n\n  _createClass(Fuse, [{\n    key: \"setCollection\",\n    value: function setCollection(docs, index) {\n      this._docs = docs;\n\n      if (index && !(index instanceof FuseIndex)) {\n        throw new Error(INCORRECT_INDEX_TYPE);\n      }\n\n      this._myIndex = index || createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(doc) {\n      if (!isDefined(doc)) {\n        return;\n      }\n\n      this._docs.push(doc);\n\n      this._myIndex.add(doc);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var predicate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function\n        /* doc, idx */\n      () {\n        return false;\n      };\n      var results = [];\n\n      for (var i = 0, len = this._docs.length; i < len; i += 1) {\n        var doc = this._docs[i];\n\n        if (predicate(doc, i)) {\n          this.removeAt(i);\n          i -= 1;\n          len -= 1;\n          results.push(doc);\n        }\n      }\n\n      return results;\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(idx) {\n      this._docs.splice(idx, 1);\n\n      this._myIndex.removeAt(idx);\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex() {\n      return this._myIndex;\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$limit = _ref.limit,\n          limit = _ref$limit === void 0 ? -1 : _ref$limit;\n\n      var _this$options = this.options,\n          includeMatches = _this$options.includeMatches,\n          includeScore = _this$options.includeScore,\n          shouldSort = _this$options.shouldSort,\n          sortFn = _this$options.sortFn,\n          ignoreFieldNorm = _this$options.ignoreFieldNorm;\n      var results = isString(query) ? isString(this._docs[0]) ? this._searchStringList(query) : this._searchObjectList(query) : this._searchLogical(query);\n      computeScore(results, {\n        ignoreFieldNorm: ignoreFieldNorm\n      });\n\n      if (shouldSort) {\n        results.sort(sortFn);\n      }\n\n      if (isNumber(limit) && limit > -1) {\n        results = results.slice(0, limit);\n      }\n\n      return format(results, this._docs, {\n        includeMatches: includeMatches,\n        includeScore: includeScore\n      });\n    }\n  }, {\n    key: \"_searchStringList\",\n    value: function _searchStringList(query) {\n      var searcher = createSearcher(query, this.options);\n      var records = this._myIndex.records;\n      var results = []; // Iterate over every string in the index\n\n      records.forEach(function (_ref2) {\n        var text = _ref2.v,\n            idx = _ref2.i,\n            norm = _ref2.n;\n\n        if (!isDefined(text)) {\n          return;\n        }\n\n        var _searcher$searchIn = searcher.searchIn(text),\n            isMatch = _searcher$searchIn.isMatch,\n            score = _searcher$searchIn.score,\n            indices = _searcher$searchIn.indices;\n\n        if (isMatch) {\n          results.push({\n            item: text,\n            idx: idx,\n            matches: [{\n              score: score,\n              value: text,\n              norm: norm,\n              indices: indices\n            }]\n          });\n        }\n      });\n      return results;\n    }\n  }, {\n    key: \"_searchLogical\",\n    value: function _searchLogical(query) {\n      var _this = this;\n\n      var expression = parse(query, this.options);\n\n      var evaluate = function evaluate(node, item, idx) {\n        if (!node.children) {\n          var keyId = node.keyId,\n              searcher = node.searcher;\n\n          var matches = _this._findMatches({\n            key: _this._keyStore.get(keyId),\n            value: _this._myIndex.getValueForItemAtKeyId(item, keyId),\n            searcher: searcher\n          });\n\n          if (matches && matches.length) {\n            return [{\n              idx: idx,\n              item: item,\n              matches: matches\n            }];\n          }\n\n          return [];\n        }\n\n        var res = [];\n\n        for (var i = 0, len = node.children.length; i < len; i += 1) {\n          var child = node.children[i];\n          var result = evaluate(child, item, idx);\n\n          if (result.length) {\n            res.push.apply(res, _toConsumableArray(result));\n          } else if (node.operator === LogicalOperator.AND) {\n            return [];\n          }\n        }\n\n        return res;\n      };\n\n      var records = this._myIndex.records;\n      var resultMap = {};\n      var results = [];\n      records.forEach(function (_ref3) {\n        var item = _ref3.$,\n            idx = _ref3.i;\n\n        if (isDefined(item)) {\n          var expResults = evaluate(expression, item, idx);\n\n          if (expResults.length) {\n            // Dedupe when adding\n            if (!resultMap[idx]) {\n              resultMap[idx] = {\n                idx: idx,\n                item: item,\n                matches: []\n              };\n              results.push(resultMap[idx]);\n            }\n\n            expResults.forEach(function (_ref4) {\n              var _resultMap$idx$matche;\n\n              var matches = _ref4.matches;\n\n              (_resultMap$idx$matche = resultMap[idx].matches).push.apply(_resultMap$idx$matche, _toConsumableArray(matches));\n            });\n          }\n        }\n      });\n      return results;\n    }\n  }, {\n    key: \"_searchObjectList\",\n    value: function _searchObjectList(query) {\n      var _this2 = this;\n\n      var searcher = createSearcher(query, this.options);\n      var _this$_myIndex = this._myIndex,\n          keys = _this$_myIndex.keys,\n          records = _this$_myIndex.records;\n      var results = []; // List is Array<Object>\n\n      records.forEach(function (_ref5) {\n        var item = _ref5.$,\n            idx = _ref5.i;\n\n        if (!isDefined(item)) {\n          return;\n        }\n\n        var matches = []; // Iterate over every key (i.e, path), and fetch the value at that key\n\n        keys.forEach(function (key, keyIndex) {\n          matches.push.apply(matches, _toConsumableArray(_this2._findMatches({\n            key: key,\n            value: item[keyIndex],\n            searcher: searcher\n          })));\n        });\n\n        if (matches.length) {\n          results.push({\n            idx: idx,\n            item: item,\n            matches: matches\n          });\n        }\n      });\n      return results;\n    }\n  }, {\n    key: \"_findMatches\",\n    value: function _findMatches(_ref6) {\n      var key = _ref6.key,\n          value = _ref6.value,\n          searcher = _ref6.searcher;\n\n      if (!isDefined(value)) {\n        return [];\n      }\n\n      var matches = [];\n\n      if (isArray(value)) {\n        value.forEach(function (_ref7) {\n          var text = _ref7.v,\n              idx = _ref7.i,\n              norm = _ref7.n;\n\n          if (!isDefined(text)) {\n            return;\n          }\n\n          var _searcher$searchIn2 = searcher.searchIn(text),\n              isMatch = _searcher$searchIn2.isMatch,\n              score = _searcher$searchIn2.score,\n              indices = _searcher$searchIn2.indices;\n\n          if (isMatch) {\n            matches.push({\n              score: score,\n              key: key,\n              value: text,\n              idx: idx,\n              norm: norm,\n              indices: indices\n            });\n          }\n        });\n      } else {\n        var text = value.v,\n            norm = value.n;\n\n        var _searcher$searchIn3 = searcher.searchIn(text),\n            isMatch = _searcher$searchIn3.isMatch,\n            score = _searcher$searchIn3.score,\n            indices = _searcher$searchIn3.indices;\n\n        if (isMatch) {\n          matches.push({\n            score: score,\n            key: key,\n            value: text,\n            norm: norm,\n            indices: indices\n          });\n        }\n      }\n\n      return matches;\n    }\n  }]);\n\n  return Fuse;\n}();\n\nFuse$1.version = '6.6.2';\nFuse$1.createIndex = createIndex;\nFuse$1.parseIndex = parseIndex;\nFuse$1.config = Config;\n\n{\n  Fuse$1.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nvar Fuse = Fuse$1;\n\nmodule.exports = Fuse;\n", "import { Handler, HandlerContext, HandlerEvent } from '@netlify/functions';\nimport fetch from 'isomorphic-fetch';\nimport PImage from 'pureimage';\nimport Fuse from 'fuse.js';\nimport { Bitmap } from 'pureimage/types/bitmap';\nimport { PassThrough } from 'stream';\n\nconst FONT_PATH = 'fonts/impact.ttf';\nconst FONT_NAME = 'Source Sans Pro';\nconst FONT_SIZE = '48pt';\n\nconst OUTPUT_FILE_TYPE: 'jpeg' | 'png' = 'jpeg';\n\n/**\n * Function to output Bitmap to a buffer using stream.PassThrough. The default\n * examples of pureimage use writeFile to persist images on disk. In a serverless\n * function we want to keep it in memory.\n */\nconst imageToBuffer = (\n  image: Bitmap,\n  type: string = 'jpeg'\n): Promise<Buffer> => {\n  return new Promise((resolve) => {\n    const stream = new PassThrough();\n    const imageData: Uint8Array[] = [];\n\n    stream.on('data', (chunk) => {\n      imageData.push(chunk);\n    });\n\n    stream.on('end', () => {\n      resolve(Buffer.concat(imageData));\n    });\n\n    // @ts-ignore No overlap error from TypeScript\n    if (type === 'png') {\n      PImage.encodePNGToStream(image, stream);\n      return;\n    }\n\n    PImage.encodeJPEGToStream(image, stream);\n  });\n};\n\nconst loadFont = (fontPath: string, fontName: string): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    let font;\n\n    // 3rd, 4th and 5th parameters are required by TypeScript...\n    try {\n      font = PImage.registerFont(fontPath, fontName, 400, 'normal', 'normal');\n      font.load(() => {\n        resolve();\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\nconst getMemeList = async () => {\n  try {\n    const response = await fetch('https://memes.jlopes.eu/memes.json')\n      .then((res) => res.json())\n      .then((data) => {\n        return data.data.memes;\n      });\n    return response;\n  } catch (err) {\n    return err;\n  }\n};\n\nconst handler: Handler = async (\n  { queryStringParameters }: HandlerEvent,\n  context: HandlerContext\n) => {\n  const { name, text0, text1, text2, text3, text4 } =\n    queryStringParameters as any;\n  const memeList = await getMemeList();\n\n  const result = new Fuse(memeList, {\n    includeScore: true,\n    minMatchCharLength: 3,\n    threshold: 0.2,\n    // Search in `author` and in `tags` array\n    keys: ['name'],\n  }).search(name);\n\n  if (result.length) {\n    const meme = result[0].item as any;\n\n    const image = PImage.make(meme.width, meme.height, {});\n    const ctx = image.getContext('2d');\n    const fileType = meme.url.split('.').pop();\n    const logo = await fetch(meme.url)\n      .then((res) => res.body)\n      .then((stream) => {\n        return fileType === 'png'\n          ? PImage.decodePNGFromStream(stream)\n          : PImage.decodeJPEGFromStream(stream);\n      });\n    ctx.drawImage(logo, 0, 0, meme.width, meme.height);\n\n    const hasText = text0 !== undefined && typeof text0 === 'string';\n\n    if (hasText) {\n      try {\n        if (meme.font) {\n          if (meme.font.family.includes('Arial')) {\n            await loadFont('./fonts/arial.ttf', 'Arial');\n          } else if (meme.font.family.includes('Comic')) {\n            await loadFont('./fonts/comic.ttf', 'Comic Sans');\n          } else {\n            await loadFont('./fonts/impact.ttf', 'Impact');\n          }\n        } else {\n          await loadFont('./fonts/impact.ttf', 'Impact');\n        }\n\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.font = '48px Impact';\n\n        if (meme.boxes) {\n          let texts = [text0, text1, text2, text3, text4];\n          meme.boxes.forEach((box: any, i: number) => {\n            ctx.fillStyle = meme.color || '#FFFFFF';\n            ctx.strokeStyle = meme.stroke || '#000000';\n\n            let text = texts[i];\n\n            if (typeof box.size !== 'undefined') {\n              console.log(meme);\n              ctx.font = `${box.size}px ${meme.font.family}`;\n            } else {\n              ctx.font = `${meme.font.size}px ${meme.font.family}`;\n            }\n\n            console.log('sup');\n\n            if (text) {\n              let lines = text.split('\\n');\n\n              if (lines.length > 1) {\n                let fontSize = ctx.font.split('px')[0];\n                ctx.font = ctx.font.replace(\n                  fontSize,\n                  `${Math.max(\n                    parseInt(fontSize) / 2,\n                    (parseInt(fontSize) * 2) / lines.length\n                  )}`\n                );\n              }\n              lines.forEach((line: string, i: number) => {\n                let text = meme.uppercase ? line.toUpperCase() : line;\n                const metrics = ctx.measureText(text);\n                const fontHeight =\n                  metrics.emHeightAscent + metrics.emHeightDescent;\n                ctx.fillStyle = box.color || ctx.fillStyle;\n                ctx.strokeStyle = box.stroke || ctx.strokeStyle;\n                ctx.save();\n                ctx.translate(\n                  box.pos[0],\n                  box.pos[1] + (10 + fontHeight) * i - fontHeight / 2\n                );\n                if (box.angle) {\n                  ctx.rotate((box.angle * Math.PI) / 180);\n                }\n                ctx.lineWidth = 2;\n                ctx.strokeText(text, 0, 0);\n                ctx.fillText(text, 0, 0);\n                ctx.restore();\n              });\n            }\n          });\n        }\n      } catch (err) {\n        //\n      }\n    }\n\n    const buffer = await imageToBuffer(image);\n\n    return {\n      statusCode: 200,\n      headers: {\n        'Content-Type':\n          OUTPUT_FILE_TYPE === 'jpeg' ? 'image/jpeg' : 'image/png',\n        // 'Cache-Control': 'public, max-age=604800, immutable', // 7 days\n      },\n      body: buffer.toString('base64'),\n      isBase64Encoded: true,\n    };\n  }\n\n  return {\n    statusCode: 200,\n    body: 'Hello world!',\n  };\n};\n\nexport { handler };\n"],
  "mappings": "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AAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,KAAM;AAAA,QAC3B,EAAC,OAAO,MAAQ,KAAK,MAAM;AAAA,QAC3B,EAAC,OAAO,OAA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C;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YACnC;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA,YAAK;AAAA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",
  "names": []
}
